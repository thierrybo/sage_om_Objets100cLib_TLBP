Unit Objets100cLib_3_0_TLB;

//  Imported Objets100cLib on 29/06/2018 21:40:05 from C:\PROGRA~2\COMMON~1\Sage\OBJETS~1\OBJETS~1.DLL

{$mode delphi}{$H+}

interface

//  Warning: renamed record member 'type' in tagSTATSTG to 'type_'
// Dependency: stdole v2 (stdole2.pas)
//  Warning: 'GUID' not automatable in IBITransactionaldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBITransactionaldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBITransactionaldisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBITransactionaldisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBITransactionaldisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBITransactionaldisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBITransactionaldisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBITransactionaldisp.Invoke
//  Warning: 'GUID' not automatable in ISynchroLogdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ISynchroLogdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ISynchroLogdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ISynchroLogdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ISynchroLogdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ISynchroLogdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ISynchroLogdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ISynchroLogdisp.Invoke
//  Warning: 'GUID' not automatable in IPredicatedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicatedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicatedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPredicatedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPredicatedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPredicatedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPredicatedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPredicatedisp.Invoke
//  Warning: 'GUID' not automatable in IPredicateValuedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateValuedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateValuedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPredicateValuedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPredicateValuedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPredicateValuedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPredicateValuedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPredicateValuedisp.Invoke
//  Warning: 'GUID' not automatable in IPredicateComparisondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateComparisondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateComparisondisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPredicateComparisondisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPredicateComparisondisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPredicateComparisondisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPredicateComparisondisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPredicateComparisondisp.Invoke
//  Warning: 'GUID' not automatable in IBIValuesInsertabledisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIValuesInsertabledisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIValuesInsertabledisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIValuesInsertabledisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIValuesInsertabledisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIValuesInsertabledisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIValuesInsertabledisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIValuesInsertabledisp.Invoke
//  Warning: 'GUID' not automatable in IPredicateCompounddisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateCompounddisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateCompounddisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPredicateCompounddisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPredicateCompounddisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPredicateCompounddisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPredicateCompounddisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPredicateCompounddisp.Invoke
//  Warning: 'GUID' not automatable in IBICollectionPredicatedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICollectionPredicatedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICollectionPredicatedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBICollectionPredicatedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBICollectionPredicatedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBICollectionPredicatedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBICollectionPredicatedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBICollectionPredicatedisp.Invoke
//  Warning: 'GUID' not automatable in IPredicateBuilderdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateBuilderdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPredicateBuilderdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPredicateBuilderdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPredicateBuilderdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPredicateBuilderdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPredicateBuilderdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPredicateBuilderdisp.Invoke
//  Warning: 'GUID' not automatable in IArrondidisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IArrondidisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IArrondidisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IArrondidisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IArrondidisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IArrondidisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IArrondidisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IArrondidisp.Invoke
//  Warning: renamed method 'Write' in IBIPersistObject to 'Write_'
//  Warning: renamed method 'Read' in IBIPersistObject to 'Read_'
//  Warning: 'GUID' not automatable in IBIPersistObjectdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIPersistObjectdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIPersistObjectdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIPersistObjectdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIPersistObjectdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIPersistObjectdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIPersistObjectdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIPersistObjectdisp.Invoke
//  Warning: renamed method 'Write' in IBIPersistObject to 'Write_'
//  Warning: renamed method 'Read' in IBIPersistObject to 'Read_'
//  Warning: renamed method 'Read' in IBITypeObjectFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBITypeObjectFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBITypeObjectFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBITypeObjectFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBITypeObjectFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBITypeObjectFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBITypeObjectFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBITypeObjectFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBITypeObjectFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBITypeObjectFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBICollectiondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICollectiondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICollectiondisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBICollectiondisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBICollectiondisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBICollectiondisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBICollectiondisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBICollectiondisp.Invoke
//  Warning: 'GUID' not automatable in IBIObjectIDdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIObjectIDdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIObjectIDdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIObjectIDdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIObjectIDdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIObjectIDdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIObjectIDdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIObjectIDdisp.Invoke
//  Warning: 'GUID' not automatable in IBICollectionDispatchdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICollectionDispatchdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICollectionDispatchdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBICollectionDispatchdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBICollectionDispatchdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBICollectionDispatchdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBICollectionDispatchdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBICollectionDispatchdisp.Invoke
//  Warning: 'GUID' not automatable in IBIPersistStreamdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIPersistStreamdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIPersistStreamdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIPersistStreamdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIPersistStreamdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIPersistStreamdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIPersistStreamdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIPersistStreamdisp.Invoke
//  Warning: 'GUID' not automatable in IDatabaseInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDatabaseInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDatabaseInfodisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDatabaseInfodisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDatabaseInfodisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDatabaseInfodisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDatabaseInfodisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDatabaseInfodisp.Invoke
//  Warning: 'GUID' not automatable in ISynchroStreamdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ISynchroStreamdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ISynchroStreamdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ISynchroStreamdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ISynchroStreamdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ISynchroStreamdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ISynchroStreamdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ISynchroStreamdisp.Invoke
//  Warning: 'PSafeArray' not automatable in ISynchroStreamdisp.BeginExtraction
//  Warning: 'GUID' not automatable in IBIObjectIDExternaldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIObjectIDExternaldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIObjectIDExternaldisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIObjectIDExternaldisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIObjectIDExternaldisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIObjectIDExternaldisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIObjectIDExternaldisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIObjectIDExternaldisp.Invoke
//  Warning: 'GUID' not automatable in IBIMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIMediadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIMediadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIMediadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIMediadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIMediadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIMediadisp.Invoke
//  Warning: renamed method 'Write' in IBIMedia to 'Write_'
//  Warning: renamed method 'Read' in IBIMedia to 'Read_'
//  Warning: 'GUID' not automatable in IBICategorieComptadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICategorieComptadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBICategorieComptadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBICategorieComptadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBICategorieComptadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBICategorieComptadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBICategorieComptadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBICategorieComptadisp.Invoke
//  Warning: renamed method 'Write' in IBICategorieCompta to 'Write_'
//  Warning: renamed method 'Read' in IBICategorieCompta to 'Read_'
//  Warning: 'GUID' not automatable in IDocValorisationdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValorisationdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValorisationdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDocValorisationdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDocValorisationdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDocValorisationdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDocValorisationdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDocValorisationdisp.Invoke
//  Warning: 'GUID' not automatable in IDocValoTaxesdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValoTaxesdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValoTaxesdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDocValoTaxesdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDocValoTaxesdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDocValoTaxesdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDocValoTaxesdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDocValoTaxesdisp.Invoke
//  Warning: 'GUID' not automatable in IDocValoTaxedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValoTaxedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValoTaxedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDocValoTaxedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDocValoTaxedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDocValoTaxedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDocValoTaxedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDocValoTaxedisp.Invoke
//  Warning: 'GUID' not automatable in IDocValoEscomptedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValoEscomptedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocValoEscomptedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDocValoEscomptedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDocValoEscomptedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDocValoEscomptedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDocValoEscomptedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDocValoEscomptedisp.Invoke
//  Warning: 'GUID' not automatable in IFrais2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFrais2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFrais2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IFrais2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IFrais2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IFrais2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IFrais2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IFrais2disp.Invoke
//  Warning: 'GUID' not automatable in IFraisElem2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFraisElem2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFraisElem2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IFraisElem2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IFraisElem2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IFraisElem2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IFraisElem2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IFraisElem2disp.Invoke
//  Warning: 'GUID' not automatable in IRemise2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IRemise2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IRemise2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IRemise2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IRemise2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IRemise2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IRemise2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IRemise2disp.Invoke
//  Warning: 'GUID' not automatable in IRemiseElem2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IRemiseElem2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IRemiseElem2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IRemiseElem2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IRemiseElem2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IRemiseElem2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IRemiseElem2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IRemiseElem2disp.Invoke
//  Warning: 'GUID' not automatable in IBPDevise2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDevise2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDevise2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPDevise2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPDevise2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPDevise2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPDevise2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPDevise2disp.Invoke
//  Warning: renamed method 'Write' in IBPDevise2 to 'Write_'
//  Warning: renamed method 'Read' in IBPDevise2 to 'Read_'
//  Warning: 'GUID' not automatable in IBPDeviseFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDeviseFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDeviseFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPDeviseFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPDeviseFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPDeviseFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPDeviseFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPDeviseFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBPDeviseFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IAdressedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IAdressedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IAdressedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IAdressedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IAdressedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IAdressedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IAdressedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IAdressedisp.Invoke
//  Warning: 'GUID' not automatable in ITelecomdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITelecomdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITelecomdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITelecomdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITelecomdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITelecomdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITelecomdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITelecomdisp.Invoke
//  Warning: 'GUID' not automatable in ITarif2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITarif2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITarif2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITarif2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITarif2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITarif2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITarif2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITarif2disp.Invoke
//  Warning: 'GUID' not automatable in IDevisedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDevisedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDevisedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDevisedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDevisedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDevisedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDevisedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDevisedisp.Invoke
//  Warning: 'GUID' not automatable in ITarifVente2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITarifVente2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITarifVente2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITarifVente2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITarifVente2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITarifVente2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITarifVente2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITarifVente2disp.Invoke
//  Warning: 'GUID' not automatable in ITarifAchat2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITarifAchat2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITarifAchat2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITarifAchat2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITarifAchat2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITarifAchat2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITarifAchat2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITarifAchat2disp.Invoke
//  Warning: renamed property 'type' in IBPAnalytiqueRupture to 'type_'
//  Warning: 'GUID' not automatable in IBPAnalytiqueRupturedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalytiqueRupturedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalytiqueRupturedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAnalytiqueRupturedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAnalytiqueRupturedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAnalytiqueRupturedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAnalytiqueRupturedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAnalytiqueRupturedisp.Invoke
//  Warning: 'GUID' not automatable in IDocLigneValorisationdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocLigneValorisationdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDocLigneValorisationdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDocLigneValorisationdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDocLigneValorisationdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDocLigneValorisationdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDocLigneValorisationdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDocLigneValorisationdisp.Invoke
//  Warning: 'GUID' not automatable in ITransformationdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITransformationdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITransformationdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITransformationdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITransformationdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITransformationdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITransformationdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITransformationdisp.Invoke
//  Warning: 'GUID' not automatable in ITransformationVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITransformationVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITransformationVentedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITransformationVentedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITransformationVentedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITransformationVentedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITransformationVentedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITransformationVentedisp.Invoke
//  Warning: 'GUID' not automatable in IPMDocTransformerdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocTransformerdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocTransformerdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMDocTransformerdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMDocTransformerdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMDocTransformerdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMDocTransformerdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMDocTransformerdisp.Invoke
//  Warning: 'GUID' not automatable in IPMProcessdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMProcessdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMProcessdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMProcessdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMProcessdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMProcessdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMProcessdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMProcessdisp.Invoke
//  Warning: 'GUID' not automatable in IFailInfoColdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFailInfoColdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFailInfoColdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IFailInfoColdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IFailInfoColdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IFailInfoColdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IFailInfoColdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IFailInfoColdisp.Invoke
//  Warning: renamed property 'Text' in IFailInfo to 'Text_'
//  Warning: 'GUID' not automatable in IFailInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFailInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IFailInfodisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IFailInfodisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IFailInfodisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IFailInfodisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IFailInfodisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IFailInfodisp.Invoke
//  Warning: 'GUID' not automatable in IBODocument3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocument3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocument3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocument3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocument3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocument3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocument3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocument3disp.Invoke
//  Warning: renamed method 'Write' in IBODocument3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocument3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBODocumentFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBIFieldsdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFieldsdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFieldsdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIFieldsdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIFieldsdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIFieldsdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIFieldsdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIFieldsdisp.Invoke
//  Warning: renamed property 'type' in IBIField to 'type_'
//  Warning: 'GUID' not automatable in IBIFielddisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFielddisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFielddisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIFielddisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIFielddisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIFielddisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIFielddisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIFielddisp.Invoke
//  Warning: 'GUID' not automatable in IBODocumentLigneFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentLigneFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentLigneFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentLigneFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentLigneFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentLigneFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBODocumentLigneFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBODepot3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepot3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepot3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODepot3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODepot3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODepot3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODepot3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODepot3disp.Invoke
//  Warning: renamed method 'Write' in IBODepot3 to 'Write_'
//  Warning: renamed method 'Read' in IBODepot3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODepotFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODepotFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODepotFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODepotFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODepotFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODepotFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBODepotFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBODepotEmplacementFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotEmplacementFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotEmplacementFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODepotEmplacementFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODepotEmplacementFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODepotEmplacementFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODepotEmplacementFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODepotEmplacementFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBODepotEmplacementFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBODepotEmplacementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotEmplacementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotEmplacementdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODepotEmplacementdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODepotEmplacementdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODepotEmplacementdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODepotEmplacementdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODepotEmplacementdisp.Invoke
//  Warning: renamed method 'Write' in IBODepotEmplacement to 'Write_'
//  Warning: renamed method 'Read' in IBODepotEmplacement to 'Read_'
//  Warning: 'GUID' not automatable in IBISouchedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBISouchedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBISouchedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBISouchedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBISouchedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBISouchedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBISouchedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBISouchedisp.Invoke
//  Warning: renamed method 'Write' in IBISouche to 'Write_'
//  Warning: renamed method 'Read' in IBISouche to 'Read_'
//  Warning: 'GUID' not automatable in IBIValuesdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIValuesdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIValuesdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIValuesdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIValuesdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIValuesdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIValuesdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIValuesdisp.Invoke
//  Warning: 'GUID' not automatable in IBOCollaborateurdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCollaborateurdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCollaborateurdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCollaborateurdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCollaborateurdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCollaborateurdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCollaborateurdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCollaborateurdisp.Invoke
//  Warning: renamed method 'Write' in IBOCollaborateur to 'Write_'
//  Warning: renamed method 'Read' in IBOCollaborateur to 'Read_'
//  Warning: 'GUID' not automatable in IBOCollaborateurFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCollaborateurFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCollaborateurFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCollaborateurFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCollaborateurFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCollaborateurFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCollaborateurFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCollaborateurFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOCollaborateurFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteA3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteA3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteA3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteA3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteA3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteA3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteA3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteA3disp.Invoke
//  Warning: renamed method 'Write' in IBOCompteA3 to 'Write_'
//  Warning: renamed method 'Read' in IBOCompteA3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteAFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteAFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteAFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteAFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteAFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteAFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteAFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteAFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOCompteAFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPAnalytique3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalytique3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalytique3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAnalytique3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAnalytique3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAnalytique3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAnalytique3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAnalytique3disp.Invoke
//  Warning: renamed method 'Write' in IBPAnalytique3 to 'Write_'
//  Warning: renamed method 'Read' in IBPAnalytique3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPAnalytiqueFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalytiqueFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalytiqueFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAnalytiqueFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAnalytiqueFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAnalytiqueFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAnalytiqueFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAnalytiqueFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBPAnalytiqueFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPAnalysedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalysedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalysedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAnalysedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAnalysedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAnalysedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAnalysedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAnalysedisp.Invoke
//  Warning: renamed method 'Write' in IBPAnalyse to 'Write_'
//  Warning: renamed method 'Read' in IBPAnalyse to 'Read_'
//  Warning: 'GUID' not automatable in IBPAnalyseFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalyseFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAnalyseFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAnalyseFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAnalyseFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAnalyseFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAnalyseFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAnalyseFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPAnalyseFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticle3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticle3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticle3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticle3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticle3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticle3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticle3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticle3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticle3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticle3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOArticleFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamille3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamille3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamille3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamille3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamille3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamille3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamille3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamille3disp.Invoke
//  Warning: renamed method 'Write' in IBOFamille3 to 'Write_'
//  Warning: renamed method 'Read' in IBOFamille3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBOFamilleFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBPProduit2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPProduit2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPProduit2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPProduit2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPProduit2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPProduit2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPProduit2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPProduit2disp.Invoke
//  Warning: renamed method 'Write' in IBPProduit2 to 'Write_'
//  Warning: renamed method 'Read' in IBPProduit2 to 'Read_'
//  Warning: 'GUID' not automatable in IBPProduitFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPProduitFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPProduitFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPProduitFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPProduitFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPProduitFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPProduitFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPProduitFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBPProduitFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBPUnitedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPUnitedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPUnitedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPUnitedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPUnitedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPUnitedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPUnitedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPUnitedisp.Invoke
//  Warning: renamed method 'Write' in IBPUnite to 'Write_'
//  Warning: renamed method 'Read' in IBPUnite to 'Read_'
//  Warning: 'GUID' not automatable in IBPUniteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPUniteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPUniteFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPUniteFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPUniteFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPUniteFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPUniteFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPUniteFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPUniteFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOModele2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModele2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModele2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModele2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModele2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModele2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModele2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModele2disp.Invoke
//  Warning: renamed method 'Write' in IBOModele2 to 'Write_'
//  Warning: renamed method 'Read' in IBOModele2 to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOModeleFactory to 'Read_'
//  Warning: renamed property 'type' in IBOBaremeSolde to 'type_'
//  Warning: 'GUID' not automatable in IBOBaremeSoldedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeSoldedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeSoldedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeSoldedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeSoldedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeSoldedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeSoldedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeSoldedisp.Invoke
//  Warning: renamed method 'Write' in IBOBaremeSolde to 'Write_'
//  Warning: renamed method 'Read' in IBOBaremeSolde to 'Read_'
//  Warning: 'GUID' not automatable in IBOBaremeSoldeFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeSoldeFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeSoldeFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeSoldeFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeSoldeFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeSoldeFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeSoldeFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeSoldeFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOBaremeSoldeFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseur3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFournisseur3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFournisseur3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFournisseur3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFournisseur3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFournisseur3disp.Invoke
//  Warning: renamed method 'Write' in IBOFournisseur3 to 'Write_'
//  Warning: renamed method 'Read' in IBOFournisseur3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersPart3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersPart3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersPart3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersPart3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersPart3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersPart3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersPart3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersPart3disp.Invoke
//  Warning: renamed method 'Write' in IBOTiersPart3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTiersPart3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiers3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiers3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiers3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiers3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiers3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiers3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiers3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiers3disp.Invoke
//  Warning: renamed method 'Write' in IBOTiers3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTiers3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOTiersFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersCompteGFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersCompteGFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersCompteGFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersCompteGFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersCompteGFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersCompteGFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersCompteGFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersCompteGFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOTiersCompteGFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteG3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteG3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteG3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteG3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteG3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteG3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteG3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteG3disp.Invoke
//  Warning: renamed method 'Write' in IBOCompteG3 to 'Write_'
//  Warning: renamed method 'Read' in IBOCompteG3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteGFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteGFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteGFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteGFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteGFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteGFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteGFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteGFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOCompteGFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteRdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteRdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteRdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteRdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteRdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteRdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteRdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteRdisp.Invoke
//  Warning: renamed method 'Write' in IBOCompteR to 'Write_'
//  Warning: renamed method 'Read' in IBOCompteR to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteGTiersFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteGTiersFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteGTiersFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteGTiersFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteGTiersFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteGTiersFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteGTiersFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteGTiersFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOCompteGTiersFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTaxe3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTaxe3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTaxe3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTaxe3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTaxe3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTaxe3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTaxe3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTaxe3disp.Invoke
//  Warning: renamed method 'Write' in IBOTaxe3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTaxe3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTaxeFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTaxeFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTaxeFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTaxeFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTaxeFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTaxeFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTaxeFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTaxeFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOTaxeFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPNatureComptedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureComptedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureComptedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPNatureComptedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPNatureComptedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPNatureComptedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPNatureComptedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPNatureComptedisp.Invoke
//  Warning: renamed method 'Write' in IBPNatureCompte to 'Write_'
//  Warning: renamed method 'Read' in IBPNatureCompte to 'Read_'
//  Warning: 'GUID' not automatable in IBPNatureCompteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureCompteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureCompteFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPNatureCompteFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPNatureCompteFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPNatureCompteFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPNatureCompteFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPNatureCompteFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPNatureCompteFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPNatureCompteDetdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureCompteDetdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureCompteDetdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPNatureCompteDetdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPNatureCompteDetdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPNatureCompteDetdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPNatureCompteDetdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPNatureCompteDetdisp.Invoke
//  Warning: renamed method 'Write' in IBPNatureCompteDet to 'Write_'
//  Warning: renamed method 'Read' in IBPNatureCompteDet to 'Read_'
//  Warning: 'GUID' not automatable in IBPNatureCompteDetFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureCompteDetFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPNatureCompteDetFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPNatureCompteDetFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPNatureCompteDetFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPNatureCompteDetFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPNatureCompteDetFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPNatureCompteDetFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPNatureCompteDetFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersBanque3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersBanque3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersBanque3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersBanque3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersBanque3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersBanque3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersBanque3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersBanque3disp.Invoke
//  Warning: renamed method 'Write' in IBOTiersBanque3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTiersBanque3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOJournal3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournal3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournal3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOJournal3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOJournal3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOJournal3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOJournal3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOJournal3disp.Invoke
//  Warning: renamed method 'Write' in IBOJournal3 to 'Write_'
//  Warning: renamed method 'Read' in IBOJournal3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOJournalFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournalFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournalFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOJournalFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOJournalFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOJournalFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOJournalFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOJournalFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOJournalFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleReglementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleReglementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleReglementdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleReglementdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleReglementdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleReglementdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleReglementdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleReglementdisp.Invoke
//  Warning: renamed method 'Write' in IBOModeleReglement to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleReglement to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleReglementFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleReglementFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleReglementFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleReglementFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleReglementFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleReglementFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleReglementFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleReglementFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOModeleReglementFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOFournisseurFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseurFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseurFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFournisseurFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFournisseurFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFournisseurFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFournisseurFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFournisseurFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOFournisseurFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOFournisseurTarifFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseurTarifFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseurTarifFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFournisseurTarifFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFournisseurTarifFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFournisseurTarifFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFournisseurTarifFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFournisseurTarifFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOFournisseurTarifFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifFournisseur3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifFournisseur3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifFournisseur3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifFournisseur3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifFournisseur3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifFournisseur3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifFournisseur3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifFournisseur3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleTarif3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarif3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarif3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleTarif3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleTarif3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleTarif3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleTarif3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleTarif3disp.Invoke
//  Warning: renamed method 'Write' in IBIArticleTarif3 to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleTarif3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPGammedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPGammedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPGammedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPGammedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPGammedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPGammedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPGammedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPGammedisp.Invoke
//  Warning: renamed method 'Write' in IBPGamme to 'Write_'
//  Warning: renamed method 'Read' in IBPGamme to 'Read_'
//  Warning: 'GUID' not automatable in IBPGammeFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPGammeFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPGammeFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPGammeFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPGammeFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPGammeFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPGammeFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPGammeFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPGammeFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPExpedition3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPExpedition3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPExpedition3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPExpedition3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPExpedition3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPExpedition3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPExpedition3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPExpedition3disp.Invoke
//  Warning: renamed method 'Write' in IBPExpedition3 to 'Write_'
//  Warning: renamed method 'Read' in IBPExpedition3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPExpeditionFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPExpeditionFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPExpeditionFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPExpeditionFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPExpeditionFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPExpeditionFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPExpeditionFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPExpeditionFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBPExpeditionFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPConditionLivraisondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionLivraisondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionLivraisondisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPConditionLivraisondisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPConditionLivraisondisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPConditionLivraisondisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPConditionLivraisondisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPConditionLivraisondisp.Invoke
//  Warning: renamed method 'Write' in IBPConditionLivraison to 'Write_'
//  Warning: renamed method 'Read' in IBPConditionLivraison to 'Read_'
//  Warning: 'GUID' not automatable in IBPConditionLivraisonFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionLivraisonFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionLivraisonFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPConditionLivraisonFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPConditionLivraisonFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPConditionLivraisonFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPConditionLivraisonFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPConditionLivraisonFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPConditionLivraisonFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOFournisseurTarifFamilleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseurTarifFamilleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFournisseurTarifFamilleFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFournisseurTarifFamilleFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFournisseurTarifFamilleFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFournisseurTarifFamilleFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFournisseurTarifFamilleFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFournisseurTarifFamilleFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOFournisseurTarifFamilleFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleTarifFournisseurdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifFournisseurdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifFournisseurdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleTarifFournisseurdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleTarifFournisseurdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleTarifFournisseurdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleTarifFournisseurdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleTarifFournisseurdisp.Invoke
//  Warning: renamed method 'Write' in IBOFamilleTarifFournisseur to 'Write_'
//  Warning: renamed method 'Read' in IBOFamilleTarifFournisseur to 'Read_'
//  Warning: 'GUID' not automatable in IBIFamilleTarifdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFamilleTarifdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFamilleTarifdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIFamilleTarifdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIFamilleTarifdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIFamilleTarifdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIFamilleTarifdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIFamilleTarifdisp.Invoke
//  Warning: renamed method 'Write' in IBIFamilleTarif to 'Write_'
//  Warning: renamed method 'Read' in IBIFamilleTarif to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleGlossaireFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGlossaireFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGlossaireFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleGlossaireFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleGlossaireFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleGlossaireFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleGlossaireFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleGlossaireFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBOArticleGlossaireFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBOGlossaire2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOGlossaire2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOGlossaire2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOGlossaire2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOGlossaire2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOGlossaire2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOGlossaire2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOGlossaire2disp.Invoke
//  Warning: renamed method 'Write' in IBOGlossaire2 to 'Write_'
//  Warning: renamed method 'Read' in IBOGlossaire2 to 'Read_'
//  Warning: 'GUID' not automatable in IBOGlossaireFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOGlossaireFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOGlossaireFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOGlossaireFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOGlossaireFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOGlossaireFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOGlossaireFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOGlossaireFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOGlossaireFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleParamComptaFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleParamComptaFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleParamComptaFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleParamComptaFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleParamComptaFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleParamComptaFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleParamComptaFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleParamComptaFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOArticleParamComptaFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleParamCompta3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleParamCompta3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleParamCompta3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleParamCompta3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleParamCompta3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleParamCompta3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleParamCompta3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleParamCompta3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleParamCompta3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleParamCompta3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIParamCompta3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIParamCompta3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIParamCompta3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIParamCompta3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIParamCompta3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIParamCompta3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIParamCompta3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIParamCompta3disp.Invoke
//  Warning: renamed method 'Write' in IBIParamCompta3 to 'Write_'
//  Warning: renamed method 'Read' in IBIParamCompta3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleDepotFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepotFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepotFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepotFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepotFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepotFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleDepotFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleDepot3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepot3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepot3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepot3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepot3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepot3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepot3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepot3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleDepot3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleDepot3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleStock3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleStock3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleStock3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleStock3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleStock3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleStock3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleStock3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleStock3disp.Invoke
//  Warning: renamed method 'Write' in IBIArticleStock3 to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleStock3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleStockEmplFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleStockEmplFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleStockEmplFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleStockEmplFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleStockEmplFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleStockEmplFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleStockEmplFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleStockEmplFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBIArticleStockEmplFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleStockEmpldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleStockEmpldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleStockEmpldisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleStockEmpldisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleStockEmpldisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleStockEmpldisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleStockEmpldisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleStockEmpldisp.Invoke
//  Warning: renamed method 'Write' in IBIArticleStockEmpl to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleStockEmpl to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleDepotGammeFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotGammeFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotGammeFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepotGammeFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepotGammeFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepotGammeFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepotGammeFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepotGammeFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleDepotGammeFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleGammeEnum3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGammeEnum3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGammeEnum3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleGammeEnum3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleGammeEnum3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleGammeEnum3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleGammeEnum3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleGammeEnum3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleGammeEnum3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleGammeEnum3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleDepotGamme3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotGamme3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotGamme3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepotGamme3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepotGamme3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepotGamme3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepotGamme3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepotGamme3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleDepotGamme3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleDepotGamme3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleDepotLotFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotLotFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotLotFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepotLotFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepotLotFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepotLotFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepotLotFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepotLotFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleDepotLotFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleDepotLotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotLotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotLotdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepotLotdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepotLotdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepotLotdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepotLotdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepotLotdisp.Invoke
//  Warning: renamed method 'Write' in IBOArticleDepotLot to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleDepotLot to 'Read_'
//  Warning: 'GUID' not automatable in IBILotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBILotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBILotdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBILotdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBILotdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBILotdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBILotdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBILotdisp.Invoke
//  Warning: renamed method 'Write' in IBILot to 'Write_'
//  Warning: renamed method 'Read' in IBILot to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleGammeEnumFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGammeEnumFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGammeEnumFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleGammeEnumFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleGammeEnumFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleGammeEnumFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleGammeEnumFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleGammeEnumFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleGammeEnumFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleCondFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleCondFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleCondFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleCondFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleCondFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleCondFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleCondFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleCondFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleCondFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleCond3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleCond3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleCond3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleCond3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleCond3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleCond3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleCond3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleCond3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleCond3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleCond3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPConditionnementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionnementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionnementdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPConditionnementdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPConditionnementdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPConditionnementdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPConditionnementdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPConditionnementdisp.Invoke
//  Warning: renamed method 'Write' in IBPConditionnement to 'Write_'
//  Warning: renamed method 'Read' in IBPConditionnement to 'Read_'
//  Warning: 'GUID' not automatable in IBPConditionnementFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionnementFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionnementFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPConditionnementFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPConditionnementFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPConditionnementFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPConditionnementFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPConditionnementFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPConditionnementFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieTarifdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieTarifdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieTarifdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieTarifdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieTarifdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieTarifdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieTarifdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieTarifdisp.Invoke
//  Warning: renamed method 'Write' in IBPCategorieTarif to 'Write_'
//  Warning: renamed method 'Read' in IBPCategorieTarif to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieTarifFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieTarifFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieTarifFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieTarifFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieTarifFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieTarifFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieTarifFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieTarifFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPCategorieTarifFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClient3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOClient3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOClient3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOClient3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOClient3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOClient3disp.Invoke
//  Warning: renamed method 'Write' in IBOClient3 to 'Write_'
//  Warning: renamed method 'Read' in IBOClient3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOClientFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOClientFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOClientFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOClientFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOClientFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOClientFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOClientFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOClientTarifFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientTarifFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientTarifFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOClientTarifFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOClientTarifFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOClientTarifFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOClientTarifFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOClientTarifFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOClientTarifFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifClient3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifClient3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifClient3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifClient3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifClient3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifClient3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifClient3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifClient3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleTarifVente3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifVente3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifVente3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleTarifVente3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleTarifVente3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleTarifVente3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleTarifVente3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleTarifVente3disp.Invoke
//  Warning: renamed method 'Write' in IBIArticleTarifVente3 to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleTarifVente3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPArrondidisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPArrondidisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPArrondidisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPArrondidisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPArrondidisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPArrondidisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPArrondidisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPArrondidisp.Invoke
//  Warning: renamed method 'Write' in IBPArrondi to 'Write_'
//  Warning: renamed method 'Read' in IBPArrondi to 'Read_'
//  Warning: 'GUID' not automatable in IBPCodeRisquedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCodeRisquedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCodeRisquedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCodeRisquedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCodeRisquedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCodeRisquedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCodeRisquedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCodeRisquedisp.Invoke
//  Warning: renamed method 'Write' in IBPCodeRisque to 'Write_'
//  Warning: renamed method 'Read' in IBPCodeRisque to 'Read_'
//  Warning: 'GUID' not automatable in IBPCodeRisqueFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCodeRisqueFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCodeRisqueFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCodeRisqueFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCodeRisqueFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCodeRisqueFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCodeRisqueFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCodeRisqueFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPCodeRisqueFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPPeriodicitedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPPeriodicitedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPPeriodicitedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPPeriodicitedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPPeriodicitedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPPeriodicitedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPPeriodicitedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPPeriodicitedisp.Invoke
//  Warning: renamed method 'Write' in IBPPeriodicite to 'Write_'
//  Warning: renamed method 'Read' in IBPPeriodicite to 'Read_'
//  Warning: 'GUID' not automatable in IBPPeriodiciteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPPeriodiciteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPPeriodiciteFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPPeriodiciteFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPPeriodiciteFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPPeriodiciteFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPPeriodiciteFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPPeriodiciteFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPPeriodiciteFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOClientLivraison3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientLivraison3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientLivraison3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOClientLivraison3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOClientLivraison3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOClientLivraison3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOClientLivraison3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOClientLivraison3disp.Invoke
//  Warning: renamed method 'Write' in IBOClientLivraison3 to 'Write_'
//  Warning: renamed method 'Read' in IBOClientLivraison3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOClientTarifFamilleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientTarifFamilleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientTarifFamilleFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOClientTarifFamilleFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOClientTarifFamilleFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOClientTarifFamilleFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOClientTarifFamilleFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOClientTarifFamilleFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOClientTarifFamilleFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleTarifClientdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifClientdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifClientdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleTarifClientdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleTarifClientdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleTarifClientdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleTarifClientdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleTarifClientdisp.Invoke
//  Warning: renamed method 'Write' in IBOFamilleTarifClient to 'Write_'
//  Warning: renamed method 'Read' in IBOFamilleTarifClient to 'Read_'
//  Warning: 'GUID' not automatable in IBIFamilleTarifVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFamilleTarifVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFamilleTarifVentedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIFamilleTarifVentedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIFamilleTarifVentedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIFamilleTarifVentedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIFamilleTarifVentedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIFamilleTarifVentedisp.Invoke
//  Warning: renamed method 'Write' in IBIFamilleTarifVente to 'Write_'
//  Warning: renamed method 'Read' in IBIFamilleTarifVente to 'Read_'
//  Warning: 'GUID' not automatable in IBIRessourcedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourcedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourcedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIRessourcedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIRessourcedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIRessourcedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIRessourcedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIRessourcedisp.Invoke
//  Warning: renamed method 'Write' in IBIRessource to 'Write_'
//  Warning: renamed method 'Read' in IBIRessource to 'Read_'
//  Warning: 'GUID' not automatable in IBIRessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourceFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIRessourceFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIRessourceFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIRessourceFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIRessourceFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIRessourceFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBIRessourceFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBIRessourceArticleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourceArticleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourceArticleFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIRessourceArticleFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIRessourceArticleFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIRessourceArticleFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIRessourceArticleFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIRessourceArticleFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBIRessourceArticleFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBIRessourceRessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourceRessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIRessourceRessourceFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIRessourceRessourceFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIRessourceRessourceFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIRessourceRessourceFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIRessourceRessourceFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIRessourceRessourceFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBIRessourceRessourceFactory to 'Read_'
//  Warning: renamed property 'End' in IDateTimePeriod to 'End_'
//  Warning: 'GUID' not automatable in IDateTimePerioddisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDateTimePerioddisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDateTimePerioddisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDateTimePerioddisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDateTimePerioddisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDateTimePerioddisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDateTimePerioddisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDateTimePerioddisp.Invoke
//  Warning: 'GUID' not automatable in IBOArticleRessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleRessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleRessourceFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleRessourceFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleRessourceFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleRessourceFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleRessourceFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleRessourceFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleRessourceFactory to 'Read_'
//  Warning: 'GUID' not automatable in ITransformationAchatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITransformationAchatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ITransformationAchatdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ITransformationAchatdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ITransformationAchatdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ITransformationAchatdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ITransformationAchatdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ITransformationAchatdisp.Invoke
//  Warning: 'GUID' not automatable in IBIContact2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIContact2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIContact2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIContact2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIContact2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIContact2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIContact2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIContact2disp.Invoke
//  Warning: renamed method 'Write' in IBIContact2 to 'Write_'
//  Warning: renamed method 'Read' in IBIContact2 to 'Read_'
//  Warning: 'GUID' not automatable in IBPServiceContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPServiceContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPServiceContactdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPServiceContactdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPServiceContactdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPServiceContactdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPServiceContactdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPServiceContactdisp.Invoke
//  Warning: renamed method 'Write' in IBPServiceContact to 'Write_'
//  Warning: renamed method 'Read' in IBPServiceContact to 'Read_'
//  Warning: 'GUID' not automatable in IBPServiceContactFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPServiceContactFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPServiceContactFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPServiceContactFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPServiceContactFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPServiceContactFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPServiceContactFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPServiceContactFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPServiceContactFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPContactdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPContactdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPContactdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPContactdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPContactdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPContactdisp.Invoke
//  Warning: renamed method 'Write' in IBPContact to 'Write_'
//  Warning: renamed method 'Read' in IBPContact to 'Read_'
//  Warning: 'GUID' not automatable in IBPContactFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPContactFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPContactFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPContactFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPContactFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPContactFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPContactFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPContactFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPContactFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleTarifGamme3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifGamme3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifGamme3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleTarifGamme3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleTarifGamme3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleTarifGamme3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleTarifGamme3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleTarifGamme3disp.Invoke
//  Warning: renamed method 'Write' in IBIArticleTarifGamme3 to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleTarifGamme3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleTarifQte3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifQte3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifQte3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleTarifQte3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleTarifQte3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleTarifQte3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleTarifQte3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleTarifQte3disp.Invoke
//  Warning: renamed method 'Write' in IBIArticleTarifQte3 to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleTarifQte3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIArticleTarifCond3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifCond3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIArticleTarifCond3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIArticleTarifCond3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIArticleTarifCond3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIArticleTarifCond3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIArticleTarifCond3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIArticleTarifCond3disp.Invoke
//  Warning: renamed method 'Write' in IBIArticleTarifCond3 to 'Write_'
//  Warning: renamed method 'Read' in IBIArticleTarifCond3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIFamilleTarifQtedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFamilleTarifQtedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIFamilleTarifQtedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIFamilleTarifQtedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIFamilleTarifQtedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIFamilleTarifQtedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIFamilleTarifQtedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIFamilleTarifQtedisp.Invoke
//  Warning: renamed method 'Write' in IBIFamilleTarifQte to 'Write_'
//  Warning: renamed method 'Read' in IBIFamilleTarifQte to 'Read_'
//  Warning: 'GUID' not automatable in IBIReglementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIReglementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIReglementdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIReglementdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIReglementdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIReglementdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIReglementdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIReglementdisp.Invoke
//  Warning: renamed method 'Write' in IBIReglement to 'Write_'
//  Warning: renamed method 'Read' in IBIReglement to 'Read_'
//  Warning: 'GUID' not automatable in IBPReglement3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPReglement3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPReglement3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPReglement3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPReglement3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPReglement3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPReglement3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPReglement3disp.Invoke
//  Warning: renamed method 'Write' in IBPReglement3 to 'Write_'
//  Warning: renamed method 'Read' in IBPReglement3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPReglementFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPReglementFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPReglementFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPReglementFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPReglementFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPReglementFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPReglementFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPReglementFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBPReglementFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBIParamDocdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIParamDocdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIParamDocdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIParamDocdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIParamDocdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIParamDocdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIParamDocdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIParamDocdisp.Invoke
//  Warning: renamed method 'Write' in IBIParamDoc to 'Write_'
//  Warning: renamed method 'Read' in IBIParamDoc to 'Read_'
//  Warning: 'GUID' not automatable in IDossierExercicedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierExercicedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierExercicedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDossierExercicedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDossierExercicedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDossierExercicedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDossierExercicedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDossierExercicedisp.Invoke
//  Warning: 'GUID' not automatable in IDossierExerciceReportANouveauxdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierExerciceReportANouveauxdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierExerciceReportANouveauxdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDossierExerciceReportANouveauxdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDossierExerciceReportANouveauxdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDossierExerciceReportANouveauxdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDossierExerciceReportANouveauxdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDossierExerciceReportANouveauxdisp.Invoke
//  Warning: 'GUID' not automatable in IDossierExerciceReportANouveauxIFRSdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierExerciceReportANouveauxIFRSdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierExerciceReportANouveauxIFRSdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDossierExerciceReportANouveauxIFRSdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDossierExerciceReportANouveauxIFRSdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDossierExerciceReportANouveauxIFRSdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDossierExerciceReportANouveauxIFRSdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDossierExerciceReportANouveauxIFRSdisp.Invoke
//  Warning: 'GUID' not automatable in IDossierTiersdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierTiersdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IDossierTiersdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IDossierTiersdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IDossierTiersdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IDossierTiersdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IDossierTiersdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IDossierTiersdisp.Invoke
//  Warning: 'GUID' not automatable in IBOClientLivraisonAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientLivraisonAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOClientLivraisonAllFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOClientLivraisonAllFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOClientLivraisonAllFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOClientLivraisonAllFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOClientLivraisonAllFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOClientLivraisonAllFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOClientLivraisonAllFactory to 'Read_'
//  Warning: 'GUID' not automatable in IRegistreRevisiondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IRegistreRevisiondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IRegistreRevisiondisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IRegistreRevisiondisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IRegistreRevisiondisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IRegistreRevisiondisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IRegistreRevisiondisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IRegistreRevisiondisp.Invoke
//  Warning: 'GUID' not automatable in IBSCPTAApplication3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBSCPTAApplication3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBSCPTAApplication3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBSCPTAApplication3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBSCPTAApplication3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBSCPTAApplication3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBSCPTAApplication3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBSCPTAApplication3disp.Invoke
//  Warning: 'GUID' not automatable in ILicencedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicencedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicencedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ILicencedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ILicencedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ILicencedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ILicencedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ILicencedisp.Invoke
//  Warning: 'GUID' not automatable in ILicenceProductdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicenceProductdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicenceProductdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ILicenceProductdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ILicenceProductdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ILicenceProductdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ILicenceProductdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ILicenceProductdisp.Invoke
//  Warning: 'GUID' not automatable in ILicenceUserInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicenceUserInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicenceUserInfodisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ILicenceUserInfodisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ILicenceUserInfodisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ILicenceUserInfodisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ILicenceUserInfodisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ILicenceUserInfodisp.Invoke
//  Warning: 'GUID' not automatable in ILicenceProductsdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicenceProductsdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ILicenceProductsdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ILicenceProductsdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ILicenceProductsdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ILicenceProductsdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ILicenceProductsdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ILicenceProductsdisp.Invoke
//  Warning: 'GUID' not automatable in IBILoggabledisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBILoggabledisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBILoggabledisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBILoggabledisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBILoggabledisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBILoggabledisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBILoggabledisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBILoggabledisp.Invoke
//  Warning: 'GUID' not automatable in IBOTiersAutreFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersAutreFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersAutreFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersAutreFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersAutreFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersAutreFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersAutreFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersAutreFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBOTiersAutreFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersSalarieFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersSalarieFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersSalarieFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersSalarieFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersSalarieFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersSalarieFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersSalarieFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersSalarieFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBOTiersSalarieFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBOEcritureFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcriture3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcriture3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcriture3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcriture3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcriture3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcriture3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcriture3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcriture3disp.Invoke
//  Warning: renamed method 'Write' in IBOEcriture3 to 'Write_'
//  Warning: renamed method 'Read' in IBOEcriture3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureAFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureAFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureAFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureAFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureAFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureAFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureAFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureAFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBOEcritureAFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBODossierContactFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODossierContactFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODossierContactFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODossierContactFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODossierContactFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODossierContactFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODossierContactFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODossierContactFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBODossierContactFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBODossierContact3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODossierContact3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODossierContact3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODossierContact3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODossierContact3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODossierContact3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODossierContact3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODossierContact3disp.Invoke
//  Warning: renamed method 'Write' in IBODossierContact3 to 'Write_'
//  Warning: renamed method 'Read' in IBODossierContact3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleEcritureFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcritureFactory2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcritureFactory2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleEcritureFactory2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleEcritureFactory2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleEcritureFactory2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleEcritureFactory2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleEcritureFactory2disp.Invoke
//  Warning: renamed method 'Read' in IBOModeleEcritureFactory2 to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleEcriture3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcriture3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcriture3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleEcriture3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleEcriture3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleEcriture3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleEcriture3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleEcriture3disp.Invoke
//  Warning: renamed method 'Write' in IBOModeleEcriture3 to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleEcriture3 to 'Read_'
//  Warning: 'GUID' not automatable in IBPRappelFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPRappelFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPRappelFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPRappelFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPRappelFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPRappelFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPRappelFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPRappelFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPRappelFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPRappeldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPRappeldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPRappeldisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPRappeldisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPRappeldisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPRappeldisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPRappeldisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPRappeldisp.Invoke
//  Warning: renamed method 'Write' in IBPRappel to 'Write_'
//  Warning: renamed method 'Read' in IBPRappel to 'Read_'
//  Warning: 'GUID' not automatable in IBPTiersStatFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersStatFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersStatFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPTiersStatFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPTiersStatFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPTiersStatFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPTiersStatFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPTiersStatFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPTiersStatFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPTiersStatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersStatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersStatdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPTiersStatdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPTiersStatdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPTiersStatdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPTiersStatdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPTiersStatdisp.Invoke
//  Warning: renamed method 'Write' in IBPTiersStat to 'Write_'
//  Warning: renamed method 'Read' in IBPTiersStat to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleGrilleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilleFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilleFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleGrilleFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleGrilleFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleGrilleFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleGrilleFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleGrilleFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOModeleGrilleFactory to 'Read_'
//  Warning: renamed property 'type' in IBOModeleGrille to 'type_'
//  Warning: 'GUID' not automatable in IBOModeleGrilledisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilledisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilledisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleGrilledisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleGrilledisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleGrilledisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleGrilledisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleGrilledisp.Invoke
//  Warning: renamed method 'Write' in IBOModeleGrille to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleGrille to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleGrilleLigneFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilleLigneFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilleLigneFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleGrilleLigneFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleGrilleLigneFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleGrilleLigneFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleGrilleLigneFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleGrilleLigneFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOModeleGrilleLigneFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPTiersFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPTiersFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPTiersFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPTiersFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPTiersFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPTiersFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPTiersFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPTiersdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPTiersdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPTiersdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPTiersdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPTiersdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPTiersdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPTiersdisp.Invoke
//  Warning: renamed method 'Write' in IBPTiers to 'Write_'
//  Warning: renamed method 'Read' in IBPTiers to 'Read_'
//  Warning: 'GUID' not automatable in IPMEncoderdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMEncoderdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMEncoderdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMEncoderdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMEncoderdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMEncoderdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMEncoderdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMEncoderdisp.Invoke
//  Warning: 'GUID' not automatable in IBOBanqueFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBanqueFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBanqueFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBanqueFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBanqueFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBanqueFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOBanqueFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOBanquedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanquedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanquedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBanquedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBanquedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBanquedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBanquedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBanquedisp.Invoke
//  Warning: renamed method 'Write' in IBOBanque to 'Write_'
//  Warning: renamed method 'Read' in IBOBanque to 'Read_'
//  Warning: 'GUID' not automatable in IBOBanqueRibFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueRibFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueRibFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBanqueRibFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBanqueRibFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBanqueRibFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBanqueRibFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBanqueRibFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOBanqueRibFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOBanqueRibdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueRibdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueRibdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBanqueRibdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBanqueRibdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBanqueRibdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBanqueRibdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBanqueRibdisp.Invoke
//  Warning: renamed method 'Write' in IBOBanqueRib to 'Write_'
//  Warning: renamed method 'Read' in IBOBanqueRib to 'Read_'
//  Warning: 'GUID' not automatable in IBPStructBanqueFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPStructBanqueFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPStructBanqueFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPStructBanqueFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPStructBanqueFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPStructBanqueFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPStructBanqueFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPStructBanqueFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPStructBanqueFactory to 'Read_'
//  Warning: renamed property 'type' in IBPStructBanque to 'type_'
//  Warning: 'GUID' not automatable in IBPStructBanquedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPStructBanquedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPStructBanquedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPStructBanquedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPStructBanquedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPStructBanquedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPStructBanquedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPStructBanquedisp.Invoke
//  Warning: renamed method 'Write' in IBPStructBanque to 'Write_'
//  Warning: renamed method 'Read' in IBPStructBanque to 'Read_'
//  Warning: renamed property 'type' in IPMLettrer to 'type_'
//  Warning: 'GUID' not automatable in IPMLettrerdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMLettrerdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMLettrerdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMLettrerdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMLettrerdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMLettrerdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMLettrerdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMLettrerdisp.Invoke
//  Warning: 'GUID' not automatable in IBOPaysFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOPaysFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOPaysFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOPaysFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOPaysFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOPaysFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOPaysFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOPaysFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOPaysFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOPaysdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOPaysdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOPaysdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOPaysdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOPaysdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOPaysdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOPaysdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOPaysdisp.Invoke
//  Warning: renamed method 'Write' in IBOPays to 'Write_'
//  Warning: renamed method 'Read' in IBOPays to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteRFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteRFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteRFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteRFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteRFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteRFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteRFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteRFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOCompteRFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureAAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureAAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureAAllFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureAAllFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureAAllFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureAAllFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureAAllFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureAAllFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOEcritureAAllFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOJournalAFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournalAFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournalAFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOJournalAFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOJournalAFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOJournalAFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOJournalAFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOJournalAFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOJournalAFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOJournalAdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournalAdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOJournalAdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOJournalAdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOJournalAdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOJournalAdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOJournalAdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOJournalAdisp.Invoke
//  Warning: renamed method 'Write' in IBOJournalA to 'Write_'
//  Warning: renamed method 'Read' in IBOJournalA to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureODFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureODFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureODFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureODFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureODFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureODFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureODFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureODFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOEcritureODFactory to 'Read_'
//  Warning: 'GUID' not automatable in ICompaniesdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ICompaniesdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ICompaniesdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ICompaniesdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ICompaniesdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ICompaniesdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ICompaniesdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ICompaniesdisp.Invoke
//  Warning: 'GUID' not automatable in ICompanydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ICompanydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in ICompanydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in ICompanydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in ICompanydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in ICompanydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in ICompanydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in ICompanydisp.Invoke
//  Warning: 'GUID' not automatable in IBSCIALApplication3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBSCIALApplication3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBSCIALApplication3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBSCIALApplication3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBSCIALApplication3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBSCIALApplication3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBSCIALApplication3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBSCIALApplication3disp.Invoke
//  Warning: 'GUID' not automatable in IBPCategorieComptaVenteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaVenteFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaVenteFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieComptaVenteFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieComptaVenteFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieComptaVenteFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieComptaVenteFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieComptaVenteFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPCategorieComptaVenteFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieComptaVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaVentedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieComptaVentedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieComptaVentedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieComptaVentedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieComptaVentedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieComptaVentedisp.Invoke
//  Warning: renamed method 'Write' in IBPCategorieComptaVente to 'Write_'
//  Warning: renamed method 'Read' in IBPCategorieComptaVente to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieComptaAchatFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaAchatFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaAchatFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieComptaAchatFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieComptaAchatFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieComptaAchatFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieComptaAchatFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieComptaAchatFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPCategorieComptaAchatFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieComptaAchatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaAchatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaAchatdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieComptaAchatdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieComptaAchatdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieComptaAchatdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieComptaAchatdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieComptaAchatdisp.Invoke
//  Warning: renamed method 'Write' in IBPCategorieComptaAchat to 'Write_'
//  Warning: renamed method 'Read' in IBPCategorieComptaAchat to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieComptaStockFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaStockFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaStockFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieComptaStockFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieComptaStockFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieComptaStockFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieComptaStockFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieComptaStockFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPCategorieComptaStockFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPCategorieComptaStockdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaStockdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPCategorieComptaStockdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPCategorieComptaStockdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPCategorieComptaStockdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPCategorieComptaStockdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPCategorieComptaStockdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPCategorieComptaStockdisp.Invoke
//  Warning: renamed method 'Write' in IBPCategorieComptaStock to 'Write_'
//  Warning: renamed method 'Read' in IBPCategorieComptaStock to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentStockFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentStockFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentStockFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentStockFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentStockFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentStockFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentStockFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentStockFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBODocumentStockFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentStock3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentStock3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentStock3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentStock3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentStock3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentStock3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentStock3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentStock3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentStock3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentStock3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentAchatFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAchatFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAchatFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentAchatFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentAchatFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentAchatFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentAchatFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentAchatFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBODocumentAchatFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentAchat3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAchat3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAchat3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentAchat3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentAchat3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentAchat3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentAchat3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentAchat3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentAchat3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentAchat3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentPart3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentPart3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentPart3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentPart3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentPart3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentPart3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentPart3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentPart3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentPart3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentPart3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentVenteFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentVenteFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentVenteFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentVenteFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentVenteFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentVenteFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentVenteFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentVenteFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBODocumentVenteFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentVente3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentVente3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentVente3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentVente3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentVente3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentVente3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentVente3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentVente3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentVente3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentVente3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentInterneFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentInterneFactory3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentInterneFactory3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentInterneFactory3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentInterneFactory3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentInterneFactory3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentInterneFactory3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentInterneFactory3disp.Invoke
//  Warning: renamed method 'Read' in IBODocumentInterneFactory3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentInterne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentInterne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentInterne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentInterne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentInterne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentInterne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentInterne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentInterne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentInterne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentInterne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBISoucheFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBISoucheFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBISoucheFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBISoucheFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBISoucheFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBISoucheFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBISoucheFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBISoucheFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBISoucheFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBIParamDocFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIParamDocFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBIParamDocFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBIParamDocFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBIParamDocFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBIParamDocFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBIParamDocFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBIParamDocFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBIParamDocFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOBaremeCommissionFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeCommissionFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeCommissionFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeCommissionFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeCommissionFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeCommissionFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeCommissionFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeCommissionFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOBaremeCommissionFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOBaremeCommissiondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeCommissiondisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeCommissiondisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeCommissiondisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeCommissiondisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeCommissiondisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeCommissiondisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeCommissiondisp.Invoke
//  Warning: renamed method 'Write' in IBOBaremeCommission to 'Write_'
//  Warning: renamed method 'Read' in IBOBaremeCommission to 'Read_'
//  Warning: 'GUID' not automatable in IBOBaremeRabaisFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeRabaisFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeRabaisFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeRabaisFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeRabaisFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeRabaisFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeRabaisFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeRabaisFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOBaremeRabaisFactory to 'Read_'
//  Warning: renamed property 'type' in IBOBaremeRabais to 'type_'
//  Warning: 'GUID' not automatable in IBOBaremeRabaisdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeRabaisdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeRabaisdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeRabaisdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeRabaisdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeRabaisdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeRabaisdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeRabaisdisp.Invoke
//  Warning: renamed method 'Write' in IBOBaremeRabais to 'Write_'
//  Warning: renamed method 'Read' in IBOBaremeRabais to 'Read_'
//  Warning: 'GUID' not automatable in IBPArticleStatFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPArticleStatFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPArticleStatFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPArticleStatFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPArticleStatFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPArticleStatFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPArticleStatFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPArticleStatFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPArticleStatFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBPArticleStatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPArticleStatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPArticleStatdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPArticleStatdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPArticleStatdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPArticleStatdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPArticleStatdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPArticleStatdisp.Invoke
//  Warning: renamed method 'Write' in IBPArticleStat to 'Write_'
//  Warning: renamed method 'Read' in IBPArticleStat to 'Read_'
//  Warning: 'GUID' not automatable in IBPAgendaFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAgendaFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAgendaFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAgendaFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAgendaFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAgendaFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAgendaFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAgendaFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBPAgendaFactory to 'Read_'
//  Warning: renamed property 'type' in IBPAgenda to 'type_'
//  Warning: 'GUID' not automatable in IBPAgendadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAgendadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPAgendadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPAgendadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPAgendadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPAgendadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPAgendadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPAgendadisp.Invoke
//  Warning: renamed method 'Write' in IBPAgenda to 'Write_'
//  Warning: renamed method 'Read' in IBPAgenda to 'Read_'
//  Warning: 'GUID' not automatable in IPMDocumentdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocumentdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocumentdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMDocumentdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMDocumentdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMDocumentdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMDocumentdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMDocumentdisp.Invoke
//  Warning: 'GUID' not automatable in IPMAppliquerBaremedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMAppliquerBaremedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMAppliquerBaremedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMAppliquerBaremedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMAppliquerBaremedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMAppliquerBaremedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMAppliquerBaremedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMAppliquerBaremedisp.Invoke
//  Warning: 'GUID' not automatable in IPMControlerQualitedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMControlerQualitedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMControlerQualitedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMControlerQualitedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMControlerQualitedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMControlerQualitedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMControlerQualitedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMControlerQualitedisp.Invoke
//  Warning: 'GUID' not automatable in IBODocumentLigneEmplacementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneEmplacementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneEmplacementdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentLigneEmplacementdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentLigneEmplacementdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentLigneEmplacementdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentLigneEmplacementdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentLigneEmplacementdisp.Invoke
//  Warning: renamed method 'Write' in IBODocumentLigneEmplacement to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentLigneEmplacement to 'Read_'
//  Warning: 'GUID' not automatable in IPMControlerQualiteInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMControlerQualiteInfodisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMControlerQualiteInfodisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMControlerQualiteInfodisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMControlerQualiteInfodisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMControlerQualiteInfodisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMControlerQualiteInfodisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMControlerQualiteInfodisp.Invoke
//  Warning: 'GUID' not automatable in IBODocumentLigneAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneAllFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentLigneAllFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentLigneAllFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentLigneAllFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentLigneAllFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentLigneAllFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBODocumentLigneAllFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBOAgendaFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOAgendaFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOAgendaFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOAgendaFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOAgendaFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOAgendaFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOAgendaFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOAgendaFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOAgendaFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBORessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourceFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourceFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBORessourceFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBORessourceFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBORessourceFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBORessourceFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBORessourceFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBORessourceFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBORessourcedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourcedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourcedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBORessourcedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBORessourcedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBORessourcedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBORessourcedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBORessourcedisp.Invoke
//  Warning: renamed method 'Write' in IBORessource to 'Write_'
//  Warning: renamed method 'Read' in IBORessource to 'Read_'
//  Warning: 'GUID' not automatable in IBORessourceCentreFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourceCentreFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourceCentreFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBORessourceCentreFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBORessourceCentreFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBORessourceCentreFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBORessourceCentreFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBORessourceCentreFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBORessourceCentreFactory to 'Read_'
//  Warning: 'GUID' not automatable in IBORessourceCentredisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourceCentredisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBORessourceCentredisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBORessourceCentredisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBORessourceCentredisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBORessourceCentredisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBORessourceCentredisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBORessourceCentredisp.Invoke
//  Warning: renamed method 'Write' in IBORessourceCentre to 'Write_'
//  Warning: renamed method 'Read' in IBORessourceCentre to 'Read_'
//  Warning: 'GUID' not automatable in IControleQualiteStatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IControleQualiteStatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IControleQualiteStatdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IControleQualiteStatdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IControleQualiteStatdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IControleQualiteStatdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IControleQualiteStatdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IControleQualiteStatdisp.Invoke
//  Warning: 'GUID' not automatable in IPMColiserdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMColiserdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMColiserdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMColiserdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMColiserdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMColiserdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMColiserdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMColiserdisp.Invoke
//  Warning: 'GUID' not automatable in IBODocumentVenteLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentVenteLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentVenteLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentVenteLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentVenteLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentVenteLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentVenteLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentVenteLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentVenteLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentVenteLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentPartLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentPartLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentPartLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentPartLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentPartLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentPartLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentPartLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentPartLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentPartLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentPartLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IPMPreleverLotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMPreleverLotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMPreleverLotdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMPreleverLotdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMPreleverLotdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMPreleverLotdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMPreleverLotdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMPreleverLotdisp.Invoke
//  Warning: 'GUID' not automatable in IPMDocTransfererdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocTransfererdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocTransfererdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMDocTransfererdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMDocTransfererdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMDocTransfererdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMDocTransfererdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMDocTransfererdisp.Invoke
//  Warning: 'GUID' not automatable in IBOArticleDepotLotAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotLotAllFactorydisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleDepotLotAllFactorydisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleDepotLotAllFactorydisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleDepotLotAllFactorydisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleDepotLotAllFactorydisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleDepotLotAllFactorydisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleDepotLotAllFactorydisp.Invoke
//  Warning: renamed method 'Read' in IBOArticleDepotLotAllFactory to 'Read_'
//  Warning: 'GUID' not automatable in IPMDocInsererSousTotaldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocInsererSousTotaldisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocInsererSousTotaldisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMDocInsererSousTotaldisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMDocInsererSousTotaldisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMDocInsererSousTotaldisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMDocInsererSousTotaldisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMDocInsererSousTotaldisp.Invoke
//  Warning: 'GUID' not automatable in IPMDocRecalculPrixComposedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocRecalculPrixComposedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMDocRecalculPrixComposedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMDocRecalculPrixComposedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMDocRecalculPrixComposedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMDocRecalculPrixComposedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMDocRecalculPrixComposedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMDocRecalculPrixComposedisp.Invoke
//  Warning: 'GUID' not automatable in IPMSortirLotsdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMSortirLotsdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IPMSortirLotsdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IPMSortirLotsdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IPMSortirLotsdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IPMSortirLotsdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IPMSortirLotsdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IPMSortirLotsdisp.Invoke
//  Warning: 'GUID' not automatable in IBPConditionnementEnumdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionnementEnumdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPConditionnementEnumdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPConditionnementEnumdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPConditionnementEnumdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPConditionnementEnumdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPConditionnementEnumdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPConditionnementEnumdisp.Invoke
//  Warning: renamed method 'Write' in IBPConditionnementEnum to 'Write_'
//  Warning: renamed method 'Read' in IBPConditionnementEnum to 'Read_'
//  Warning: 'GUID' not automatable in IBPDossier2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDossier2disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDossier2disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPDossier2disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPDossier2disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPDossier2disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPDossier2disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPDossier2disp.Invoke
//  Warning: renamed method 'Write' in IBPDossier2 to 'Write_'
//  Warning: renamed method 'Read' in IBPDossier2 to 'Read_'
//  Warning: 'GUID' not automatable in IBPSoucheVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPSoucheVentedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPSoucheVentedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPSoucheVentedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPSoucheVentedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPSoucheVentedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPSoucheVentedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPSoucheVentedisp.Invoke
//  Warning: renamed method 'Write' in IBPSoucheVente to 'Write_'
//  Warning: renamed method 'Read' in IBPSoucheVente to 'Read_'
//  Warning: 'GUID' not automatable in IBPSoucheAchatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPSoucheAchatdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPSoucheAchatdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPSoucheAchatdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPSoucheAchatdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPSoucheAchatdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPSoucheAchatdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPSoucheAchatdisp.Invoke
//  Warning: renamed method 'Write' in IBPSoucheAchat to 'Write_'
//  Warning: renamed method 'Read' in IBPSoucheAchat to 'Read_'
//  Warning: 'GUID' not automatable in IBPParamDocInternedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPParamDocInternedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPParamDocInternedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPParamDocInternedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPParamDocInternedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPParamDocInternedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPParamDocInternedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPParamDocInternedisp.Invoke
//  Warning: renamed method 'Write' in IBPParamDocInterne to 'Write_'
//  Warning: renamed method 'Read' in IBPParamDocInterne to 'Read_'
//  Warning: 'GUID' not automatable in IBPDossierCialdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDossierCialdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDossierCialdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPDossierCialdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPDossierCialdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPDossierCialdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPDossierCialdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPDossierCialdisp.Invoke
//  Warning: renamed method 'Write' in IBPDossierCial to 'Write_'
//  Warning: renamed method 'Read' in IBPDossierCial to 'Read_'
//  Warning: 'GUID' not automatable in IBPDossierParamCialdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDossierParamCialdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPDossierParamCialdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPDossierParamCialdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPDossierParamCialdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPDossierParamCialdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPDossierParamCialdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPDossierParamCialdisp.Invoke
//  Warning: renamed method 'Write' in IBPDossierParamCial to 'Write_'
//  Warning: renamed method 'Read' in IBPDossierParamCial to 'Read_'
//  Warning: 'GUID' not automatable in IBPLibelleCptadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPLibelleCptadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBPLibelleCptadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBPLibelleCptadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBPLibelleCptadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBPLibelleCptadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBPLibelleCptadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBPLibelleCptadisp.Invoke
//  Warning: renamed method 'Write' in IBPLibelleCpta to 'Write_'
//  Warning: renamed method 'Read' in IBPLibelleCpta to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersReglement3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersReglement3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersReglement3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersReglement3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersReglement3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersReglement3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersReglement3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersReglement3disp.Invoke
//  Warning: renamed method 'Write' in IBOTiersReglement3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTiersReglement3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersContact3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersContact3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersContact3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersContact3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersContact3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersContact3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersContact3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersContact3disp.Invoke
//  Warning: renamed method 'Write' in IBOTiersContact3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTiersContact3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOTiersMedia3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersMedia3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOTiersMedia3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOTiersMedia3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOTiersMedia3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOTiersMedia3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOTiersMedia3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOTiersMedia3disp.Invoke
//  Warning: renamed method 'Write' in IBOTiersMedia3 to 'Write_'
//  Warning: renamed method 'Read' in IBOTiersMedia3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureA3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureA3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureA3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureA3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureA3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureA3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureA3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureA3disp.Invoke
//  Warning: renamed method 'Write' in IBOEcritureA3 to 'Write_'
//  Warning: renamed method 'Read' in IBOEcritureA3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifQteFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifQteFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifQteFournisseur3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifQteFournisseur3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifQteFournisseur3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifQteFournisseur3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifQteFournisseur3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifQteFournisseur3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifQteFournisseur3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifQteFournisseur3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifGammeFournisseur3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifGammeFournisseur3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeFournisseur3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifGammeFournisseur3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeFournisseur3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifGammeFournisseur3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifGammeFournisseur3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifGammeFournisseur3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifGammeFournisseur3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleMedia3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleMedia3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleMedia3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleMedia3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleMedia3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleMedia3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleMedia3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleMedia3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleMedia3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleMedia3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleGammeEnumRef3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGammeEnumRef3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleGammeEnumRef3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleGammeEnumRef3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleGammeEnumRef3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleGammeEnumRef3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleGammeEnumRef3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleGammeEnumRef3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleGammeEnumRef3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleGammeEnumRef3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleNomenclature3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleNomenclature3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleNomenclature3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleNomenclature3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleNomenclature3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleNomenclature3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleNomenclature3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleNomenclature3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleNomenclature3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleNomenclature3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifQteClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifQteClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifQteClient3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifQteClient3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifQteClient3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifQteClient3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifQteClient3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifQteClient3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifQteClient3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifQteClient3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifCondClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifCondClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifCondClient3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifCondClient3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifCondClient3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifCondClient3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifCondClient3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifCondClient3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifCondClient3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifCondClient3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifGammeClient3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifGammeClient3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeClient3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifGammeClient3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeClient3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifGammeClient3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifGammeClient3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifGammeClient3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifGammeClient3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifCategorie3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifCategorie3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifCategorie3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifCategorie3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifCategorie3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifCategorie3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifCategorie3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifCategorie3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifQteCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifQteCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifQteCategorie3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifQteCategorie3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifQteCategorie3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifQteCategorie3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifQteCategorie3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifQteCategorie3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifQteCategorie3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifQteCategorie3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifCondCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifCondCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifCondCategorie3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifCondCategorie3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifCondCategorie3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifCondCategorie3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifCondCategorie3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifCondCategorie3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifCondCategorie3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifCondCategorie3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifGammeCategorie3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOArticleTarifGammeCategorie3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeCategorie3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOArticleTarifGammeCategorie3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOArticleTarifGammeCategorie3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOArticleTarifGammeCategorie3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOArticleTarifGammeCategorie3disp.Invoke
//  Warning: renamed method 'Write' in IBOArticleTarifGammeCategorie3 to 'Write_'
//  Warning: renamed method 'Read' in IBOArticleTarifGammeCategorie3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleParamCompta3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleParamCompta3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleParamCompta3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleParamCompta3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleParamCompta3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleParamCompta3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleParamCompta3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleParamCompta3disp.Invoke
//  Warning: renamed method 'Write' in IBOFamilleParamCompta3 to 'Write_'
//  Warning: renamed method 'Read' in IBOFamilleParamCompta3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODepotContact3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotContact3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODepotContact3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODepotContact3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODepotContact3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODepotContact3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODepotContact3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODepotContact3disp.Invoke
//  Warning: renamed method 'Write' in IBODepotContact3 to 'Write_'
//  Warning: renamed method 'Read' in IBODepotContact3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentLigneLienCMdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneLienCMdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentLigneLienCMdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentLigneLienCMdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentLigneLienCMdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentLigneLienCMdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentLigneLienCMdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentLigneLienCMdisp.Invoke
//  Warning: renamed method 'Write' in IBODocumentLigneLienCM to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentLigneLienCM to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentStockLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentStockLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentStockLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentStockLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentStockLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentStockLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentStockLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentStockLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentStockLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentStockLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentAcompte3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAcompte3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAcompte3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentAcompte3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentAcompte3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentAcompte3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentAcompte3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentAcompte3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentAcompte3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentAcompte3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentEcheance3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentEcheance3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentEcheance3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentEcheance3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentEcheance3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentEcheance3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentEcheance3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentEcheance3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentEcheance3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentEcheance3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentAchatLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAchatLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentAchatLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentAchatLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentAchatLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentAchatLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentAchatLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentAchatLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentAchatLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentAchatLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentInterneLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentInterneLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentInterneLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentInterneLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentInterneLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentInterneLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentInterneLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentInterneLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBODocumentInterneLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentInterneLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleEcritureLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcritureLigne3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcritureLigne3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleEcritureLigne3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleEcritureLigne3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleEcritureLigne3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleEcritureLigne3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleEcritureLigne3disp.Invoke
//  Warning: renamed method 'Write' in IBOModeleEcritureLigne3 to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleEcritureLigne3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleEcritureLigneA3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcritureLigneA3disp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleEcritureLigneA3disp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleEcritureLigneA3disp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleEcritureLigneA3disp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleEcritureLigneA3disp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleEcritureLigneA3disp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleEcritureLigneA3disp.Invoke
//  Warning: renamed method 'Write' in IBOModeleEcritureLigneA3 to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleEcritureLigneA3 to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleTarifCategoriedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifCategoriedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifCategoriedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleTarifCategoriedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleTarifCategoriedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleTarifCategoriedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleTarifCategoriedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleTarifCategoriedisp.Invoke
//  Warning: renamed method 'Write' in IBOFamilleTarifCategorie to 'Write_'
//  Warning: renamed method 'Read' in IBOFamilleTarifCategorie to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleTarifQteCategoriedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifQteCategoriedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifQteCategoriedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleTarifQteCategoriedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleTarifQteCategoriedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleTarifQteCategoriedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleTarifQteCategoriedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleTarifQteCategoriedisp.Invoke
//  Warning: renamed method 'Write' in IBOFamilleTarifQteCategorie to 'Write_'
//  Warning: renamed method 'Read' in IBOFamilleTarifQteCategorie to 'Read_'
//  Warning: 'GUID' not automatable in IBOFamilleTarifQteFournisseurdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifQteFournisseurdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOFamilleTarifQteFournisseurdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOFamilleTarifQteFournisseurdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOFamilleTarifQteFournisseurdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOFamilleTarifQteFournisseurdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOFamilleTarifQteFournisseurdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOFamilleTarifQteFournisseurdisp.Invoke
//  Warning: renamed method 'Write' in IBOFamilleTarifQteFournisseur to 'Write_'
//  Warning: renamed method 'Read' in IBOFamilleTarifQteFournisseur to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleGrilleLignedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilleLignedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleGrilleLignedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleGrilleLignedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleGrilleLignedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleGrilleLignedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleGrilleLignedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleGrilleLignedisp.Invoke
//  Warning: renamed method 'Write' in IBOModeleGrilleLigne to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleGrilleLigne to 'Read_'
//  Warning: 'GUID' not automatable in IBOModeleReglementLignedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleReglementLignedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOModeleReglementLignedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOModeleReglementLignedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOModeleReglementLignedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOModeleReglementLignedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOModeleReglementLignedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOModeleReglementLignedisp.Invoke
//  Warning: renamed method 'Write' in IBOModeleReglementLigne to 'Write_'
//  Warning: renamed method 'Read' in IBOModeleReglementLigne to 'Read_'
//  Warning: 'GUID' not automatable in IBOBaremeCommissionQtedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeCommissionQtedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeCommissionQtedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeCommissionQtedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeCommissionQtedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeCommissionQtedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeCommissionQtedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeCommissionQtedisp.Invoke
//  Warning: renamed method 'Write' in IBOBaremeCommissionQte to 'Write_'
//  Warning: renamed method 'Read' in IBOBaremeCommissionQte to 'Read_'
//  Warning: 'GUID' not automatable in IBOBaremeRabaisQtedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeRabaisQtedisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBaremeRabaisQtedisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBaremeRabaisQtedisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBaremeRabaisQtedisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBaremeRabaisQtedisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBaremeRabaisQtedisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBaremeRabaisQtedisp.Invoke
//  Warning: renamed method 'Write' in IBOBaremeRabaisQte to 'Write_'
//  Warning: renamed method 'Read' in IBOBaremeRabaisQte to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureMediadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureMediadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureMediadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureMediadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureMediadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureMediadisp.Invoke
//  Warning: renamed method 'Write' in IBOEcritureMedia to 'Write_'
//  Warning: renamed method 'Read' in IBOEcritureMedia to 'Read_'
//  Warning: 'GUID' not automatable in IBOBanqueContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOBanqueContactdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOBanqueContactdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOBanqueContactdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOBanqueContactdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOBanqueContactdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOBanqueContactdisp.Invoke
//  Warning: renamed method 'Write' in IBOBanqueContact to 'Write_'
//  Warning: renamed method 'Read' in IBOBanqueContact to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteAContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteAContactdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteAContactdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteAContactdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteAContactdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteAContactdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteAContactdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteAContactdisp.Invoke
//  Warning: renamed method 'Write' in IBOCompteAContact to 'Write_'
//  Warning: renamed method 'Read' in IBOCompteAContact to 'Read_'
//  Warning: 'GUID' not automatable in IBOCompteAMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteAMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOCompteAMediadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOCompteAMediadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOCompteAMediadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOCompteAMediadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOCompteAMediadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOCompteAMediadisp.Invoke
//  Warning: renamed method 'Write' in IBOCompteAMedia to 'Write_'
//  Warning: renamed method 'Read' in IBOCompteAMedia to 'Read_'
//  Warning: 'GUID' not automatable in IBOEcritureODdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureODdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOEcritureODdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOEcritureODdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOEcritureODdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOEcritureODdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOEcritureODdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOEcritureODdisp.Invoke
//  Warning: renamed method 'Write' in IBOEcritureOD to 'Write_'
//  Warning: renamed method 'Read' in IBOEcritureOD to 'Read_'
//  Warning: 'GUID' not automatable in IBODocumentMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentMediadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBODocumentMediadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBODocumentMediadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBODocumentMediadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBODocumentMediadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBODocumentMediadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBODocumentMediadisp.Invoke
//  Warning: renamed method 'Write' in IBODocumentMedia to 'Write_'
//  Warning: renamed method 'Read' in IBODocumentMedia to 'Read_'
//  Warning: 'GUID' not automatable in IBOAgendadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOAgendadisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IBOAgendadisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IBOAgendadisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IBOAgendadisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IBOAgendadisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IBOAgendadisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IBOAgendadisp.Invoke
//  Warning: renamed method 'Write' in IBOAgenda to 'Write_'
//  Warning: renamed method 'Read' in IBOAgenda to 'Read_'
//  Warning: renamed method 'Set' in IUserLot to 'Set_'
//  Warning: 'GUID' not automatable in IUserLotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IUserLotdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IUserLotdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IUserLotdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IUserLotdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IUserLotdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IUserLotdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IUserLotdisp.Invoke
//  Warning: renamed method 'Set' in IUserLot to 'Set_'
//  Warning: renamed method 'Set' in IUserEmplacement to 'Set_'
//  Warning: 'GUID' not automatable in IUserEmplacementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IUserEmplacementdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IUserEmplacementdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IUserEmplacementdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IUserEmplacementdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IUserEmplacementdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IUserEmplacementdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IUserEmplacementdisp.Invoke
//  Warning: renamed method 'Set' in IUserEmplacement to 'Set_'
//  Warning: renamed method 'Set' in IUserColis to 'Set_'
//  Warning: 'GUID' not automatable in IUserColisdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IUserColisdisp.QueryInterface
//  Warning: 'Ppointer' not automatable in IUserColisdisp.GetTypeInfo
//  Warning: 'GUID' not automatable in IUserColisdisp.GetIDsOfNames
//  Warning: 'PShortInt' not automatable in IUserColisdisp.GetIDsOfNames
//  Warning: 'GUID' not automatable in IUserColisdisp.Invoke
//  Warning: 'DISPPARAMS' not automatable in IUserColisdisp.Invoke
//  Warning: 'EXCEPINFO' not automatable in IUserColisdisp.Invoke
//  Warning: renamed method 'Set' in IUserColis to 'Set_'
Uses
  Windows,ActiveX,Classes,Variants,stdole2,ActiveXContainer;
Const
  Objets100cLibMajorVersion = 3;
  Objets100cLibMinorVersion = 0;
  Objets100cLibLCID = 0;
  LIBID_Objets100cLib : TGUID = '{8B42EFD1-11DE-4AF5-8F95-2901702D7A46}';

  IID_IBITransactional : TGUID = '{0BD6E47B-CD15-4D44-ADAA-6364E78E5265}';
  IID_ISynchroLog : TGUID = '{1ABC2F0C-87D1-421D-94E1-66E84D970AE3}';
  IID_IPredicate : TGUID = '{795E7389-208E-4FBF-B935-5D64BEB37EC6}';
  IID_IPredicateValue : TGUID = '{CABF2ABE-3E55-4250-9424-D5600D14152A}';
  IID_IPredicateComparison : TGUID = '{19D17313-7089-4EF7-99F1-F1A4BFBD55AB}';
  IID_IBIValuesInsertable : TGUID = '{5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}';
  IID_IPredicateCompound : TGUID = '{6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}';
  IID_IBICollectionPredicate : TGUID = '{CDD8F431-5305-4BB8-B8C2-224F70BE9998}';
  IID_IPredicateBuilder : TGUID = '{40B131B9-6E75-4A48-A1E4-FF903D1459F0}';
  IID_IArrondi : TGUID = '{7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}';
  IID_IBIPersistObject : TGUID = '{EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}';
  IID_IBITypeObjectFactory : TGUID = '{9D26AC49-A0D6-4719-A19B-835168D0AAF2}';
  IID_IBICollection : TGUID = '{F4042937-945B-499A-81A1-B1B772D52032}';
  IID_IBIObjectID : TGUID = '{971FB5E1-79A8-4A51-A47E-0286E29AFAC7}';
  IID_IBICollectionDispatch : TGUID = '{4F3E5D34-5A39-4938-B9D8-A891393F39BE}';
  IID_IStream : TGUID = '{0000000C-0000-0000-C000-000000000046}';
  IID_ISequentialStream : TGUID = '{0C733A30-2A1C-11CE-ADE5-00AA0044773D}';
  IID_IBIPersistStream : TGUID = '{0C19AA03-32BA-4A41-A5C7-231C922E2BDD}';
  IID_IDatabaseInfo : TGUID = '{FC26A457-2146-4035-9A0F-9A121BC5BC3E}';
  IID_ISynchroStream : TGUID = '{453C012A-E85B-4776-ACFE-C80668BE04F9}';
  IID_IBIObjectIDExternal : TGUID = '{A70874A0-E77F-4519-9354-0C3FA1787522}';
  IID_IBIMedia : TGUID = '{BD0B5F31-E6C8-48C2-A087-4668AF53E04A}';
  IID_IBICategorieCompta : TGUID = '{1EB2D07A-C0C8-497F-9D9B-323076B23643}';
  IID_IDocValorisation : TGUID = '{790843D7-1E85-45F6-B94C-BA5BD9565558}';
  IID_IDocValoTaxes : TGUID = '{7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}';
  IID_IDocValoTaxe : TGUID = '{724FD64D-A3CC-4821-A7F4-12E83E12DF60}';
  IID_IDocValoEscompte : TGUID = '{9F1D9451-2EC0-4658-85A5-E236ED9D39D3}';
  IID_IFrais2 : TGUID = '{B798E501-D751-4D2B-ADFE-9C9411EA81EF}';
  IID_IFraisElem2 : TGUID = '{C1A25544-B9B7-43A1-9617-7BD2321489C4}';
  IID_IRemise2 : TGUID = '{11258EBC-3FC0-4461-83F1-AFFBEBF75D10}';
  IID_IRemiseElem2 : TGUID = '{B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}';
  IID_IBPDevise2 : TGUID = '{02658A6A-195E-4383-A18B-EB162ED46D5F}';
  IID_IBPDeviseFactory2 : TGUID = '{A45F660A-3080-4619-9A6E-A6EB8E29DF97}';
  IID_IAdresse : TGUID = '{03E0F077-29D3-442D-A9AB-D21CE4112A9A}';
  IID_ITelecom : TGUID = '{089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}';
  IID_ITarif2 : TGUID = '{54EE0721-CF74-48BB-ABE3-54A4E62A18A9}';
  IID_IDevise : TGUID = '{26555D4C-EC13-4B47-A38E-35EAAA45BECF}';
  IID_ITarifVente2 : TGUID = '{18AF0D16-E2FE-4C21-B399-50B060BEC3E2}';
  IID_ITarifAchat2 : TGUID = '{11D2FA93-8598-4475-A940-C5276357BCBE}';
  IID_IBPAnalytiqueRupture : TGUID = '{8FC21F33-1F4D-44A6-89A4-1F9196195BD2}';
  IID_IDocLigneValorisation : TGUID = '{1BBB8B46-588F-4718-BDCF-3E4E79F28346}';
  IID_ITransformation : TGUID = '{9CFC5621-A9C5-4CB7-8F59-5D43528CB085}';
  IID_ITransformationVente : TGUID = '{3C639ED8-ABBF-4449-9B86-510624C35C24}';
  IID_IPMDocTransformer : TGUID = '{3B2FF624-53B6-4F75-8A34-41CFDA72646F}';
  IID_IPMProcess : TGUID = '{CA25DA28-1153-4BE1-9849-403D1D8B2A3F}';
  IID_IFailInfoCol : TGUID = '{ED8391C3-A97F-4464-AFA4-D8A52DA6C558}';
  IID_IFailInfo : TGUID = '{56E46799-276B-4FAA-B64E-B98F1B245C92}';
  IID_IBODocument3 : TGUID = '{32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}';
  IID_IBODocumentFactory : TGUID = '{B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}';
  IID_IBIFields : TGUID = '{2817DCCC-42F2-4206-835D-F46D0AD2AA0F}';
  IID_IBIField : TGUID = '{EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}';
  IID_IBODocumentLigneFactory : TGUID = '{EA77FBAD-D58F-461F-9542-8F123C1D7B85}';
  IID_IBODepot3 : TGUID = '{390E51AD-CC0A-4641-84D9-6B8E97906812}';
  IID_IBODepotFactory2 : TGUID = '{22A6C915-8B4F-4BB0-B720-B8DA08203AE0}';
  IID_IBODepotEmplacementFactory : TGUID = '{1B59ED90-B489-4E8F-928F-CA5CA4B443F8}';
  IID_IBODepotEmplacement : TGUID = '{F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}';
  IID_IBISouche : TGUID = '{E323C1CD-6888-42A8-8DA2-D8B66A9819B8}';
  IID_IBIValues : TGUID = '{492D8954-BF34-4EB1-A8C8-85C45454B8BF}';
  IID_IBOCollaborateur : TGUID = '{358B9088-4422-436B-88D3-66ECDF3CC622}';
  IID_IBOCollaborateurFactory : TGUID = '{37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}';
  IID_IBOCompteA3 : TGUID = '{F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}';
  IID_IBOCompteAFactory3 : TGUID = '{2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}';
  IID_IBPAnalytique3 : TGUID = '{67899AAF-D6B5-43DE-820C-630E767F30FB}';
  IID_IBPAnalytiqueFactory3 : TGUID = '{E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}';
  IID_IBPAnalyse : TGUID = '{3723FCFA-5384-4666-BAF8-4767E202D581}';
  IID_IBPAnalyseFactory : TGUID = '{C16CDB84-022B-4471-90EF-689793E6A560}';
  IID_IBODocumentLigne3 : TGUID = '{7D3D9D90-6A4D-4174-92BA-2BEA034A9095}';
  IID_IBOArticle3 : TGUID = '{E05DF99C-5D91-4A03-B9A1-5C87A92D8298}';
  IID_IBOArticleFactory3 : TGUID = '{154DA331-CD29-403D-80F1-8D812FE017FB}';
  IID_IBOFamille3 : TGUID = '{8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}';
  IID_IBOFamilleFactory2 : TGUID = '{B6F2B040-5FF8-439D-8888-0EF811BD5744}';
  IID_IBPProduit2 : TGUID = '{FE278BBF-4234-43EB-A81B-FF0A92107279}';
  IID_IBPProduitFactory2 : TGUID = '{EFB726BF-32CF-4168-9A5C-33A8E74A499C}';
  IID_IBPUnite : TGUID = '{D5E5967F-96F9-4507-816C-D3DB7157ED64}';
  IID_IBPUniteFactory : TGUID = '{17DF42EF-AB95-4200-9114-7D4E5A3ED034}';
  IID_IBOModele2 : TGUID = '{DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}';
  IID_IBOModeleFactory : TGUID = '{D4306949-E667-4D20-8A94-317296689089}';
  IID_IBOBaremeSolde : TGUID = '{DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}';
  IID_IBOBaremeSoldeFactory : TGUID = '{4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}';
  IID_IBOFournisseur3 : TGUID = '{3429256D-78D7-477B-9E0F-1DEC316C490D}';
  IID_IBOTiersPart3 : TGUID = '{F5C77FD4-4820-4AFD-AD17-194C8998EAFB}';
  IID_IBOTiers3 : TGUID = '{CA651533-8F26-41F2-B0D5-855956FDA70F}';
  IID_IBOTiersFactory3 : TGUID = '{87FE686C-A20E-4716-AB17-41691E470227}';
  IID_IBOTiersCompteGFactory3 : TGUID = '{0636206A-E39C-4B75-AB57-1B821E65E957}';
  IID_IBOCompteG3 : TGUID = '{BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}';
  IID_IBOCompteGFactory3 : TGUID = '{766FC622-F25F-45E3-8D10-8EAF2154174B}';
  IID_IBOCompteR : TGUID = '{34254DB0-A71C-4B9E-99A3-6E6B38582609}';
  IID_IBOCompteGTiersFactory3 : TGUID = '{84334E10-A439-46CC-9F65-9A01E9642D77}';
  IID_IBOTaxe3 : TGUID = '{99035D0A-F5E5-466E-A919-8174DE96725B}';
  IID_IBOTaxeFactory3 : TGUID = '{7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}';
  IID_IBPNatureCompte : TGUID = '{838ED02B-7688-430E-BDAC-C659E326FE95}';
  IID_IBPNatureCompteFactory : TGUID = '{B6942D0F-D5E1-41F7-8B80-674F0FD31172}';
  IID_IBPNatureCompteDet : TGUID = '{2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}';
  IID_IBPNatureCompteDetFactory : TGUID = '{FC127295-7674-4D27-B7D6-DE8CE60AC5EA}';
  IID_IBOTiersBanque3 : TGUID = '{3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}';
  IID_IBOJournal3 : TGUID = '{1837F306-0725-455A-8C15-1EC716483DDC}';
  IID_IBOJournalFactory3 : TGUID = '{D117B205-3ECD-47C6-BDEB-FBA2CA55B484}';
  IID_IBOModeleReglement : TGUID = '{CE004984-85E4-4CFF-9C59-94F7A2F64DB1}';
  IID_IBOModeleReglementFactory : TGUID = '{FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}';
  IID_IBOFournisseurFactory3 : TGUID = '{DCA2B175-C276-4507-B8C8-957D9C926ECA}';
  IID_IBOFournisseurTarifFactory3 : TGUID = '{A215FD6B-A2D8-47D1-AE4F-40607DC18914}';
  IID_IBOArticleTarifFournisseur3 : TGUID = '{0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}';
  IID_IBIArticleTarif3 : TGUID = '{C83AA501-A86D-4013-9604-DB7A80CFC893}';
  IID_IBPGamme : TGUID = '{A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}';
  IID_IBPGammeFactory : TGUID = '{9B668A94-4D86-4F0E-B090-78BEE0D375C6}';
  IID_IBPExpedition3 : TGUID = '{24446917-6395-47E7-AB91-3AC9EAF0EBCB}';
  IID_IBPExpeditionFactory3 : TGUID = '{06CAA04C-B790-4499-B2E6-D406B5436AC5}';
  IID_IBPConditionLivraison : TGUID = '{1810CC00-BD69-4636-879F-6D8721659B26}';
  IID_IBPConditionLivraisonFactory : TGUID = '{332BD75D-11D5-4EAC-97D0-317C5A870C92}';
  IID_IBOFournisseurTarifFamilleFactory : TGUID = '{E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}';
  IID_IBOFamilleTarifFournisseur : TGUID = '{21B9B379-C74C-43C1-94A1-CA84B97CFC85}';
  IID_IBIFamilleTarif : TGUID = '{37E54430-C444-4A17-BE0A-33BB1D7501E4}';
  IID_IBOArticleGlossaireFactory2 : TGUID = '{3D4D334C-0678-49C3-8387-C57A62BEAE19}';
  IID_IBOGlossaire2 : TGUID = '{FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}';
  IID_IBOGlossaireFactory : TGUID = '{D11C2E26-63C5-4C3E-A709-02C87420B297}';
  IID_IBOArticleParamComptaFactory3 : TGUID = '{A4EABB4A-6694-424D-841F-F835740942AF}';
  IID_IBOArticleParamCompta3 : TGUID = '{AE8D2D0A-1E07-4E40-9C49-6749CE488E40}';
  IID_IBIParamCompta3 : TGUID = '{265553D6-F316-44CF-9A43-B03A3FC11227}';
  IID_IBOArticleDepotFactory : TGUID = '{D3A62EEB-4AD8-405B-81B8-1E405B2A3388}';
  IID_IBOArticleDepot3 : TGUID = '{2F5884FD-3A5E-4729-B00D-E801A252F938}';
  IID_IBIArticleStock3 : TGUID = '{7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}';
  IID_IBIArticleStockEmplFactory : TGUID = '{15BEC968-6889-4E2D-99E7-6F16FCE810C2}';
  IID_IBIArticleStockEmpl : TGUID = '{CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}';
  IID_IBOArticleDepotGammeFactory : TGUID = '{42612014-B818-4C79-8148-6B5865839427}';
  IID_IBOArticleGammeEnum3 : TGUID = '{7B4F4FD4-510E-41E2-AB40-8675514BD227}';
  IID_IBOArticleDepotGamme3 : TGUID = '{B45B336F-48B6-4667-BB61-4073BAB2396B}';
  IID_IBOArticleDepotLotFactory : TGUID = '{7D19DF66-979C-4941-A44C-1781EF1169D6}';
  IID_IBOArticleDepotLot : TGUID = '{0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}';
  IID_IBILot : TGUID = '{8F0A81DA-61F3-4E59-A517-711854C64094}';
  IID_IBOArticleGammeEnumFactory : TGUID = '{D6B92633-1367-4753-BFD4-EC95C08D985D}';
  IID_IBOArticleCondFactory : TGUID = '{2A9626FB-6EB3-4F95-82BB-307CD430E9E9}';
  IID_IBOArticleCond3 : TGUID = '{35A9D616-54B7-4A6B-A996-0E49C819430C}';
  IID_IBPConditionnement : TGUID = '{E88BF6B0-535D-4FF8-948C-31D1F061072D}';
  IID_IBPConditionnementFactory : TGUID = '{33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}';
  IID_IBPCategorieTarif : TGUID = '{6C6002FD-4AD8-46AF-A50E-4D177150BDDA}';
  IID_IBPCategorieTarifFactory : TGUID = '{F1EC90B6-225B-4702-9A4C-73F56F0E13A7}';
  IID_IBOClient3 : TGUID = '{00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}';
  IID_IBOClientFactory3 : TGUID = '{6BB5E17E-287A-4B68-A365-EF1FAA811446}';
  IID_IBOClientTarifFactory3 : TGUID = '{FA817628-4F1D-4710-AA2E-47449BA5FED8}';
  IID_IBOArticleTarifClient3 : TGUID = '{59A52885-1DC4-4C57-85CD-E141875617F7}';
  IID_IBIArticleTarifVente3 : TGUID = '{C1B065CF-2E61-43EA-B73B-EF938F600ADC}';
  IID_IBPArrondi : TGUID = '{DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}';
  IID_IBPCodeRisque : TGUID = '{909942C0-ED30-41EA-9978-84EA9C00ABC2}';
  IID_IBPCodeRisqueFactory : TGUID = '{1E96E46F-32F3-4768-8858-69D5B15A4542}';
  IID_IBPPeriodicite : TGUID = '{2C9D5C91-300E-43CD-ACAD-804B92F42A66}';
  IID_IBPPeriodiciteFactory : TGUID = '{1AB0F29D-8A10-4039-98B6-7200B2298586}';
  IID_IBOClientLivraison3 : TGUID = '{6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}';
  IID_IBOClientTarifFamilleFactory : TGUID = '{BDD6E49E-B5B4-42A6-BE56-60A4291A968D}';
  IID_IBOFamilleTarifClient : TGUID = '{431AE828-CED0-43E6-A464-69428A50272A}';
  IID_IBIFamilleTarifVente : TGUID = '{B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}';
  IID_IBIRessource : TGUID = '{ADAB67DA-15B9-41FC-A28E-9B9154D761F0}';
  IID_IBIRessourceFactory : TGUID = '{0BCE62DD-2E2C-42E1-80C3-077DBB162749}';
  IID_IBIRessourceArticleFactory : TGUID = '{8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}';
  IID_IBIRessourceRessourceFactory : TGUID = '{08ACED6A-5D87-4604-9C9A-30B316F9CB89}';
  IID_IDateTimePeriod : TGUID = '{4A394899-F9AD-47FF-96DB-590CC19411BB}';
  IID_IBOArticleRessourceFactory : TGUID = '{3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}';
  IID_ITransformationAchat : TGUID = '{ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}';
  IID_IBIContact2 : TGUID = '{FAE14E25-D9B3-49D6-A51A-868E34BE6F50}';
  IID_IBPServiceContact : TGUID = '{58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}';
  IID_IBPServiceContactFactory : TGUID = '{C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}';
  IID_IBPContact : TGUID = '{B97C4265-FF1E-41C4-9799-2E8B8ECE855F}';
  IID_IBPContactFactory : TGUID = '{681E84FA-57F9-45D6-A209-D72BD027AFFD}';
  IID_IBIArticleTarifGamme3 : TGUID = '{F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}';
  IID_IBIArticleTarifQte3 : TGUID = '{3A83C2D4-7C03-4829-8B17-A35F3A6AA306}';
  IID_IBIArticleTarifCond3 : TGUID = '{BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}';
  IID_IBIFamilleTarifQte : TGUID = '{423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}';
  IID_IBIReglement : TGUID = '{B98A6894-49A1-4D62-AA03-4352DEE1556D}';
  IID_IBPReglement3 : TGUID = '{89BD76D6-0C06-4933-8010-9E694D32E23A}';
  IID_IBPReglementFactory3 : TGUID = '{56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}';
  IID_IBIParamDoc : TGUID = '{E145D57A-3141-4B3D-82BA-698E74C345CF}';
  IID_IDossierExercice : TGUID = '{13101937-F270-4381-8267-FF945752F147}';
  IID_IDossierExerciceReportANouveaux : TGUID = '{0720550E-B038-4F30-94FE-2C36B38F1015}';
  IID_IDossierExerciceReportANouveauxIFRS : TGUID = '{F5B9C88D-6B51-4965-B923-ECC2BA1B9445}';
  IID_IDossierTiers : TGUID = '{0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}';
  IID_IBOClientLivraisonAllFactory : TGUID = '{E2089F5D-CF35-430C-B7AB-EEE33F63FC20}';
  IID_IRegistreRevision : TGUID = '{9F944E43-9415-408E-9CE1-28BD57964581}';
  IID_IBSCPTAApplication3 : TGUID = '{B1746B73-A714-4275-8E61-BC4AB1B77BE0}';
  IID_ILicence : TGUID = '{A3174C49-1613-4E29-8829-E9D73DD3085A}';
  IID_ILicenceProduct : TGUID = '{70453D27-A5E7-41FB-8673-F41ECE54DAE6}';
  IID_ILicenceUserInfo : TGUID = '{DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}';
  IID_ILicenceProducts : TGUID = '{F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}';
  IID_IBILoggable : TGUID = '{08B40F4E-D3D6-4546-AF3E-F386929F1F39}';
  IID_IBOTiersAutreFactory2 : TGUID = '{51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}';
  IID_IBOTiersSalarieFactory2 : TGUID = '{E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}';
  IID_IBOEcritureFactory3 : TGUID = '{80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}';
  IID_IBOEcriture3 : TGUID = '{B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}';
  IID_IBOEcritureAFactory2 : TGUID = '{4DB1212D-1E51-4E42-A13D-3EA526FF4907}';
  IID_IBODossierContactFactory2 : TGUID = '{D1B37523-CA98-4C53-9002-14C5C02DB2F3}';
  IID_IBODossierContact3 : TGUID = '{F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}';
  IID_IBOModeleEcritureFactory2 : TGUID = '{FCA4724C-21EE-43DD-89DA-BD424957D8A1}';
  IID_IBOModeleEcriture3 : TGUID = '{F60A3CEB-E9FE-444B-B6E3-860F8C663497}';
  IID_IBPRappelFactory : TGUID = '{A8ABA975-4096-48B6-9D17-BB567EF59ACB}';
  IID_IBPRappel : TGUID = '{1214E7B0-99C7-49AE-AAB7-7692DEC498DC}';
  IID_IBPTiersStatFactory : TGUID = '{FBB89C2B-316F-45CA-997A-E4A0492EC64B}';
  IID_IBPTiersStat : TGUID = '{8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}';
  IID_IBOModeleGrilleFactory : TGUID = '{458C0B28-25F9-4C8B-B073-36F2E5376558}';
  IID_IBOModeleGrille : TGUID = '{E2155282-6020-4C72-B7D0-9EEBAFAB602C}';
  IID_IBOModeleGrilleLigneFactory : TGUID = '{4FBB9839-33B4-4C0C-B9ED-04773DFA472B}';
  IID_IBPTiersFactory : TGUID = '{A40A34F1-9B69-4A46-AB90-E7ED9FA58129}';
  IID_IBPTiers : TGUID = '{3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}';
  IID_IPMEncoder : TGUID = '{356BB216-94EE-4357-9148-EDB271166D41}';
  IID_IBOBanqueFactory : TGUID = '{09DE9B82-23C4-49F3-87CB-A0D0381584AC}';
  IID_IBOBanque : TGUID = '{105B22E1-1E39-4E1C-9882-C6DBE95F8456}';
  IID_IBOBanqueRibFactory : TGUID = '{88C7D8E1-940D-44FA-B347-B3D5E54BFF06}';
  IID_IBOBanqueRib : TGUID = '{9F917752-EA5C-40AE-AD02-4BC192B64A56}';
  IID_IBPStructBanqueFactory : TGUID = '{8259C696-BE45-44EA-81EE-8AE0223AB61A}';
  IID_IBPStructBanque : TGUID = '{46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}';
  IID_IPMLettrer : TGUID = '{10EF176B-FC21-452C-93CA-E328D7526A16}';
  IID_IBOPaysFactory : TGUID = '{E9771CF3-E87A-497B-9C1C-8F323069758D}';
  IID_IBOPays : TGUID = '{9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}';
  IID_IBOCompteRFactory : TGUID = '{527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}';
  IID_IBOEcritureAAllFactory : TGUID = '{1D871194-8500-46AB-924C-9B2548EBE099}';
  IID_IBOJournalAFactory : TGUID = '{6F95DCED-011E-4F1A-8284-BACBA5526DEE}';
  IID_IBOJournalA : TGUID = '{DC770506-F0B8-4523-9702-ABC21F060C0B}';
  IID_IBOEcritureODFactory : TGUID = '{51B2C00F-C2E3-4846-A57E-0554CAFAF01D}';
  IID_ICompanies : TGUID = '{D7155186-A152-452F-8D3F-5E7D0E838CF2}';
  IID_ICompany : TGUID = '{37A95BCE-A845-4557-B607-2997600DCA2C}';
  IID_IBSCIALApplication3 : TGUID = '{3FBE6898-EBB1-4D11-B5FF-09AE5301973B}';
  IID_IBPCategorieComptaVenteFactory : TGUID = '{E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}';
  IID_IBPCategorieComptaVente : TGUID = '{3D471238-B9A3-4593-B33F-D0D9F38EBFAF}';
  IID_IBPCategorieComptaAchatFactory : TGUID = '{266979EE-CBF1-4268-A9F6-4B409EFC0A71}';
  IID_IBPCategorieComptaAchat : TGUID = '{49897345-3D8F-4F09-99C7-CCBFD73969C9}';
  IID_IBPCategorieComptaStockFactory : TGUID = '{EC38C20D-EE75-4087-B42B-09FF3EE8AE43}';
  IID_IBPCategorieComptaStock : TGUID = '{892665D1-CA5A-40FD-A33B-C17B150C20DD}';
  IID_IBODocumentStockFactory3 : TGUID = '{DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}';
  IID_IBODocumentStock3 : TGUID = '{D53827CA-0296-4948-AD6C-3C334145FDBD}';
  IID_IBODocumentAchatFactory3 : TGUID = '{17DB8F80-222C-49EA-9424-53620A49EF4A}';
  IID_IBODocumentAchat3 : TGUID = '{A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}';
  IID_IBODocumentPart3 : TGUID = '{589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}';
  IID_IBODocumentVenteFactory3 : TGUID = '{E79A30D6-C657-4190-A3EB-BD04C8B48310}';
  IID_IBODocumentVente3 : TGUID = '{85C765D6-E89D-4F0F-BB30-D49EB3A97660}';
  IID_IBODocumentInterneFactory3 : TGUID = '{D8C4D565-F813-4DCD-A57A-87B9033B8174}';
  IID_IBODocumentInterne3 : TGUID = '{7767F876-4462-45C7-84F6-6F6A28B347DA}';
  IID_IBISoucheFactory : TGUID = '{9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}';
  IID_IBIParamDocFactory : TGUID = '{F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}';
  IID_IBOBaremeCommissionFactory : TGUID = '{0B7E40B4-FDE0-4513-955F-AF64B3C24863}';
  IID_IBOBaremeCommission : TGUID = '{58690C03-8166-406A-920B-A3BE8A726585}';
  IID_IBOBaremeRabaisFactory : TGUID = '{F54C7FDE-C060-4583-BACC-5590E613993C}';
  IID_IBOBaremeRabais : TGUID = '{61F8D58F-51E5-4B50-8D34-542D2FD72883}';
  IID_IBPArticleStatFactory : TGUID = '{E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}';
  IID_IBPArticleStat : TGUID = '{24ADFA38-BC1F-4932-9565-470BA40243AF}';
  IID_IBPAgendaFactory : TGUID = '{C2534118-2BAB-47FA-8CF1-A40A9D587D33}';
  IID_IBPAgenda : TGUID = '{9DD61766-76EA-4C2D-8137-FAA080DB0F8A}';
  IID_IPMDocument : TGUID = '{4B1DFF26-1018-4458-9499-C4B84FC548B2}';
  IID_IPMAppliquerBareme : TGUID = '{791D12AB-8EAA-4BDA-971C-A04BC9326C48}';
  IID_IPMControlerQualite : TGUID = '{42F7A6E0-7123-434D-B9B8-28F081E90D04}';
  IID_IBODocumentLigneEmplacement : TGUID = '{668D2238-E763-4F38-8FD3-8B88C136B993}';
  IID_IPMControlerQualiteInfo : TGUID = '{0D937022-1A73-4627-B25C-B3BEC99804BF}';
  IID_IBODocumentLigneAllFactory : TGUID = '{06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}';
  IID_IBOAgendaFactory : TGUID = '{A9348A89-02D7-49DB-A006-61906BB23186}';
  IID_IBORessourceFactory : TGUID = '{CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}';
  IID_IBORessource : TGUID = '{677C7E65-047F-4147-A575-9950816E45C2}';
  IID_IBORessourceCentreFactory : TGUID = '{C4F1A288-C230-49E7-AD37-298A071E7636}';
  IID_IBORessourceCentre : TGUID = '{F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}';
  IID_IControleQualiteStat : TGUID = '{14E6E6E2-D4D5-44B4-A841-87AD58F62118}';
  IID_IPMColiser : TGUID = '{A2D16FA5-8783-4397-9E8B-0736A97CA36F}';
  IID_IBODocumentVenteLigne3 : TGUID = '{5BA16B17-24FF-4FAA-BD06-D014D625E0C6}';
  IID_IBODocumentPartLigne3 : TGUID = '{96BCA363-6B12-4DB8-A50D-8692B6F66BBC}';
  IID_IPMPreleverLot : TGUID = '{8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}';
  IID_IPMDocTransferer : TGUID = '{986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}';
  IID_IBOArticleDepotLotAllFactory : TGUID = '{CD93656D-E510-48EA-ABBD-0C5E39D72F8D}';
  IID_IPMDocInsererSousTotal : TGUID = '{41D5325D-174A-400E-A51A-A35E1A753086}';
  IID_IPMDocRecalculPrixCompose : TGUID = '{EBE47850-78B8-47EF-91BC-57E8CE1865BD}';
  IID_IPMSortirLots : TGUID = '{405385B1-E81A-4AAA-A887-6D4A5C37959B}';
  IID_IBPConditionnementEnum : TGUID = '{19135D34-742C-4715-9200-2B7F5CF89770}';
  IID_IBPDossier2 : TGUID = '{A5202655-3815-4EC7-BFD1-5D9F6C7DD656}';
  IID_IBPSoucheVente : TGUID = '{F421273D-939C-4E59-9585-0471D6814506}';
  IID_IBPSoucheAchat : TGUID = '{DD7ED7B5-8337-4443-A258-CD14BC624221}';
  IID_IBPParamDocInterne : TGUID = '{D765AB8F-E436-47FA-84E8-C997DC6B671A}';
  IID_IBPDossierCial : TGUID = '{A89B56F5-26F8-4A6E-8A14-76AA6560F759}';
  IID_IBPDossierParamCial : TGUID = '{9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}';
  IID_IBPLibelleCpta : TGUID = '{041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}';
  IID_IBOTiersReglement3 : TGUID = '{DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}';
  IID_IBOTiersContact3 : TGUID = '{AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}';
  IID_IBOTiersMedia3 : TGUID = '{1A5D8A40-515B-47E1-A6BD-D7F5822484F5}';
  IID_IBOEcritureA3 : TGUID = '{070D4C75-2DD3-4D5D-A286-86093425C9CF}';
  IID_IBOArticleTarifQteFournisseur3 : TGUID = '{3B9E7020-62B3-4A9E-9B17-F646A2B2588B}';
  IID_IBOArticleTarifGammeFournisseur3 : TGUID = '{ADD705FD-9C81-492E-BD20-A38B5B05101E}';
  IID_IBOArticleMedia3 : TGUID = '{D930E138-156E-4DFA-92F8-42A986242C6D}';
  IID_IBOArticleGammeEnumRef3 : TGUID = '{9295FEC0-B808-492D-A768-0207A1364732}';
  IID_IBOArticleNomenclature3 : TGUID = '{2D056C64-66BA-453E-A0ED-EC5DB6FFC189}';
  IID_IBOArticleTarifQteClient3 : TGUID = '{91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}';
  IID_IBOArticleTarifCondClient3 : TGUID = '{7C538B42-6E4C-4021-AE5B-25D4BD133FE5}';
  IID_IBOArticleTarifGammeClient3 : TGUID = '{1F28C5A0-214C-4D9D-A889-28D13271889E}';
  IID_IBOArticleTarifCategorie3 : TGUID = '{CD62459C-9BBB-4CC1-8E15-5124022916B9}';
  IID_IBOArticleTarifQteCategorie3 : TGUID = '{15AAEFA4-1358-4005-8CBB-4E2386E1801E}';
  IID_IBOArticleTarifCondCategorie3 : TGUID = '{3A3278F2-42EC-4601-9DD1-02C93112E872}';
  IID_IBOArticleTarifGammeCategorie3 : TGUID = '{425F2822-D9A5-4E58-97B4-81495E9744A4}';
  IID_IBOFamilleParamCompta3 : TGUID = '{296446E4-C983-4082-B6E3-E9AF2555F92A}';
  IID_IBODepotContact3 : TGUID = '{2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}';
  IID_IBODocumentLigneLienCM : TGUID = '{5801365B-8A41-40CE-A251-1DC6A24346BE}';
  IID_IBODocumentStockLigne3 : TGUID = '{91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}';
  IID_IBODocumentAcompte3 : TGUID = '{6703E377-CF13-4F07-8675-FBEF6D668F46}';
  IID_IBODocumentEcheance3 : TGUID = '{CEA4D379-037A-4085-8DA9-B53C1B7FB30E}';
  IID_IBODocumentAchatLigne3 : TGUID = '{B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}';
  IID_IBODocumentInterneLigne3 : TGUID = '{5CECD75E-537E-421D-B851-BB0EEA6C0E09}';
  IID_IBOModeleEcritureLigne3 : TGUID = '{4792B8D7-633B-4133-8002-B9BB0DF4BD95}';
  IID_IBOModeleEcritureLigneA3 : TGUID = '{6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}';
  IID_IBOFamilleTarifCategorie : TGUID = '{6F3F0DB1-7921-45AC-B002-23AED4EA291C}';
  IID_IBOFamilleTarifQteCategorie : TGUID = '{5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}';
  IID_IBOFamilleTarifQteFournisseur : TGUID = '{B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}';
  IID_IBOModeleGrilleLigne : TGUID = '{7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}';
  IID_IBOModeleReglementLigne : TGUID = '{37820001-5870-449F-981C-1BDF4C12F35A}';
  IID_IBOBaremeCommissionQte : TGUID = '{89E28BE1-2A85-460A-97DE-925D385DDB03}';
  IID_IBOBaremeRabaisQte : TGUID = '{C5223E93-5506-413B-8993-6BEAB4551E58}';
  IID_IBOEcritureMedia : TGUID = '{45D795D8-23CD-4530-BECB-BEB548FD788F}';
  IID_IBOBanqueContact : TGUID = '{72B11AB9-C89B-4764-8219-5E486D12B678}';
  IID_IBOCompteAContact : TGUID = '{29AD8292-C9B8-4FD5-8D7A-83F7D772395D}';
  IID_IBOCompteAMedia : TGUID = '{652D08CE-08D6-4799-B54B-8D65812DD776}';
  IID_IBOEcritureOD : TGUID = '{1502538D-5FF2-4771-A5CE-F767C839A0F9}';
  IID_IBODocumentMedia : TGUID = '{7176322D-DEE2-4535-BE67-6E60F46C948F}';
  IID_IBOAgenda : TGUID = '{C0B75F00-3BAA-4943-9DCC-630A85D6B226}';
  IID_IUserLot : TGUID = '{2960B194-C946-4357-800D-9B2D21438256}';
  IID_IUserEmplacement : TGUID = '{2477FBD0-0291-4223-B866-F4AB8182153D}';
  IID_IUserColis : TGUID = '{B879AC0E-A9C4-410A-B9F2-B8781FFF523C}';
  CLASS_BSCPTAApplication100c : TGUID = '{309DE0FB-9FB8-4F4E-8295-CC60C60DAA33}';
  CLASS_BSCIALApplication100c : TGUID = '{ED0EC116-16B8-44CC-A68A-41BF6E15EB3F}';

//Enums

Type
  ePredicateType =LongWord;
Const
  PredicateTypeValue = $0000000000000000;
  PredicateTypeComparison = $0000000000000001;
  PredicateTypeCompound = $0000000000000002;
Type
  ePredicateTypeComparison =LongWord;
Const
  PredicateTypeComparisonLesser = $0000000000000000;
  PredicateTypeComparisonLesserEqual = $0000000000000001;
  PredicateTypeComparisonGreater = $0000000000000002;
  PredicateTypeComparisonGreaterEqual = $0000000000000003;
  PredicateTypeComparisonEqual = $0000000000000004;
  PredicateTypeComparisonNotEqual = $0000000000000005;
  PredicateTypeComparisonLike = $0000000000000006;
  PredicateTypeComparisonBegins = $0000000000000007;
  PredicateTypeComparisonEnds = $0000000000000008;
  PredicateTypeComparisonIn = $0000000000000009;
  PredicateTypeComparisonContains = $000000000000000A;
  PredicateTypeComparisonBetween = $000000000000000B;
Type
  ePredicateTypeCompound =LongWord;
Const
  PredicateTypeCompoundAnd = $0000000000000000;
  PredicateTypeCompoundOr = $0000000000000001;
  PredicateTypeCompoundNot = $0000000000000002;
Type
  ArrondiType =LongWord;
Const
  ArrondiTypeProche = $0000000000000000;
  ArrondiTypeSup = $0000000000000001;
  ArrondiTypeInf = $0000000000000002;
  ArrondiTypeFinProche = $0000000000000003;
  ArrondiTypeFinSup = $0000000000000004;
  ArrondiTypeFinInf = $0000000000000005;
Type
  SynchroExtractType =LongWord;
Const
  SynchroTypeExtractNew = $0000000000000000;
  SynchroTypeExtractSended = $0000000000000001;
  SynchroTypeExtractNewAndSended = $0000000000000002;
  SynchroTypeExtractAll = $0000000000000003;
Type
  DatabaseType =LongWord;
Const
  DatabaseTypeNone = $0000000000000000;
  DatabaseTypeSqlServer = $0000000000000001;
  DatabaseTypeSageSql = $0000000000000002;
Type
  DomaineType =LongWord;
Const
  DomaineTypeVente = $0000000000000000;
  DomaineTypeAchat = $0000000000000001;
  DomaineTypeStock = $0000000000000002;
  DomaineTypeTicket = $0000000000000003;
  DomaineTypeInterne = $0000000000000004;
Type
  RemiseType =LongWord;
Const
  RemiseTypeMontant = $0000000000000000;
  RemiseTypePourcent = $0000000000000001;
  RemiseTypeUnite = $0000000000000002;
Type
  DeviseMode =LongWord;
Const
  DeviseModeCertain = $0000000000000000;
  DeviseModeIncertain = $0000000000000001;
Type
  DeviseRemise =LongWord;
Const
  DeviseRemiseAucun = $0000000000000000;
  DeviseRemiseBlanc = $0000000000000001;
  DeviseRemiseFranc = $0000000000000002;
  DeviseRemiseEuro = $0000000000000003;
Type
  AnalytiqueRuptureType =LongWord;
Const
  AnalytiqueRuptureTypeAucun = $0000000000000000;
  AnalytiqueRuptureTypeZoneGeographique = $0000000000000001;
  AnalytiqueRuptureTypeSecteurActivite = $0000000000000002;
Type
  FieldType =LongWord;
Const
  FieldTypeShort = $0000000000000000;
  FieldTypeLong = $0000000000000001;
  FieldTypeDate = $0000000000000002;
  FieldTypeChar = $0000000000000003;
  FieldTypeByte = $0000000000000004;
  FieldTypeFloat = $0000000000000005;
  FieldTypeDouble = $0000000000000006;
  FieldTypePStr = $0000000000000007;
  FieldTypeCStr = $0000000000000008;
  FieldTypeChaine = $0000000000000009;
  FieldTypeStruct = $000000000000000A;
  FieldTypeNumStr = $000000000000000B;
  FieldTypeCptStr = $000000000000000C;
  FieldTypeLDate = $000000000000000D;
  FieldTypeTime = $000000000000000E;
  FieldTypeConstante = $000000000000000F;
  FieldTypePwdStr = $0000000000000010;
  FieldTypeUShort = $0000000000000011;
  FieldTypeULong = $0000000000000012;
  FieldTypeMontant = $0000000000000013;
  FieldTypePath = $0000000000000014;
  FieldTypeTable = $0000000000000015;
Type
  DocumentType =LongWord;
Const
  DocumentTypeVenteDevis = $0000000000000000;
  DocumentTypeVenteCommande = $000000000000000A;
  DocumentTypeVentePrepaLivraison = $0000000000000014;
  DocumentTypeVenteLivraison = $000000000000001E;
  DocumentTypeVenteReprise = $0000000000000028;
  DocumentTypeVenteAvoir = $0000000000000032;
  DocumentTypeVenteFacture = $000000000000003C;
  DocumentTypeVenteFactureCpta = $0000000000000046;
  DocumentTypeVenteArchive = $0000000000000050;
  DocumentTypeAchatCommande = $0000000000000064;
  DocumentTypeAchatCommandeConf = $000000000000006E;
  DocumentTypeAchatLivraison = $0000000000000078;
  DocumentTypeAchatReprise = $0000000000000082;
  DocumentTypeAchatAvoir = $000000000000008C;
  DocumentTypeAchatFacture = $0000000000000096;
  DocumentTypeAchatFactureCpta = $00000000000000A0;
  DocumentTypeAchatArchive = $00000000000000AA;
  DocumentTypeStockMouvIn = $00000000000000B4;
  DocumentTypeStockMouvOut = $00000000000000BE;
  DocumentTypeStockDeprec = $00000000000000C8;
  DocumentTypeStockVirement = $00000000000000D2;
  DocumentTypeStockPreparation = $00000000000000DC;
  DocumentTypeStockOrdreFabrication = $00000000000000E6;
  DocumentTypeStockFabrication = $00000000000000F0;
  DocumentTypeStockArchive = $00000000000000FA;
  DocumentTypeInterne1 = $000000000000010E;
  DocumentTypeInterne2 = $0000000000000118;
  DocumentTypeInterne3 = $0000000000000122;
  DocumentTypeInterne4 = $000000000000012C;
  DocumentTypeInterne5 = $0000000000000136;
  DocumentTypeInterne6 = $0000000000000140;
  DocumentTypeInterneArchive = $000000000000014A;
  DocumentTypeInterne7 = $0000000000000145;
  DocumentTypeAchatDemande = $000000000000005A;
Type
  DepotEmplZone =LongWord;
Const
  DepotEmplZoneAucune = $0000000000000000;
  DepotEmplZoneA = $0000000000000001;
  DepotEmplZoneB = $0000000000000002;
  DepotEmplZoneC = $0000000000000003;
Type
  DepotEmplType =LongWord;
Const
  DepotEmplTypeStandard = $0000000000000000;
  DepotEmplTypeTransit = $0000000000000001;
  DepotEmplTypeControle = $0000000000000002;
Type
  DocumentProvenanceType =LongWord;
Const
  DocProvenanceNormale = $0000000000000000;
  DocProvenanceRetour = $0000000000000001;
  DocProvenanceAvoir = $0000000000000002;
  DocProvenanceTicket = $0000000000000003;
  DocProvenanceRectif = $0000000000000004;
Type
  CompteAType =LongWord;
Const
  CompteATypeDetail = $0000000000000000;
  CompteATypeTotal = $0000000000000001;
Type
  CompteADomaineType =LongWord;
Const
  CompteADomaineTypeVenteAchat = $0000000000000000;
  CompteADomaineTypeVente = $0000000000000001;
  CompteADomaineTypeAchat = $0000000000000002;
Type
  CompteAStatutType =LongWord;
Const
  CompteAStatutProposition = $0000000000000000;
  CompteAStatutAccepte = $0000000000000001;
  CompteAStatutPerdu = $0000000000000002;
  CompteAStatutEnCours = $0000000000000003;
  CompteAStatutAttente = $0000000000000004;
  CompteAStatutTermine = $0000000000000005;
Type
  CompteAModeFacturationType =LongWord;
Const
  CompteAModeFacturationForfait = $0000000000000000;
  CompteAModeFacturationAvancement = $0000000000000001;
Type
  FamilleType =LongWord;
Const
  FamilleTypeDetail = $0000000000000000;
  FamilleTypeTotal = $0000000000000001;
  FamilleTypeCentral = $0000000000000002;
Type
  UnitePlanning =LongWord;
Const
  UnitePlanningMinute = $0000000000000000;
  UnitePlanningHeure = $0000000000000001;
  UnitePlanningJour = $0000000000000002;
  UnitePlanningMois = $0000000000000003;
  UnitePlanningTrimestre = $0000000000000004;
  UnitePlanningSemestre = $0000000000000005;
  UnitePlanningAnnee = $0000000000000006;
Type
  SuiviStockType =LongWord;
Const
  SuiviStockTypeAucun = $0000000000000000;
  SuiviStockTypeSerie = $0000000000000001;
  SuiviStockTypeCmup = $0000000000000002;
  SuiviStockTypeFifo = $0000000000000003;
  SuiviStockTypeLifo = $0000000000000004;
  SuiviStockTypeLot = $0000000000000005;
Type
  UnitePoidsType =LongWord;
Const
  UnitePoidsTypeTonne = $0000000000000000;
  UnitePoidsTypeQuintal = $0000000000000001;
  UnitePoidsTypeKilogramme = $0000000000000002;
  UnitePoidsTypeGramme = $0000000000000003;
  UnitePoidsTypeMilligramme = $0000000000000004;
Type
  FamilleNatureType =LongWord;
Const
  FamilleNatureTypeComposant = $0000000000000000;
  FamilleNatureTypePieceDetachee = $0000000000000001;
  FamilleNatureTypeProduitFini = $0000000000000002;
  FamilleNatureTypeProduitSemiFini = $0000000000000003;
Type
  FamilleCriticiteType =LongWord;
Const
  FamilleCriticiteTypeMineur = $0000000000000000;
  FamilleCriticiteTypeMajeur = $0000000000000001;
  FamilleCriticiteTypeCritique = $0000000000000002;
Type
  BaremeSoldeType =LongWord;
Const
  BaremeSoldeTypeClient = $0000000000000000;
  BaremeSoldeTypeFournisseur = $0000000000000001;
Type
  TiersType =LongWord;
Const
  TiersTypeClient = $0000000000000000;
  TiersTypeFournisseur = $0000000000000001;
  TiersTypeSalarie = $0000000000000002;
  TiersTypeAutre = $0000000000000003;
Type
  CompteGType =LongWord;
Const
  CompteGTypeDetail = $0000000000000000;
  CompteGTypeTotal = $0000000000000001;
Type
  CompteRType =LongWord;
Const
  CompteRTypeDetail = $0000000000000000;
  CompteRTypeTotal = $0000000000000001;
Type
  CompteGReportType =LongWord;
Const
  CompteGReportTypeAucun = $0000000000000000;
  CompteGReportTypeSolde = $0000000000000001;
  CompteGReportTypeDetail = $0000000000000002;
Type
  TaxeTauxType =LongWord;
Const
  TaxeTauxTypePourcent = $0000000000000000;
  TaxeTauxTypeMontant = $0000000000000001;
  TaxeTauxTypeQuantite = $0000000000000002;
Type
  TaxeType =LongWord;
Const
  TaxeTypeTVADebit = $0000000000000000;
  TaxeTypeTVAEncaiss = $0000000000000001;
  TaxeTypeTPHT = $0000000000000002;
  TaxeTypeTPTTC = $0000000000000003;
  TaxeTypeTPPoids = $0000000000000004;
  TaxeTypeCEE = $0000000000000005;
  TaxeTypeSurtaxe = $0000000000000006;
  TaxeTypeIRPF = $0000000000000007;
  TaxeTypeAgraire = $0000000000000008;
  TaxeTypeIGIC = $0000000000000009;
Type
  TaxeSensType =LongWord;
Const
  TaxeSensTypeDeductible = $0000000000000000;
  TaxeSensTypeCollecte = $0000000000000001;
Type
  TaxeProvenanceType =LongWord;
Const
  TaxeProvenanceTypeNational = $0000000000000000;
  TaxeProvenanceTypeIntracom = $0000000000000001;
  TaxeProvenanceTypeExport = $0000000000000002;
  TaxeProvenanceTypeDivers1 = $0000000000000003;
  TaxeProvenanceTypeDivers2 = $0000000000000004;
  TaxeProvenanceTypeDivers3 = $0000000000000005;
  TaxeProvenanceTypeDivers4 = $0000000000000006;
  TaxeProvenanceTypeDivers5 = $0000000000000007;
Type
  NatureCompteType =LongWord;
Const
  NatureCompteTypeClient = $0000000000000000;
  NatureCompteTypeFournisseur = $0000000000000001;
  NatureCompteTypeSalarie = $0000000000000002;
  NatureCompteTypeBanque = $0000000000000003;
  NatureCompteTypeCaisse = $0000000000000004;
  NatureCompteTypeAmort = $0000000000000005;
  NatureCompteTypeResBilan = $0000000000000006;
  NatureCompteTypeCharge = $0000000000000007;
  NatureCompteTypeProduit = $0000000000000008;
  NatureCompteTypeResGestion = $0000000000000009;
  NatureCompteTypeImmo = $000000000000000A;
  NatureCompteTypeCapitaux = $000000000000000B;
  NatureCompteTypeStock = $000000000000000C;
  NatureCompteTypeTitre = $000000000000000D;
Type
  RibType =LongWord;
Const
  RibTypeLocal = $0000000000000000;
  RibTypeAutre = $0000000000000001;
  RibTypeBban = $0000000000000002;
  RibTypeIban = $0000000000000003;
Type
  LangueType =LongWord;
Const
  LangueTypeAucune = $0000000000000000;
  LangueTypeLangue1 = $0000000000000001;
  LangueTypeLangue2 = $0000000000000002;
Type
  JournalType =LongWord;
Const
  JournalTypeAchat = $0000000000000000;
  JournalTypeVente = $0000000000000001;
  JournalTypeTresorerie = $0000000000000002;
  JournalTypeGeneral = $0000000000000003;
  JournalTypeSituation = $0000000000000004;
Type
  JournalNumPieceType =LongWord;
Const
  JournalNumPieceTypeManuelle = $0000000000000000;
  JournalNumPieceTypeContJrnl = $0000000000000001;
  JournalNumPieceTypeContFile = $0000000000000002;
  JournalNumPieceTypeMensuelle = $0000000000000003;
Type
  JournalRapproType =LongWord;
Const
  JournalRapproTypeAucun = $0000000000000000;
  JournalRapproTypeContrepartie = $0000000000000001;
  JournalRapproTypeTresorerie = $0000000000000002;
Type
  PeriodClotureType =LongWord;
Const
  PeriodClotureNone = $0000000000000000;
  PeriodCloturePartial = $0000000000000001;
  PeriodClotureTotal = $0000000000000002;
Type
  EdiCodeType =LongWord;
Const
  EdiCodeTypeGLN = $0000000000000000;
  EdiCodeTypeDUNS = $0000000000000001;
  EdiCodeTypeEDIFACT = $0000000000000002;
Type
  GammeType =LongWord;
Const
  GammeTypeDivers = $0000000000000000;
  GammeTypeQtes = $0000000000000001;
  GammeTypeMontant = $0000000000000002;
  GammeTypePrixNet = $0000000000000003;
Type
  DocumentFraisType =LongWord;
Const
  DocFraisTypeForfait = $0000000000000000;
  DocFraisTypeQuantite = $0000000000000001;
  DocFraisTypePoidsNet = $0000000000000002;
  DocFraisTypePoidsBrut = $0000000000000003;
Type
  GlossaireDomaineType =LongWord;
Const
  GlossaireDomaineTypeArticle = $0000000000000000;
  GlossaireDomaineTypeDocument = $0000000000000001;
Type
  NomenclatureType =LongWord;
Const
  NomenclatureTypeAucun = $0000000000000000;
  NomenclatureTypeFabrication = $0000000000000001;
  NomenclatureTypeCompose = $0000000000000002;
  NomenclatureTypeComposant = $0000000000000003;
  NomenclatureTypeLies = $0000000000000004;
Type
  RisqueType =LongWord;
Const
  RisqueTypeLivrer = $0000000000000000;
  RisqueTypeSurveiller = $0000000000000001;
  RisqueTypeBloquer = $0000000000000002;
Type
  ClientEncoursCtrlType =LongWord;
Const
  ClientEncoursCtrlTypeAuto = $0000000000000000;
  ClientEncoursCtrlTypeCodeRisque = $0000000000000001;
  ClientEncoursCtrlTypeBloque = $0000000000000002;
Type
  ArticleType =LongWord;
Const
  ArticleTypeStandard = $0000000000000000;
  ArticleTypeGamme = $0000000000000001;
  ArticleTypeRessourceUnitaire = $0000000000000002;
  ArticleTypeRessourceMultiple = $0000000000000003;
Type
  RessourceType =LongWord;
Const
  RessourceTypeRessource = $0000000000000000;
  RessourceTypeCentreCharge = $0000000000000001;
Type
  RessourceProdType =LongWord;
Const
  RessourceProdTypeMachine = $0000000000000000;
  RessourceProdTypeHomme = $0000000000000001;
  RessourceProdTypeOutil = $0000000000000002;
  RessourceProdTypeCentral = $0000000000000003;
Type
  LancementType =LongWord;
Const
  LancementTypeStandard = $0000000000000000;
  LancementTypeSpecifique = $0000000000000001;
Type
  CycleType =LongWord;
Const
  CycleTypeLancement = $0000000000000000;
  CycleTypeMaturite = $0000000000000001;
  CycleTypeDeclin = $0000000000000002;
Type
  DocumentLigneMvtStockType =LongWord;
Const
  DocLigneMvtStockTypeAucun = $0000000000000000;
  DocLigneMvtStockTypeEntreeQte = $0000000000000001;
  DocLigneMvtStockTypeEntreeValeur = $0000000000000002;
  DocLigneMvtStockTypeSortieQte = $0000000000000003;
  DocLigneMvtStockTypeSortieValeur = $0000000000000004;
Type
  TransfoMajCoursType =LongWord;
Const
  TransfoMajCoursTypeAucune = $0000000000000000;
  TransfoMajCoursTypeDevEntete = $0000000000000001;
  TransfoMajCoursTypeDevDossier = $0000000000000002;
  TransfoMajCoursTypeTenueEntete = $0000000000000003;
  TransfoMajCoursTypeTenueDossier = $0000000000000004;
Type
  ContactCivilite =LongWord;
Const
  ContactCiviliteMonsieur = $0000000000000000;
  ContactCiviliteMadame = $0000000000000001;
  ContactCiviliteMademoiselle = $0000000000000002;
Type
  ReglementType =LongWord;
Const
  ReglementTypeAucun = $0000000000000000;
  ReglementTypeEspece = $0000000000000001;
  ReglementTypeCheque = $0000000000000002;
  ReglementTypeCarte = $0000000000000003;
  ReglementTypeBonAchat = $0000000000000004;
Type
  ReglementConditionType =LongWord;
Const
  ReglementConditionTypeJour = $0000000000000000;
  ReglementConditionTypeMoisCivil = $0000000000000001;
  ReglementConditionTypeMois = $0000000000000002;
Type
  ReglementRepartitionType =LongWord;
Const
  ReglementRepartitionTypePourcent = $0000000000000000;
  ReglementRepartitionTypeEquilib = $0000000000000001;
  ReglementRepartitionTypeMontant = $0000000000000002;
Type
  EcritureSensType =LongWord;
Const
  EcritureSensTypeDebit = $0000000000000000;
  EcritureSensTypeCredit = $0000000000000001;
Type
  EcritureImpressionType =LongWord;
Const
  EcritureImpressionTypeNImp = $0000000000000000;
  EcritureImpressionTypeBrouillard = $0000000000000001;
  EcritureImpressionTypeJournal = $0000000000000002;
Type
  EcritureType =LongWord;
Const
  EcritureTypeNormal = $0000000000000000;
  EcritureTypeCentral = $0000000000000001;
Type
  EcritureANType =LongWord;
Const
  EcritureANTypeNormal = $0000000000000000;
  EcritureANTypeDetail = $0000000000000001;
  EcritureANTypeSolde = $0000000000000002;
  EcritureANTypeManuel = $0000000000000003;
  EcritureANTypeResultat = $0000000000000004;
Type
  EcritureExpertType =LongWord;
Const
  EcritureExpertTypeNEmis = $0000000000000000;
  EcritureExpertTypeEmis = $0000000000000001;
  EcritureExpertTypeReception = $0000000000000002;
Type
  EcritureNormeType =LongWord;
Const
  EcritureNormeLesDeux = $0000000000000000;
  EcritureNormeNationale = $0000000000000001;
  EcritureNormeIFRS = $0000000000000002;
Type
  ModeleGrilleType =LongWord;
Const
  ModeleGrilleTypeAnalytique = $0000000000000000;
  ModeleGrilleTypeGeneral = $0000000000000001;
Type
  TypeTiersNumerotation =LongWord;
Const
  TypeTiersNumerotationManuel = $0000000000000000;
  TypeTiersNumerotationAuto = $0000000000000001;
  TypeTiersNumerotationRacine = $0000000000000002;
Type
  TypeTiersCompteType =LongWord;
Const
  TypeTiersCompteTypeRadical = $0000000000000000;
  TypeTiersCompteTypeCompte = $0000000000000001;
Type
  BanqueModeRemise =LongWord;
Const
  BanqueModeRemiseFichier = $0000000000000000;
  BanqueModeRemiseTeleTrans = $0000000000000001;
  BanqueModeRemisePapier = $0000000000000002;
  BanqueModeRemiseInternet = $0000000000000003;
  BanqueModeRemiseMessagerie = $0000000000000004;
Type
  BanqueRemise =LongWord;
Const
  BanqueRemiseMonoDevMonoDate = $0000000000000000;
  BanqueRemiseMonoDevMultiDate = $0000000000000001;
  BanqueRemiseMultiDevMonoDate = $0000000000000002;
  BanqueRemiseMultiDevMultiDate = $0000000000000003;
Type
  BanqueFormatVirement =LongWord;
Const
  BanqueFormatVirementAFB = $0000000000000000;
  BanqueFormatVirementSEPA = $0000000000000001;
  BanqueFormatVirement320S = $0000000000000002;
Type
  StructBanqueFieldType =LongWord;
Const
  StructBanqueFieldTypeNumeric = $0000000000000000;
  StructBanqueFieldTypeAlphanum = $0000000000000001;
Type
  StructBanqueControleRib =LongWord;
Const
  StructBanqueControleRibAucun = $0000000000000000;
  StructBanqueControleRibFrance = $0000000000000001;
  StructBanqueControleRibEspagne = $0000000000000002;
  StructBanqueControleRibPortugal = $0000000000000003;
  StructBanqueControleRibBelgique = $0000000000000004;
Type
  LettrageType =LongWord;
Const
  LettrageTypeLettrageMontant = $0000000000000000;
  LettrageTypePrelettrageMontant = $0000000000000001;
  LettrageTypeLettrageDevise = $0000000000000002;
  LettrageTypePrelettrageDevise = $0000000000000003;
  LettrageTypePointageMontant = $0000000000000004;
Type
  DocumentStatutType =LongWord;
Const
  DocumentStatutTypeSaisie = $0000000000000000;
  DocumentStatutTypeConfirme = $0000000000000001;
  DocumentStatutTypeAPrepare = $0000000000000002;
Type
  DocumentConditionPaiementType =LongWord;
Const
  DocumentConditionPaiementTiers = $0000000000000000;
  DocumentConditionPaiementSaisie = $0000000000000001;
  DocumentConditionPaiementModele = $0000000000000002;
Type
  BaremeCommissionInteresse =LongWord;
Const
  BaremeCommissionInteresseRepresentant = $0000000000000000;
  BaremeCommissionInteresseGlobal = $0000000000000001;
Type
  BaremeCommissionObjectif =LongWord;
Const
  BaremeCommissionObjectifQuantite = $0000000000000000;
  BaremeCommissionObjectifValeur = $0000000000000001;
  BaremeCommissionObjectifTauxRemise = $0000000000000002;
Type
  BaremeCommissionBase =LongWord;
Const
  BaremeCommissionBaseCaHT = $0000000000000000;
  BaremeCommissionBaseMargeHT = $0000000000000001;
Type
  BaremeCommissionDomaine =LongWord;
Const
  BaremeCommissionDomaineCommande = $0000000000000000;
  BaremeCommissionDomainePreparation = $0000000000000001;
  BaremeCommissionDomaineLivraison = $0000000000000002;
  BaremeCommissionDomaineFacturation = $0000000000000003;
  BaremeCommissionDomaineEncaissement = $0000000000000004;
Type
  BaremeCommissionCalcul =LongWord;
Const
  BaremeCommissionCalculTranche = $0000000000000000;
  BaremeCommissionCalculGlobal = $0000000000000001;
Type
  BaremeRabaisObjectif =LongWord;
Const
  BaremeRabaisObjectifQuantite = $0000000000000000;
  BaremeRabaisObjectifValeur = $0000000000000001;
Type
  BaremeRabaisCalcul =LongWord;
Const
  BaremeRabaisCalculTranche = $0000000000000000;
  BaremeRabaisCalculGlobal = $0000000000000001;
Type
  BaremeRabaisType =LongWord;
Const
  BaremeRabaisTypeClient = $0000000000000000;
  BaremeRabaisTypeFournisseur = $0000000000000001;
Type
  AgendaTypeInteresse =LongWord;
Const
  AgendaTypeInteresseDepot = $0000000000000000;
  AgendaTypeInteresseClient = $0000000000000001;
  AgendaTypeInteresseFournisseur = $0000000000000002;
  AgendaTypeInteresseCollaborateur = $0000000000000003;
  AgendaTypeInteresseArticle = $0000000000000004;
  AgendaTypeInteresseRessource = $0000000000000005;
Type
  DocumentLigneProvenanceType =LongWord;
Const
  DocLigneProvenanceNormale = $0000000000000000;
  DocLigneProvenanceRetour = $0000000000000001;
  DocLigneProvenanceAvoir = $0000000000000002;
  DocLigneProvenanceRectifVal = $0000000000000003;
  DocLigneProvenanceRectifQte = $0000000000000004;
Type
  DocumentInterneMvtType =LongWord;
Const
  DocumentInterneMvtTypeAucun = $0000000000000000;
  DocumentInterneMvtTypeEntreeQte = $0000000000000001;
  DocumentInterneMvtTypeSortieQte = $0000000000000002;
  DocumentInterneMvtTypeGainFinancier = $0000000000000003;
  DocumentInterneMvtTypePerteFinancier = $0000000000000004;
  DocumentInterneMvtTypeRealise = $0000000000000005;
Type
  DossierParamEmplacementPriorite =LongWord;
Const
  EmplacementPrioriteNonPrincipal = $0000000000000000;
  EmplacementPrioritePrincipal = $0000000000000001;
  EmplacementPrioriteZone = $0000000000000002;
Type
  DossierParamTypeZone =LongWord;
Const
  DossierParamTypeZoneC39 = $0000000000000000;
  DossierParamTypeZoneNUM = $0000000000000001;
  DossierParamTypeZoneEAN8 = $0000000000000002;
  DossierParamTypeZoneEAN13 = $0000000000000003;
  DossierParamTypeZoneSSCC18 = $0000000000000004;
Type
  ComposantType =LongWord;
Const
  ComposantTypeFixe = $0000000000000000;
  ComposantTypeVariable = $0000000000000001;
Type
  RepartitionType =LongWord;
Const
  RepartitionTypePourcent = $0000000000000000;
  RepartitionTypeEquilib = $0000000000000001;
  RepartitionTypeMontant = $0000000000000002;
Type
  EcritureODType =LongWord;
Const
  EcritureODTypeOD = $0000000000000000;
  EcritureODTypeReport = $0000000000000001;
Type
  AgendaType =LongWord;
Const
  AgendaInteresse = $0000000000000000;
  AgendaDocument = $0000000000000001;
  AgendaFabrication = $0000000000000002;
//Forward declarations

Type
 IBITransactional = interface;
 IBITransactionalDisp = dispinterface;
 ISynchroLog = interface;
 ISynchroLogDisp = dispinterface;
 IPredicate = interface;
 IPredicateDisp = dispinterface;
 IPredicateValue = interface;
 IPredicateValueDisp = dispinterface;
 IPredicateComparison = interface;
 IPredicateComparisonDisp = dispinterface;
 IBIValuesInsertable = interface;
 IBIValuesInsertableDisp = dispinterface;
 IPredicateCompound = interface;
 IPredicateCompoundDisp = dispinterface;
 IBICollectionPredicate = interface;
 IBICollectionPredicateDisp = dispinterface;
 IPredicateBuilder = interface;
 IPredicateBuilderDisp = dispinterface;
 IArrondi = interface;
 IArrondiDisp = dispinterface;
 IBIPersistObject = interface;
 IBIPersistObjectDisp = dispinterface;
 IBITypeObjectFactory = interface;
 IBITypeObjectFactoryDisp = dispinterface;
 IBICollection = interface;
 IBICollectionDisp = dispinterface;
 IBIObjectID = interface;
 IBIObjectIDDisp = dispinterface;
 IBICollectionDispatch = interface;
 IBICollectionDispatchDisp = dispinterface;
 IStream = interface;
 ISequentialStream = interface;
 IBIPersistStream = interface;
 IBIPersistStreamDisp = dispinterface;
 IDatabaseInfo = interface;
 IDatabaseInfoDisp = dispinterface;
 ISynchroStream = interface;
 ISynchroStreamDisp = dispinterface;
 IBIObjectIDExternal = interface;
 IBIObjectIDExternalDisp = dispinterface;
 IBIMedia = interface;
 IBIMediaDisp = dispinterface;
 IBICategorieCompta = interface;
 IBICategorieComptaDisp = dispinterface;
 IDocValorisation = interface;
 IDocValorisationDisp = dispinterface;
 IDocValoTaxes = interface;
 IDocValoTaxesDisp = dispinterface;
 IDocValoTaxe = interface;
 IDocValoTaxeDisp = dispinterface;
 IDocValoEscompte = interface;
 IDocValoEscompteDisp = dispinterface;
 IFrais2 = interface;
 IFrais2Disp = dispinterface;
 IFraisElem2 = interface;
 IFraisElem2Disp = dispinterface;
 IRemise2 = interface;
 IRemise2Disp = dispinterface;
 IRemiseElem2 = interface;
 IRemiseElem2Disp = dispinterface;
 IBPDevise2 = interface;
 IBPDevise2Disp = dispinterface;
 IBPDeviseFactory2 = interface;
 IBPDeviseFactory2Disp = dispinterface;
 IAdresse = interface;
 IAdresseDisp = dispinterface;
 ITelecom = interface;
 ITelecomDisp = dispinterface;
 ITarif2 = interface;
 ITarif2Disp = dispinterface;
 IDevise = interface;
 IDeviseDisp = dispinterface;
 ITarifVente2 = interface;
 ITarifVente2Disp = dispinterface;
 ITarifAchat2 = interface;
 ITarifAchat2Disp = dispinterface;
 IBPAnalytiqueRupture = interface;
 IBPAnalytiqueRuptureDisp = dispinterface;
 IDocLigneValorisation = interface;
 IDocLigneValorisationDisp = dispinterface;
 ITransformation = interface;
 ITransformationDisp = dispinterface;
 ITransformationVente = interface;
 ITransformationVenteDisp = dispinterface;
 IPMDocTransformer = interface;
 IPMDocTransformerDisp = dispinterface;
 IPMProcess = interface;
 IPMProcessDisp = dispinterface;
 IFailInfoCol = interface;
 IFailInfoColDisp = dispinterface;
 IFailInfo = interface;
 IFailInfoDisp = dispinterface;
 IBODocument3 = interface;
 IBODocument3Disp = dispinterface;
 IBODocumentFactory = interface;
 IBODocumentFactoryDisp = dispinterface;
 IBIFields = interface;
 IBIFieldsDisp = dispinterface;
 IBIField = interface;
 IBIFieldDisp = dispinterface;
 IBODocumentLigneFactory = interface;
 IBODocumentLigneFactoryDisp = dispinterface;
 IBODepot3 = interface;
 IBODepot3Disp = dispinterface;
 IBODepotFactory2 = interface;
 IBODepotFactory2Disp = dispinterface;
 IBODepotEmplacementFactory = interface;
 IBODepotEmplacementFactoryDisp = dispinterface;
 IBODepotEmplacement = interface;
 IBODepotEmplacementDisp = dispinterface;
 IBISouche = interface;
 IBISoucheDisp = dispinterface;
 IBIValues = interface;
 IBIValuesDisp = dispinterface;
 IBOCollaborateur = interface;
 IBOCollaborateurDisp = dispinterface;
 IBOCollaborateurFactory = interface;
 IBOCollaborateurFactoryDisp = dispinterface;
 IBOCompteA3 = interface;
 IBOCompteA3Disp = dispinterface;
 IBOCompteAFactory3 = interface;
 IBOCompteAFactory3Disp = dispinterface;
 IBPAnalytique3 = interface;
 IBPAnalytique3Disp = dispinterface;
 IBPAnalytiqueFactory3 = interface;
 IBPAnalytiqueFactory3Disp = dispinterface;
 IBPAnalyse = interface;
 IBPAnalyseDisp = dispinterface;
 IBPAnalyseFactory = interface;
 IBPAnalyseFactoryDisp = dispinterface;
 IBODocumentLigne3 = interface;
 IBODocumentLigne3Disp = dispinterface;
 IBOArticle3 = interface;
 IBOArticle3Disp = dispinterface;
 IBOArticleFactory3 = interface;
 IBOArticleFactory3Disp = dispinterface;
 IBOFamille3 = interface;
 IBOFamille3Disp = dispinterface;
 IBOFamilleFactory2 = interface;
 IBOFamilleFactory2Disp = dispinterface;
 IBPProduit2 = interface;
 IBPProduit2Disp = dispinterface;
 IBPProduitFactory2 = interface;
 IBPProduitFactory2Disp = dispinterface;
 IBPUnite = interface;
 IBPUniteDisp = dispinterface;
 IBPUniteFactory = interface;
 IBPUniteFactoryDisp = dispinterface;
 IBOModele2 = interface;
 IBOModele2Disp = dispinterface;
 IBOModeleFactory = interface;
 IBOModeleFactoryDisp = dispinterface;
 IBOBaremeSolde = interface;
 IBOBaremeSoldeDisp = dispinterface;
 IBOBaremeSoldeFactory = interface;
 IBOBaremeSoldeFactoryDisp = dispinterface;
 IBOFournisseur3 = interface;
 IBOFournisseur3Disp = dispinterface;
 IBOTiersPart3 = interface;
 IBOTiersPart3Disp = dispinterface;
 IBOTiers3 = interface;
 IBOTiers3Disp = dispinterface;
 IBOTiersFactory3 = interface;
 IBOTiersFactory3Disp = dispinterface;
 IBOTiersCompteGFactory3 = interface;
 IBOTiersCompteGFactory3Disp = dispinterface;
 IBOCompteG3 = interface;
 IBOCompteG3Disp = dispinterface;
 IBOCompteGFactory3 = interface;
 IBOCompteGFactory3Disp = dispinterface;
 IBOCompteR = interface;
 IBOCompteRDisp = dispinterface;
 IBOCompteGTiersFactory3 = interface;
 IBOCompteGTiersFactory3Disp = dispinterface;
 IBOTaxe3 = interface;
 IBOTaxe3Disp = dispinterface;
 IBOTaxeFactory3 = interface;
 IBOTaxeFactory3Disp = dispinterface;
 IBPNatureCompte = interface;
 IBPNatureCompteDisp = dispinterface;
 IBPNatureCompteFactory = interface;
 IBPNatureCompteFactoryDisp = dispinterface;
 IBPNatureCompteDet = interface;
 IBPNatureCompteDetDisp = dispinterface;
 IBPNatureCompteDetFactory = interface;
 IBPNatureCompteDetFactoryDisp = dispinterface;
 IBOTiersBanque3 = interface;
 IBOTiersBanque3Disp = dispinterface;
 IBOJournal3 = interface;
 IBOJournal3Disp = dispinterface;
 IBOJournalFactory3 = interface;
 IBOJournalFactory3Disp = dispinterface;
 IBOModeleReglement = interface;
 IBOModeleReglementDisp = dispinterface;
 IBOModeleReglementFactory = interface;
 IBOModeleReglementFactoryDisp = dispinterface;
 IBOFournisseurFactory3 = interface;
 IBOFournisseurFactory3Disp = dispinterface;
 IBOFournisseurTarifFactory3 = interface;
 IBOFournisseurTarifFactory3Disp = dispinterface;
 IBOArticleTarifFournisseur3 = interface;
 IBOArticleTarifFournisseur3Disp = dispinterface;
 IBIArticleTarif3 = interface;
 IBIArticleTarif3Disp = dispinterface;
 IBPGamme = interface;
 IBPGammeDisp = dispinterface;
 IBPGammeFactory = interface;
 IBPGammeFactoryDisp = dispinterface;
 IBPExpedition3 = interface;
 IBPExpedition3Disp = dispinterface;
 IBPExpeditionFactory3 = interface;
 IBPExpeditionFactory3Disp = dispinterface;
 IBPConditionLivraison = interface;
 IBPConditionLivraisonDisp = dispinterface;
 IBPConditionLivraisonFactory = interface;
 IBPConditionLivraisonFactoryDisp = dispinterface;
 IBOFournisseurTarifFamilleFactory = interface;
 IBOFournisseurTarifFamilleFactoryDisp = dispinterface;
 IBOFamilleTarifFournisseur = interface;
 IBOFamilleTarifFournisseurDisp = dispinterface;
 IBIFamilleTarif = interface;
 IBIFamilleTarifDisp = dispinterface;
 IBOArticleGlossaireFactory2 = interface;
 IBOArticleGlossaireFactory2Disp = dispinterface;
 IBOGlossaire2 = interface;
 IBOGlossaire2Disp = dispinterface;
 IBOGlossaireFactory = interface;
 IBOGlossaireFactoryDisp = dispinterface;
 IBOArticleParamComptaFactory3 = interface;
 IBOArticleParamComptaFactory3Disp = dispinterface;
 IBOArticleParamCompta3 = interface;
 IBOArticleParamCompta3Disp = dispinterface;
 IBIParamCompta3 = interface;
 IBIParamCompta3Disp = dispinterface;
 IBOArticleDepotFactory = interface;
 IBOArticleDepotFactoryDisp = dispinterface;
 IBOArticleDepot3 = interface;
 IBOArticleDepot3Disp = dispinterface;
 IBIArticleStock3 = interface;
 IBIArticleStock3Disp = dispinterface;
 IBIArticleStockEmplFactory = interface;
 IBIArticleStockEmplFactoryDisp = dispinterface;
 IBIArticleStockEmpl = interface;
 IBIArticleStockEmplDisp = dispinterface;
 IBOArticleDepotGammeFactory = interface;
 IBOArticleDepotGammeFactoryDisp = dispinterface;
 IBOArticleGammeEnum3 = interface;
 IBOArticleGammeEnum3Disp = dispinterface;
 IBOArticleDepotGamme3 = interface;
 IBOArticleDepotGamme3Disp = dispinterface;
 IBOArticleDepotLotFactory = interface;
 IBOArticleDepotLotFactoryDisp = dispinterface;
 IBOArticleDepotLot = interface;
 IBOArticleDepotLotDisp = dispinterface;
 IBILot = interface;
 IBILotDisp = dispinterface;
 IBOArticleGammeEnumFactory = interface;
 IBOArticleGammeEnumFactoryDisp = dispinterface;
 IBOArticleCondFactory = interface;
 IBOArticleCondFactoryDisp = dispinterface;
 IBOArticleCond3 = interface;
 IBOArticleCond3Disp = dispinterface;
 IBPConditionnement = interface;
 IBPConditionnementDisp = dispinterface;
 IBPConditionnementFactory = interface;
 IBPConditionnementFactoryDisp = dispinterface;
 IBPCategorieTarif = interface;
 IBPCategorieTarifDisp = dispinterface;
 IBPCategorieTarifFactory = interface;
 IBPCategorieTarifFactoryDisp = dispinterface;
 IBOClient3 = interface;
 IBOClient3Disp = dispinterface;
 IBOClientFactory3 = interface;
 IBOClientFactory3Disp = dispinterface;
 IBOClientTarifFactory3 = interface;
 IBOClientTarifFactory3Disp = dispinterface;
 IBOArticleTarifClient3 = interface;
 IBOArticleTarifClient3Disp = dispinterface;
 IBIArticleTarifVente3 = interface;
 IBIArticleTarifVente3Disp = dispinterface;
 IBPArrondi = interface;
 IBPArrondiDisp = dispinterface;
 IBPCodeRisque = interface;
 IBPCodeRisqueDisp = dispinterface;
 IBPCodeRisqueFactory = interface;
 IBPCodeRisqueFactoryDisp = dispinterface;
 IBPPeriodicite = interface;
 IBPPeriodiciteDisp = dispinterface;
 IBPPeriodiciteFactory = interface;
 IBPPeriodiciteFactoryDisp = dispinterface;
 IBOClientLivraison3 = interface;
 IBOClientLivraison3Disp = dispinterface;
 IBOClientTarifFamilleFactory = interface;
 IBOClientTarifFamilleFactoryDisp = dispinterface;
 IBOFamilleTarifClient = interface;
 IBOFamilleTarifClientDisp = dispinterface;
 IBIFamilleTarifVente = interface;
 IBIFamilleTarifVenteDisp = dispinterface;
 IBIRessource = interface;
 IBIRessourceDisp = dispinterface;
 IBIRessourceFactory = interface;
 IBIRessourceFactoryDisp = dispinterface;
 IBIRessourceArticleFactory = interface;
 IBIRessourceArticleFactoryDisp = dispinterface;
 IBIRessourceRessourceFactory = interface;
 IBIRessourceRessourceFactoryDisp = dispinterface;
 IDateTimePeriod = interface;
 IDateTimePeriodDisp = dispinterface;
 IBOArticleRessourceFactory = interface;
 IBOArticleRessourceFactoryDisp = dispinterface;
 ITransformationAchat = interface;
 ITransformationAchatDisp = dispinterface;
 IBIContact2 = interface;
 IBIContact2Disp = dispinterface;
 IBPServiceContact = interface;
 IBPServiceContactDisp = dispinterface;
 IBPServiceContactFactory = interface;
 IBPServiceContactFactoryDisp = dispinterface;
 IBPContact = interface;
 IBPContactDisp = dispinterface;
 IBPContactFactory = interface;
 IBPContactFactoryDisp = dispinterface;
 IBIArticleTarifGamme3 = interface;
 IBIArticleTarifGamme3Disp = dispinterface;
 IBIArticleTarifQte3 = interface;
 IBIArticleTarifQte3Disp = dispinterface;
 IBIArticleTarifCond3 = interface;
 IBIArticleTarifCond3Disp = dispinterface;
 IBIFamilleTarifQte = interface;
 IBIFamilleTarifQteDisp = dispinterface;
 IBIReglement = interface;
 IBIReglementDisp = dispinterface;
 IBPReglement3 = interface;
 IBPReglement3Disp = dispinterface;
 IBPReglementFactory3 = interface;
 IBPReglementFactory3Disp = dispinterface;
 IBIParamDoc = interface;
 IBIParamDocDisp = dispinterface;
 IDossierExercice = interface;
 IDossierExerciceDisp = dispinterface;
 IDossierExerciceReportANouveaux = interface;
 IDossierExerciceReportANouveauxDisp = dispinterface;
 IDossierExerciceReportANouveauxIFRS = interface;
 IDossierExerciceReportANouveauxIFRSDisp = dispinterface;
 IDossierTiers = interface;
 IDossierTiersDisp = dispinterface;
 IBOClientLivraisonAllFactory = interface;
 IBOClientLivraisonAllFactoryDisp = dispinterface;
 IRegistreRevision = interface;
 IRegistreRevisionDisp = dispinterface;
 IBSCPTAApplication3 = interface;
 IBSCPTAApplication3Disp = dispinterface;
 ILicence = interface;
 ILicenceDisp = dispinterface;
 ILicenceProduct = interface;
 ILicenceProductDisp = dispinterface;
 ILicenceUserInfo = interface;
 ILicenceUserInfoDisp = dispinterface;
 ILicenceProducts = interface;
 ILicenceProductsDisp = dispinterface;
 IBILoggable = interface;
 IBILoggableDisp = dispinterface;
 IBOTiersAutreFactory2 = interface;
 IBOTiersAutreFactory2Disp = dispinterface;
 IBOTiersSalarieFactory2 = interface;
 IBOTiersSalarieFactory2Disp = dispinterface;
 IBOEcritureFactory3 = interface;
 IBOEcritureFactory3Disp = dispinterface;
 IBOEcriture3 = interface;
 IBOEcriture3Disp = dispinterface;
 IBOEcritureAFactory2 = interface;
 IBOEcritureAFactory2Disp = dispinterface;
 IBODossierContactFactory2 = interface;
 IBODossierContactFactory2Disp = dispinterface;
 IBODossierContact3 = interface;
 IBODossierContact3Disp = dispinterface;
 IBOModeleEcritureFactory2 = interface;
 IBOModeleEcritureFactory2Disp = dispinterface;
 IBOModeleEcriture3 = interface;
 IBOModeleEcriture3Disp = dispinterface;
 IBPRappelFactory = interface;
 IBPRappelFactoryDisp = dispinterface;
 IBPRappel = interface;
 IBPRappelDisp = dispinterface;
 IBPTiersStatFactory = interface;
 IBPTiersStatFactoryDisp = dispinterface;
 IBPTiersStat = interface;
 IBPTiersStatDisp = dispinterface;
 IBOModeleGrilleFactory = interface;
 IBOModeleGrilleFactoryDisp = dispinterface;
 IBOModeleGrille = interface;
 IBOModeleGrilleDisp = dispinterface;
 IBOModeleGrilleLigneFactory = interface;
 IBOModeleGrilleLigneFactoryDisp = dispinterface;
 IBPTiersFactory = interface;
 IBPTiersFactoryDisp = dispinterface;
 IBPTiers = interface;
 IBPTiersDisp = dispinterface;
 IPMEncoder = interface;
 IPMEncoderDisp = dispinterface;
 IBOBanqueFactory = interface;
 IBOBanqueFactoryDisp = dispinterface;
 IBOBanque = interface;
 IBOBanqueDisp = dispinterface;
 IBOBanqueRibFactory = interface;
 IBOBanqueRibFactoryDisp = dispinterface;
 IBOBanqueRib = interface;
 IBOBanqueRibDisp = dispinterface;
 IBPStructBanqueFactory = interface;
 IBPStructBanqueFactoryDisp = dispinterface;
 IBPStructBanque = interface;
 IBPStructBanqueDisp = dispinterface;
 IPMLettrer = interface;
 IPMLettrerDisp = dispinterface;
 IBOPaysFactory = interface;
 IBOPaysFactoryDisp = dispinterface;
 IBOPays = interface;
 IBOPaysDisp = dispinterface;
 IBOCompteRFactory = interface;
 IBOCompteRFactoryDisp = dispinterface;
 IBOEcritureAAllFactory = interface;
 IBOEcritureAAllFactoryDisp = dispinterface;
 IBOJournalAFactory = interface;
 IBOJournalAFactoryDisp = dispinterface;
 IBOJournalA = interface;
 IBOJournalADisp = dispinterface;
 IBOEcritureODFactory = interface;
 IBOEcritureODFactoryDisp = dispinterface;
 ICompanies = interface;
 ICompaniesDisp = dispinterface;
 ICompany = interface;
 ICompanyDisp = dispinterface;
 IBSCIALApplication3 = interface;
 IBSCIALApplication3Disp = dispinterface;
 IBPCategorieComptaVenteFactory = interface;
 IBPCategorieComptaVenteFactoryDisp = dispinterface;
 IBPCategorieComptaVente = interface;
 IBPCategorieComptaVenteDisp = dispinterface;
 IBPCategorieComptaAchatFactory = interface;
 IBPCategorieComptaAchatFactoryDisp = dispinterface;
 IBPCategorieComptaAchat = interface;
 IBPCategorieComptaAchatDisp = dispinterface;
 IBPCategorieComptaStockFactory = interface;
 IBPCategorieComptaStockFactoryDisp = dispinterface;
 IBPCategorieComptaStock = interface;
 IBPCategorieComptaStockDisp = dispinterface;
 IBODocumentStockFactory3 = interface;
 IBODocumentStockFactory3Disp = dispinterface;
 IBODocumentStock3 = interface;
 IBODocumentStock3Disp = dispinterface;
 IBODocumentAchatFactory3 = interface;
 IBODocumentAchatFactory3Disp = dispinterface;
 IBODocumentAchat3 = interface;
 IBODocumentAchat3Disp = dispinterface;
 IBODocumentPart3 = interface;
 IBODocumentPart3Disp = dispinterface;
 IBODocumentVenteFactory3 = interface;
 IBODocumentVenteFactory3Disp = dispinterface;
 IBODocumentVente3 = interface;
 IBODocumentVente3Disp = dispinterface;
 IBODocumentInterneFactory3 = interface;
 IBODocumentInterneFactory3Disp = dispinterface;
 IBODocumentInterne3 = interface;
 IBODocumentInterne3Disp = dispinterface;
 IBISoucheFactory = interface;
 IBISoucheFactoryDisp = dispinterface;
 IBIParamDocFactory = interface;
 IBIParamDocFactoryDisp = dispinterface;
 IBOBaremeCommissionFactory = interface;
 IBOBaremeCommissionFactoryDisp = dispinterface;
 IBOBaremeCommission = interface;
 IBOBaremeCommissionDisp = dispinterface;
 IBOBaremeRabaisFactory = interface;
 IBOBaremeRabaisFactoryDisp = dispinterface;
 IBOBaremeRabais = interface;
 IBOBaremeRabaisDisp = dispinterface;
 IBPArticleStatFactory = interface;
 IBPArticleStatFactoryDisp = dispinterface;
 IBPArticleStat = interface;
 IBPArticleStatDisp = dispinterface;
 IBPAgendaFactory = interface;
 IBPAgendaFactoryDisp = dispinterface;
 IBPAgenda = interface;
 IBPAgendaDisp = dispinterface;
 IPMDocument = interface;
 IPMDocumentDisp = dispinterface;
 IPMAppliquerBareme = interface;
 IPMAppliquerBaremeDisp = dispinterface;
 IPMControlerQualite = interface;
 IPMControlerQualiteDisp = dispinterface;
 IBODocumentLigneEmplacement = interface;
 IBODocumentLigneEmplacementDisp = dispinterface;
 IPMControlerQualiteInfo = interface;
 IPMControlerQualiteInfoDisp = dispinterface;
 IBODocumentLigneAllFactory = interface;
 IBODocumentLigneAllFactoryDisp = dispinterface;
 IBOAgendaFactory = interface;
 IBOAgendaFactoryDisp = dispinterface;
 IBORessourceFactory = interface;
 IBORessourceFactoryDisp = dispinterface;
 IBORessource = interface;
 IBORessourceDisp = dispinterface;
 IBORessourceCentreFactory = interface;
 IBORessourceCentreFactoryDisp = dispinterface;
 IBORessourceCentre = interface;
 IBORessourceCentreDisp = dispinterface;
 IControleQualiteStat = interface;
 IControleQualiteStatDisp = dispinterface;
 IPMColiser = interface;
 IPMColiserDisp = dispinterface;
 IBODocumentVenteLigne3 = interface;
 IBODocumentVenteLigne3Disp = dispinterface;
 IBODocumentPartLigne3 = interface;
 IBODocumentPartLigne3Disp = dispinterface;
 IPMPreleverLot = interface;
 IPMPreleverLotDisp = dispinterface;
 IPMDocTransferer = interface;
 IPMDocTransfererDisp = dispinterface;
 IBOArticleDepotLotAllFactory = interface;
 IBOArticleDepotLotAllFactoryDisp = dispinterface;
 IPMDocInsererSousTotal = interface;
 IPMDocInsererSousTotalDisp = dispinterface;
 IPMDocRecalculPrixCompose = interface;
 IPMDocRecalculPrixComposeDisp = dispinterface;
 IPMSortirLots = interface;
 IPMSortirLotsDisp = dispinterface;
 IBPConditionnementEnum = interface;
 IBPConditionnementEnumDisp = dispinterface;
 IBPDossier2 = interface;
 IBPDossier2Disp = dispinterface;
 IBPSoucheVente = interface;
 IBPSoucheVenteDisp = dispinterface;
 IBPSoucheAchat = interface;
 IBPSoucheAchatDisp = dispinterface;
 IBPParamDocInterne = interface;
 IBPParamDocInterneDisp = dispinterface;
 IBPDossierCial = interface;
 IBPDossierCialDisp = dispinterface;
 IBPDossierParamCial = interface;
 IBPDossierParamCialDisp = dispinterface;
 IBPLibelleCpta = interface;
 IBPLibelleCptaDisp = dispinterface;
 IBOTiersReglement3 = interface;
 IBOTiersReglement3Disp = dispinterface;
 IBOTiersContact3 = interface;
 IBOTiersContact3Disp = dispinterface;
 IBOTiersMedia3 = interface;
 IBOTiersMedia3Disp = dispinterface;
 IBOEcritureA3 = interface;
 IBOEcritureA3Disp = dispinterface;
 IBOArticleTarifQteFournisseur3 = interface;
 IBOArticleTarifQteFournisseur3Disp = dispinterface;
 IBOArticleTarifGammeFournisseur3 = interface;
 IBOArticleTarifGammeFournisseur3Disp = dispinterface;
 IBOArticleMedia3 = interface;
 IBOArticleMedia3Disp = dispinterface;
 IBOArticleGammeEnumRef3 = interface;
 IBOArticleGammeEnumRef3Disp = dispinterface;
 IBOArticleNomenclature3 = interface;
 IBOArticleNomenclature3Disp = dispinterface;
 IBOArticleTarifQteClient3 = interface;
 IBOArticleTarifQteClient3Disp = dispinterface;
 IBOArticleTarifCondClient3 = interface;
 IBOArticleTarifCondClient3Disp = dispinterface;
 IBOArticleTarifGammeClient3 = interface;
 IBOArticleTarifGammeClient3Disp = dispinterface;
 IBOArticleTarifCategorie3 = interface;
 IBOArticleTarifCategorie3Disp = dispinterface;
 IBOArticleTarifQteCategorie3 = interface;
 IBOArticleTarifQteCategorie3Disp = dispinterface;
 IBOArticleTarifCondCategorie3 = interface;
 IBOArticleTarifCondCategorie3Disp = dispinterface;
 IBOArticleTarifGammeCategorie3 = interface;
 IBOArticleTarifGammeCategorie3Disp = dispinterface;
 IBOFamilleParamCompta3 = interface;
 IBOFamilleParamCompta3Disp = dispinterface;
 IBODepotContact3 = interface;
 IBODepotContact3Disp = dispinterface;
 IBODocumentLigneLienCM = interface;
 IBODocumentLigneLienCMDisp = dispinterface;
 IBODocumentStockLigne3 = interface;
 IBODocumentStockLigne3Disp = dispinterface;
 IBODocumentAcompte3 = interface;
 IBODocumentAcompte3Disp = dispinterface;
 IBODocumentEcheance3 = interface;
 IBODocumentEcheance3Disp = dispinterface;
 IBODocumentAchatLigne3 = interface;
 IBODocumentAchatLigne3Disp = dispinterface;
 IBODocumentInterneLigne3 = interface;
 IBODocumentInterneLigne3Disp = dispinterface;
 IBOModeleEcritureLigne3 = interface;
 IBOModeleEcritureLigne3Disp = dispinterface;
 IBOModeleEcritureLigneA3 = interface;
 IBOModeleEcritureLigneA3Disp = dispinterface;
 IBOFamilleTarifCategorie = interface;
 IBOFamilleTarifCategorieDisp = dispinterface;
 IBOFamilleTarifQteCategorie = interface;
 IBOFamilleTarifQteCategorieDisp = dispinterface;
 IBOFamilleTarifQteFournisseur = interface;
 IBOFamilleTarifQteFournisseurDisp = dispinterface;
 IBOModeleGrilleLigne = interface;
 IBOModeleGrilleLigneDisp = dispinterface;
 IBOModeleReglementLigne = interface;
 IBOModeleReglementLigneDisp = dispinterface;
 IBOBaremeCommissionQte = interface;
 IBOBaremeCommissionQteDisp = dispinterface;
 IBOBaremeRabaisQte = interface;
 IBOBaremeRabaisQteDisp = dispinterface;
 IBOEcritureMedia = interface;
 IBOEcritureMediaDisp = dispinterface;
 IBOBanqueContact = interface;
 IBOBanqueContactDisp = dispinterface;
 IBOCompteAContact = interface;
 IBOCompteAContactDisp = dispinterface;
 IBOCompteAMedia = interface;
 IBOCompteAMediaDisp = dispinterface;
 IBOEcritureOD = interface;
 IBOEcritureODDisp = dispinterface;
 IBODocumentMedia = interface;
 IBODocumentMediaDisp = dispinterface;
 IBOAgenda = interface;
 IBOAgendaDisp = dispinterface;
 IUserLot = interface;
 IUserLotDisp = dispinterface;
 IUserEmplacement = interface;
 IUserEmplacementDisp = dispinterface;
 IUserColis = interface;
 IUserColisDisp = dispinterface;

//Map CoClass to its default interface

 BSCPTAApplication100c = IBSCPTAApplication3;
 BSCIALApplication100c = IBSCIALApplication3;

//records, unions, aliases

 P_LARGE_INTEGER = ^_LARGE_INTEGER;

 _LARGE_INTEGER = packed record
     QuadPart : Int64;
 end;
 P_ULARGE_INTEGER = ^_ULARGE_INTEGER;

 _ULARGE_INTEGER = packed record
     QuadPart : QWord;
 end;
 PtagSTATSTG = ^tagSTATSTG;

 P_FILETIME = ^_FILETIME;

 _FILETIME = packed record
     dwLowDateTime : LongWord;
     dwHighDateTime : LongWord;
 end;
 tagSTATSTG = packed record
     pwcsName : PWideChar;
     type_ : LongWord;
     cbSize : _ULARGE_INTEGER;
     mtime : _FILETIME;
     ctime : _FILETIME;
     atime : _FILETIME;
     grfMode : LongWord;
     grfLocksSupported : LongWord;
     clsid : TGUID;
     grfStateBits : LongWord;
     reserved : LongWord;
 end;

//interface declarations

// IBITransactional : IBITransactional Interface

 IBITransactional = interface(IDispatch)
   ['{0BD6E47B-CD15-4D44-ADAA-6364E78E5265}']
   function Get_IsActiveTransaction : WordBool; safecall;
    // BeginTransaction : methode BeginTransaction 
   procedure BeginTransaction;safecall;
    // CommitTransaction : methode CommitTransaction 
   procedure CommitTransaction;safecall;
    // RollbackTransaction : methode RollbackTransaction 
   procedure RollbackTransaction;safecall;
    // IsActiveTransaction : property IsActiveTransaction 
   property IsActiveTransaction:WordBool read Get_IsActiveTransaction;
  end;


// IBITransactional : IBITransactional Interface

 IBITransactionalDisp = dispinterface
   ['{0BD6E47B-CD15-4D44-ADAA-6364E78E5265}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // BeginTransaction : methode BeginTransaction 
   procedure BeginTransaction;dispid 2;
    // CommitTransaction : methode CommitTransaction 
   procedure CommitTransaction;dispid 3;
    // RollbackTransaction : methode RollbackTransaction 
   procedure RollbackTransaction;dispid 4;
    // IsActiveTransaction : property IsActiveTransaction 
   property IsActiveTransaction:WordBool  readonly dispid 1;
  end;


// ISynchroLog : ISynchroLog Interface

 ISynchroLog = interface(IDispatch)
   ['{1ABC2F0C-87D1-421D-94E1-66E84D970AE3}']
   function Get_ExternalIdentifiant : WideString; safecall;
   function Get_UIDSiteModifier : WideString; safecall;
   function Get_DateModif : TDateTime; safecall;
    // ExternalIdentifiant : property ExternalIdentifiant 
   property ExternalIdentifiant:WideString read Get_ExternalIdentifiant;
    // UIDSiteModifier : property UIDSiteModifier 
   property UIDSiteModifier:WideString read Get_UIDSiteModifier;
    // DateModif : property DateModif 
   property DateModif:TDateTime read Get_DateModif;
  end;


// ISynchroLog : ISynchroLog Interface

 ISynchroLogDisp = dispinterface
   ['{1ABC2F0C-87D1-421D-94E1-66E84D970AE3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // ExternalIdentifiant : property ExternalIdentifiant 
   property ExternalIdentifiant:WideString  readonly dispid 10;
    // UIDSiteModifier : property UIDSiteModifier 
   property UIDSiteModifier:WideString  readonly dispid 11;
    // DateModif : property DateModif 
   property DateModif:TDateTime  readonly dispid 12;
  end;


// IPredicate : IPredicate Interface

 IPredicate = interface(IDispatch)
   ['{795E7389-208E-4FBF-B935-5D64BEB37EC6}']
   function Get_PredicateType : ePredicateType; safecall;
    // Evaluate : methode Evaluate 
   function Evaluate(pObj:IDispatch):WordBool;safecall;
    // PredicateType : property PredicateType 
   property PredicateType:ePredicateType read Get_PredicateType;
  end;


// IPredicate : IPredicate Interface

 IPredicateDisp = dispinterface
   ['{795E7389-208E-4FBF-B935-5D64BEB37EC6}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Evaluate : methode Evaluate 
   function Evaluate(pObj:IDispatch):WordBool;dispid 11;
    // PredicateType : property PredicateType 
   property PredicateType:ePredicateType  readonly dispid 10;
  end;


// IPredicateValue : IPredicateValue Interface

 IPredicateValue = interface(IPredicate)
   ['{CABF2ABE-3E55-4250-9424-D5600D14152A}']
   function Get_Value : WordBool; safecall;
   procedure Set_Value(const pVal:WordBool); safecall;
    // Value : property Value 
   property Value:WordBool read Get_Value write Set_Value;
  end;


// IPredicateValue : IPredicateValue Interface

 IPredicateValueDisp = dispinterface
   ['{CABF2ABE-3E55-4250-9424-D5600D14152A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Evaluate : methode Evaluate 
   function Evaluate(pObj:IDispatch):WordBool;dispid 11;
    // PredicateType : property PredicateType 
   property PredicateType:ePredicateType  readonly dispid 10;
    // Value : property Value 
   property Value:WordBool dispid 100;
  end;


// IPredicateComparison : IPredicateComparison Interface

 IPredicateComparison = interface(IPredicate)
   ['{19D17313-7089-4EF7-99F1-F1A4BFBD55AB}']
   function Get_PredicateTypeComparison : ePredicateTypeComparison; safecall;
   procedure Set_PredicateTypeComparison(const pVal:ePredicateTypeComparison); safecall;
   function Get_Key : WideString; safecall;
   procedure Set_Key(const pVal:WideString); safecall;
   function Get_Values : IBIValuesInsertable; safecall;
    // PredicateTypeComparison : property PredicateTypeComparison 
   property PredicateTypeComparison:ePredicateTypeComparison read Get_PredicateTypeComparison write Set_PredicateTypeComparison;
    // Key : property Key 
   property Key:WideString read Get_Key write Set_Key;
    // Values : property Values 
   property Values:IBIValuesInsertable read Get_Values;
  end;


// IPredicateComparison : IPredicateComparison Interface

 IPredicateComparisonDisp = dispinterface
   ['{19D17313-7089-4EF7-99F1-F1A4BFBD55AB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Evaluate : methode Evaluate 
   function Evaluate(pObj:IDispatch):WordBool;dispid 11;
    // PredicateType : property PredicateType 
   property PredicateType:ePredicateType  readonly dispid 10;
    // PredicateTypeComparison : property PredicateTypeComparison 
   property PredicateTypeComparison:ePredicateTypeComparison dispid 100;
    // Key : property Key 
   property Key:WideString dispid 101;
    // Values : property Values 
   property Values:IBIValuesInsertable  readonly dispid 102;
  end;


// IBIValuesInsertable : IBIValuesInsertable Interface

 IBIValuesInsertable = interface(IDispatch)
   ['{5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(vIndex:OleVariant) : OleVariant; safecall;
   function Get_Count : Integer; safecall;
    // Add : Add 
   procedure Add(vVal:OleVariant);safecall;
    // Remove : Remove 
   procedure Remove(vVal:OleVariant);safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[vIndex:OleVariant]:OleVariant read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IBIValuesInsertable : IBIValuesInsertable Interface

 IBIValuesInsertableDisp = dispinterface
   ['{5DBB9FAF-C1EF-4326-A1A3-28F3C64656A7}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Add : Add 
   procedure Add(vVal:OleVariant);dispid 2;
    // Remove : Remove 
   procedure Remove(vVal:OleVariant);dispid 3;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[vIndex:OleVariant]:OleVariant  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IPredicateCompound : IPredicateCompound Interface

 IPredicateCompound = interface(IPredicate)
   ['{6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}']
   function Get_PredicateTypeCompound : ePredicateTypeCompound; safecall;
   procedure Set_PredicateTypeCompound(const pVal:ePredicateTypeCompound); safecall;
   function Get_Predicates : IBICollectionPredicate; safecall;
    // PredicateTypeCompound : property PredicateTypeCompound 
   property PredicateTypeCompound:ePredicateTypeCompound read Get_PredicateTypeCompound write Set_PredicateTypeCompound;
    // Predicates : Collection de prédicat 
   property Predicates:IBICollectionPredicate read Get_Predicates;
  end;


// IPredicateCompound : IPredicateCompound Interface

 IPredicateCompoundDisp = dispinterface
   ['{6E2B34A2-AF12-4C21-80E9-66E96D2B09A0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Evaluate : methode Evaluate 
   function Evaluate(pObj:IDispatch):WordBool;dispid 11;
    // PredicateType : property PredicateType 
   property PredicateType:ePredicateType  readonly dispid 10;
    // PredicateTypeCompound : property PredicateTypeCompound 
   property PredicateTypeCompound:ePredicateTypeCompound dispid 100;
    // Predicates : Collection de prédicat 
   property Predicates:IBICollectionPredicate  readonly dispid 101;
  end;


// IBICollectionPredicate : IBICollectionPredicate : Collection d'objet IDispatch

 IBICollectionPredicate = interface(IDispatch)
   ['{CDD8F431-5305-4BB8-B8C2-224F70BE9998}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(vIndex:OleVariant) : IPredicate; safecall;
   function Get_Count : Integer; safecall;
    // AddNew : AddNew 
   function AddNew(TypePredicat:ePredicateType):IPredicate;safecall;
    // Remove : Remove 
   procedure Remove(pObject:IPredicate);safecall;
    // RemoveAll : RemoveAll 
   procedure RemoveAll;safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[vIndex:OleVariant]:IPredicate read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IBICollectionPredicate : IBICollectionPredicate : Collection d'objet IDispatch

 IBICollectionPredicateDisp = dispinterface
   ['{CDD8F431-5305-4BB8-B8C2-224F70BE9998}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // AddNew : AddNew 
   function AddNew(TypePredicat:ePredicateType):IPredicate;dispid 2;
    // Remove : Remove 
   procedure Remove(pObject:IPredicate);dispid 3;
    // RemoveAll : RemoveAll 
   procedure RemoveAll;dispid 4;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[vIndex:OleVariant]:IPredicate  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IPredicateBuilder : IPredicateBuilder Interface

 IPredicateBuilder = interface(IDispatch)
   ['{40B131B9-6E75-4A48-A1E4-FF903D1459F0}']
    // Create : Create 
   function Create(TypePredicat:ePredicateType):IPredicate;safecall;
  end;


// IPredicateBuilder : IPredicateBuilder Interface

 IPredicateBuilderDisp = dispinterface
   ['{40B131B9-6E75-4A48-A1E4-FF903D1459F0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : Create 
   function Create(TypePredicat:ePredicateType):IPredicate;dispid 2;
  end;


// IArrondi : IArrondi Interface

 IArrondi = interface(IDispatch)
   ['{7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}']
   function Get_AR_Valeur : Double; safecall;
   function Get_AR_Type : ArrondiType; safecall;
    // Arrondir : methode Arrondir 
   function Arrondir(dVal:Double):Double;safecall;
    // AR_Valeur : property Valeur 
   property AR_Valeur:Double read Get_AR_Valeur;
    // AR_Type : property Type 
   property AR_Type:ArrondiType read Get_AR_Type;
  end;


// IArrondi : IArrondi Interface

 IArrondiDisp = dispinterface
   ['{7BCAE2C8-7BD8-4B4F-94C8-484E6F6D3AB3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Arrondir : methode Arrondir 
   function Arrondir(dVal:Double):Double;dispid 3;
    // AR_Valeur : property Valeur 
   property AR_Valeur:Double  readonly dispid 1;
    // AR_Type : property Type 
   property AR_Type:ArrondiType  readonly dispid 2;
  end;


// IBIPersistObject : IBIPersistObject Interface

 IBIPersistObject = interface(IDispatch)
   ['{EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}']
   function Get_Factory : IBITypeObjectFactory; safecall;
   function Get_OID : IBIObjectID; safecall;
   function Get_IsModified : WordBool; safecall;
   function Get_IsPersistant : WordBool; safecall;
   function Get_Stream : IBIPersistStream; safecall;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;safecall;
    // Remove : methode Remove 
   procedure Remove;safecall;
    // Write_ : methode Write 
   procedure Write_;safecall;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;safecall;
    // Read_ : methode Read 
   procedure Read_;safecall;
    // CouldModified : methode CouldModified 
   procedure CouldModified;safecall;
    // SetDefault : methode SetDefault 
   procedure SetDefault;safecall;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;safecall;
   function Get_OIDExternal : IBIObjectIDExternal; safecall;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;safecall;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);safecall;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory read Get_Factory;
    // OID : property OID 
   property OID:IBIObjectID read Get_OID;
    // IsModified : property IsModified 
   property IsModified:WordBool read Get_IsModified;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool read Get_IsPersistant;
    // Stream : property Stream 
   property Stream:IBIPersistStream read Get_Stream;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal read Get_OIDExternal;
  end;


// IBIPersistObject : IBIPersistObject Interface

 IBIPersistObjectDisp = dispinterface
   ['{EDB35DEF-BFE5-44FC-ACB0-41CF78E6FDDD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
  end;


// IBITypeObjectFactory : IBITypeObjectFactory Interface

 IBITypeObjectFactory = interface(IDispatch)
   ['{9D26AC49-A0D6-4719-A19B-835168D0AAF2}']
   function Get_List : IBICollection; safecall;
    // Create : methode Create 
   function Create:IBIPersistObject;safecall;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;safecall;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;safecall;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;safecall;
   function Get_ListForward : IBICollection; safecall;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;safecall;
    // List : property List 
   property List:IBICollection read Get_List;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection read Get_ListForward;
  end;


// IBITypeObjectFactory : IBITypeObjectFactory Interface

 IBITypeObjectFactoryDisp = dispinterface
   ['{9D26AC49-A0D6-4719-A19B-835168D0AAF2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBICollection : IBICollection : Collection d'objets IBIPersistObject

 IBICollection = interface(IDispatch)
   ['{F4042937-945B-499A-81A1-B1B772D52032}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(lIndex:Integer) : IBIPersistObject; safecall;
   function Get_Count : Integer; safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[lIndex:Integer]:IBIPersistObject read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IBICollection : IBICollection : Collection d'objets IBIPersistObject

 IBICollectionDisp = dispinterface
   ['{F4042937-945B-499A-81A1-B1B772D52032}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[lIndex:Integer]:IBIPersistObject  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IBIObjectID : IBIObjectID Interface

 IBIObjectID = interface(IDispatch)
   ['{971FB5E1-79A8-4A51-A47E-0286E29AFAC7}']
   function Get_ClassName : WideString; safecall;
    // Cmp : methode Cmp 
   function Cmp(pId:IBIObjectID):Smallint;safecall;
    // _Detach : methode _Detach 
   function _Detach:IBIObjectID;safecall;
    // ClassName : property ClassName 
   property ClassName:WideString read Get_ClassName;
  end;


// IBIObjectID : IBIObjectID Interface

 IBIObjectIDDisp = dispinterface
   ['{971FB5E1-79A8-4A51-A47E-0286E29AFAC7}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pId:IBIObjectID):Smallint;dispid 2;
    // _Detach : methode _Detach 
   function _Detach:IBIObjectID;dispid 3;
    // ClassName : property ClassName 
   property ClassName:WideString  readonly dispid 1;
  end;


// IBICollectionDispatch : IBICollectionDispatch : Collection d'objet IDispatch

 IBICollectionDispatch = interface(IDispatch)
   ['{4F3E5D34-5A39-4938-B9D8-A891393F39BE}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(vIndex:OleVariant) : IDispatch; safecall;
   function Get_Count : Integer; safecall;
    // AddNew : AddNew 
   function AddNew:IDispatch;safecall;
    // Remove : Remove 
   procedure Remove(pObject:IDispatch);safecall;
    // RemoveAll : RemoveAll 
   procedure RemoveAll;safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[vIndex:OleVariant]:IDispatch read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IBICollectionDispatch : IBICollectionDispatch : Collection d'objet IDispatch

 IBICollectionDispatchDisp = dispinterface
   ['{4F3E5D34-5A39-4938-B9D8-A891393F39BE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // AddNew : AddNew 
   function AddNew:IDispatch;dispid 2;
    // Remove : Remove 
   procedure Remove(pObject:IDispatch);dispid 3;
    // RemoveAll : RemoveAll 
   procedure RemoveAll;dispid 4;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[vIndex:OleVariant]:IDispatch  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// ISequentialStream : 

 ISequentialStream = interface(IUnknown)
   ['{0C733A30-2A1C-11CE-ADE5-00AA0044773D}']
    // RemoteRead :  
   function RemoteRead(out pv:Byte;cb:LongWord;out pcbRead:LongWord):HRESULT;stdcall;
    // RemoteWrite :  
   function RemoteWrite(var pv:Byte;cb:LongWord;out pcbWritten:LongWord):HRESULT;stdcall;
  end;


// IStream : 

 IStream = interface(ISequentialStream)
   ['{0000000C-0000-0000-C000-000000000046}']
    // RemoteSeek :  
   function RemoteSeek(dlibMove:_LARGE_INTEGER;dwOrigin:LongWord;out plibNewPosition:_ULARGE_INTEGER):HRESULT;stdcall;
    // SetSize :  
   function SetSize(libNewSize:_ULARGE_INTEGER):HRESULT;stdcall;
    // RemoteCopyTo :  
   function RemoteCopyTo(pstm:IStream;cb:_ULARGE_INTEGER;out pcbRead:_ULARGE_INTEGER;out pcbWritten:_ULARGE_INTEGER):HRESULT;stdcall;
    // Commit :  
   function Commit(grfCommitFlags:LongWord):HRESULT;stdcall;
    // Revert :  
   function Revert:HRESULT;stdcall;
    // LockRegion :  
   function LockRegion(libOffset:_ULARGE_INTEGER;cb:_ULARGE_INTEGER;dwLockType:LongWord):HRESULT;stdcall;
    // UnlockRegion :  
   function UnlockRegion(libOffset:_ULARGE_INTEGER;cb:_ULARGE_INTEGER;dwLockType:LongWord):HRESULT;stdcall;
    // Stat :  
   function Stat(out pstatstg:tagSTATSTG;grfStatFlag:LongWord):HRESULT;stdcall;
    // Clone :  
   function Clone(out ppstm:IStream):HRESULT;stdcall;
  end;


// IBIPersistStream : IBIPersistStream Interface

 IBIPersistStream = interface(IDispatch)
   ['{0C19AA03-32BA-4A41-A5C7-231C922E2BDD}']
   function Get_IsOpen : WordBool; safecall;
    // Open : methode Open 
   procedure Open;safecall;
    // Close : methode Close 
   procedure Close;safecall;
    // Create : methode Create 
   procedure Create;safecall;
   function Get_DatabaseInfo : IDatabaseInfo; safecall;
   function Get_Synchro : ISynchroStream; safecall;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;safecall;
    // IsOpen : property IsOpen 
   property IsOpen:WordBool read Get_IsOpen;
    // DatabaseInfo : property DatabaseInfo 
   property DatabaseInfo:IDatabaseInfo read Get_DatabaseInfo;
    // Synchro : property Synchro 
   property Synchro:ISynchroStream read Get_Synchro;
  end;


// IBIPersistStream : IBIPersistStream Interface

 IBIPersistStreamDisp = dispinterface
   ['{0C19AA03-32BA-4A41-A5C7-231C922E2BDD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Open : methode Open 
   procedure Open;dispid 2;
    // Close : methode Close 
   procedure Close;dispid 3;
    // Create : methode Create 
   procedure Create;dispid 4;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 7;
    // IsOpen : property IsOpen 
   property IsOpen:WordBool  readonly dispid 1;
    // DatabaseInfo : property DatabaseInfo 
   property DatabaseInfo:IDatabaseInfo  readonly dispid 5;
    // Synchro : property Synchro 
   property Synchro:ISynchroStream  readonly dispid 6;
  end;


// IDatabaseInfo : IDatabaseInfo Interface

 IDatabaseInfo = interface(IDispatch)
   ['{FC26A457-2146-4035-9A0F-9A121BC5BC3E}']
   function Get_ServerName : WideString; safecall;
   function Get_DatabaseType : DatabaseType; safecall;
   function Get_DatabaseName : WideString; safecall;
    // ServerName : property ServerName 
   property ServerName:WideString read Get_ServerName;
    // DatabaseType : property DatabaseType 
   property DatabaseType:DatabaseType read Get_DatabaseType;
    // DatabaseName : property DatabaseName 
   property DatabaseName:WideString read Get_DatabaseName;
  end;


// IDatabaseInfo : IDatabaseInfo Interface

 IDatabaseInfoDisp = dispinterface
   ['{FC26A457-2146-4035-9A0F-9A121BC5BC3E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // ServerName : property ServerName 
   property ServerName:WideString  readonly dispid 10;
    // DatabaseType : property DatabaseType 
   property DatabaseType:DatabaseType  readonly dispid 11;
    // DatabaseName : property DatabaseName 
   property DatabaseName:WideString  readonly dispid 12;
  end;


// ISynchroStream : ISynchroStream Interface

 ISynchroStream = interface(IDispatch)
   ['{453C012A-E85B-4776-ACFE-C80668BE04F9}']
    // BeginExtraction : methode BeginExtraction 
   procedure BeginExtraction(uidSiteDistant:WideString;tAbonnement:PSafeArray);safecall;
    // EndExtraction : methode EndExtraction 
   procedure EndExtraction(bCancel:WordBool);safecall;
   function Get_IsInExtraction : WordBool; safecall;
   function Get_IdReplication : Integer; safecall;
   function Get_Guid : WideString; safecall;
    // GetAbonnementLastReplication : methode GetAbonnementLastReplication 
   function GetAbonnementLastReplication(UIDSideDistant:WideString;TypeAbonnement:Word):Integer;safecall;
    // IsInExtraction : property IsInExtraction 
   property IsInExtraction:WordBool read Get_IsInExtraction;
    // IdReplication : compteur de réplication courant du stream 
   property IdReplication:Integer read Get_IdReplication;
    // Guid : property Guid 
   property Guid:WideString read Get_Guid;
  end;


// ISynchroStream : ISynchroStream Interface

 ISynchroStreamDisp = dispinterface
   ['{453C012A-E85B-4776-ACFE-C80668BE04F9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // BeginExtraction : methode BeginExtraction 
   procedure BeginExtraction(uidSiteDistant:WideString;tAbonnement:{!! PSafeArray !!} OleVariant);dispid 10;
    // EndExtraction : methode EndExtraction 
   procedure EndExtraction(bCancel:WordBool);dispid 11;
    // GetAbonnementLastReplication : methode GetAbonnementLastReplication 
   function GetAbonnementLastReplication(UIDSideDistant:WideString;TypeAbonnement:Word):Integer;dispid 15;
    // IsInExtraction : property IsInExtraction 
   property IsInExtraction:WordBool  readonly dispid 12;
    // IdReplication : compteur de réplication courant du stream 
   property IdReplication:Integer  readonly dispid 13;
    // Guid : property Guid 
   property Guid:WideString  readonly dispid 14;
  end;


// IBIObjectIDExternal : IBIObjectID Interface

 IBIObjectIDExternal = interface(IDispatch)
   ['{A70874A0-E77F-4519-9354-0C3FA1787522}']
   function Get_ClassName : WideString; safecall;
    // ToString : methode ToString 
   function ToString:WideString;safecall;
    // ClassName : property ClassName 
   property ClassName:WideString read Get_ClassName;
  end;


// IBIObjectIDExternal : IBIObjectID Interface

 IBIObjectIDExternalDisp = dispinterface
   ['{A70874A0-E77F-4519-9354-0C3FA1787522}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // ToString : methode ToString 
   function ToString:WideString;dispid 11;
    // ClassName : property ClassName 
   property ClassName:WideString  readonly dispid 10;
  end;


// IBIMedia : IBIMedia Interface

 IBIMedia = interface(IBIPersistObject)
   ['{BD0B5F31-E6C8-48C2-A087-4668AF53E04A}']
   function Get_ME_Commentaire : WideString; safecall;
   procedure Set_ME_Commentaire(const pVal:WideString); safecall;
   function Get_ME_Fichier : WideString; safecall;
   procedure Set_ME_Fichier(const pVal:WideString); safecall;
   function Get_ME_TypeMIME : WideString; safecall;
   function Get_ME_Origine : WideString; safecall;
   procedure Set_ME_Origine(const pVal:WideString); safecall;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString read Get_ME_Commentaire write Set_ME_Commentaire;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString read Get_ME_Fichier write Set_ME_Fichier;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString read Get_ME_TypeMIME;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString read Get_ME_Origine write Set_ME_Origine;
  end;


// IBIMedia : IBIMedia Interface

 IBIMediaDisp = dispinterface
   ['{BD0B5F31-E6C8-48C2-A087-4668AF53E04A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString dispid 100;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString dispid 101;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString  readonly dispid 102;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString dispid 103;
  end;


// IBICategorieCompta : IBICategorieCompta Interface

 IBICategorieCompta = interface(IBIPersistObject)
   ['{1EB2D07A-C0C8-497F-9D9B-323076B23643}']
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Domaine : DomaineType; safecall;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Domaine : property Domaine 
   property Domaine:DomaineType read Get_Domaine;
  end;


// IBICategorieCompta : IBICategorieCompta Interface

 IBICategorieComptaDisp = dispinterface
   ['{1EB2D07A-C0C8-497F-9D9B-323076B23643}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
  end;


// IDocValorisation : IDocValorisation Interface

 IDocValorisation = interface(IDispatch)
   ['{790843D7-1E85-45F6-B94C-BA5BD9565558}']
   function Get_TotalHT : Double; safecall;
   function Get_TotalHTBrut : Double; safecall;
   function Get_TotalHTNet : Double; safecall;
   function Get_TotalTTC : Double; safecall;
   function Get_TotalTTC_Brut : Double; safecall;
   function Get_TotalTTC_HorsEscompte : Double; safecall;
   function Get_TotalPrixRevient : Double; safecall;
   function Get_TotalQte : Double; safecall;
   function Get_TotalQteColisee : Double; safecall;
   function Get_TotalPoidsNet : Double; safecall;
   function Get_TotalPoidsBrut : Double; safecall;
   function Get_TotalHTDev : Double; safecall;
   function Get_TotalHTNetDev : Double; safecall;
   function Get_TotalTTCDev : Double; safecall;
   function Get_TotalTaxes : Double; safecall;
   function Get_TotalTaxesDev : Double; safecall;
   function Get_NetAPayer : Double; safecall;
   function Get_NetAPayerDev : Double; safecall;
   function Get_TotalAcomptes : Double; safecall;
   function Get_TotalAcomptesDev : Double; safecall;
   function Get_TotalEcheance : Double; safecall;
   function Get_TotalEcheanceDev : Double; safecall;
   function Get_TotalBonsAchat : Double; safecall;
   function Get_TotalBonsAchatDev : Double; safecall;
   function Get_Taxes : IDocValoTaxes; safecall;
   function Get_Escompte : IDocValoEscompte; safecall;
   function Get_TotalMarge : Double; safecall;
    // TotalHT : HT avec remises appliquées 
   property TotalHT:Double read Get_TotalHT;
    // TotalHTBrut : HT avant remise et avant escompte 
   property TotalHTBrut:Double read Get_TotalHTBrut;
    // TotalHTNet : HT avec remises et escomptes appliqués 
   property TotalHTNet:Double read Get_TotalHTNet;
    // TotalTTC : property TotalTTC 
   property TotalTTC:Double read Get_TotalTTC;
    // TotalTTC_Brut : property TotalTTC_Brut 
   property TotalTTC_Brut:Double read Get_TotalTTC_Brut;
    // TotalTTC_HorsEscompte : property TotalTTC_HorsEscompte 
   property TotalTTC_HorsEscompte:Double read Get_TotalTTC_HorsEscompte;
    // TotalPrixRevient : property TotalPrixRevient 
   property TotalPrixRevient:Double read Get_TotalPrixRevient;
    // TotalQte : property TotalQte 
   property TotalQte:Double read Get_TotalQte;
    // TotalQteColisee : property TotalQteColisee 
   property TotalQteColisee:Double read Get_TotalQteColisee;
    // TotalPoidsNet : property TotalPoidsNet 
   property TotalPoidsNet:Double read Get_TotalPoidsNet;
    // TotalPoidsBrut : property TotalPoidsBrut 
   property TotalPoidsBrut:Double read Get_TotalPoidsBrut;
    // TotalHTDev : property TotalHTDev 
   property TotalHTDev:Double read Get_TotalHTDev;
    // TotalHTNetDev : property TotalHTNetDev 
   property TotalHTNetDev:Double read Get_TotalHTNetDev;
    // TotalTTCDev : property TotalTTCDev 
   property TotalTTCDev:Double read Get_TotalTTCDev;
    // TotalTaxes : property TotalTaxes 
   property TotalTaxes:Double read Get_TotalTaxes;
    // TotalTaxesDev : property TotalTaxesDev 
   property TotalTaxesDev:Double read Get_TotalTaxesDev;
    // NetAPayer : property NetAPayer 
   property NetAPayer:Double read Get_NetAPayer;
    // NetAPayerDev : property NetAPayerDev 
   property NetAPayerDev:Double read Get_NetAPayerDev;
    // TotalAcomptes : property TotalAcomptes 
   property TotalAcomptes:Double read Get_TotalAcomptes;
    // TotalAcomptesDev : property TotalAcomptesDev 
   property TotalAcomptesDev:Double read Get_TotalAcomptesDev;
    // TotalEcheance : property TotalEcheance 
   property TotalEcheance:Double read Get_TotalEcheance;
    // TotalEcheanceDev : property TotalEcheanceDev 
   property TotalEcheanceDev:Double read Get_TotalEcheanceDev;
    // TotalBonsAchat : property TotalBonsAchat 
   property TotalBonsAchat:Double read Get_TotalBonsAchat;
    // TotalBonsAchatDev : property TotalBonsAchatDev 
   property TotalBonsAchatDev:Double read Get_TotalBonsAchatDev;
    // Taxes : property Taxes 
   property Taxes:IDocValoTaxes read Get_Taxes;
    // Escompte : property Escompte 
   property Escompte:IDocValoEscompte read Get_Escompte;
    // TotalMarge : property TotalMarge 
   property TotalMarge:Double read Get_TotalMarge;
  end;


// IDocValorisation : IDocValorisation Interface

 IDocValorisationDisp = dispinterface
   ['{790843D7-1E85-45F6-B94C-BA5BD9565558}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // TotalHT : HT avec remises appliquées 
   property TotalHT:Double  readonly dispid 1;
    // TotalHTBrut : HT avant remise et avant escompte 
   property TotalHTBrut:Double  readonly dispid 2;
    // TotalHTNet : HT avec remises et escomptes appliqués 
   property TotalHTNet:Double  readonly dispid 3;
    // TotalTTC : property TotalTTC 
   property TotalTTC:Double  readonly dispid 4;
    // TotalTTC_Brut : property TotalTTC_Brut 
   property TotalTTC_Brut:Double  readonly dispid 5;
    // TotalTTC_HorsEscompte : property TotalTTC_HorsEscompte 
   property TotalTTC_HorsEscompte:Double  readonly dispid 6;
    // TotalPrixRevient : property TotalPrixRevient 
   property TotalPrixRevient:Double  readonly dispid 7;
    // TotalQte : property TotalQte 
   property TotalQte:Double  readonly dispid 8;
    // TotalQteColisee : property TotalQteColisee 
   property TotalQteColisee:Double  readonly dispid 9;
    // TotalPoidsNet : property TotalPoidsNet 
   property TotalPoidsNet:Double  readonly dispid 10;
    // TotalPoidsBrut : property TotalPoidsBrut 
   property TotalPoidsBrut:Double  readonly dispid 11;
    // TotalHTDev : property TotalHTDev 
   property TotalHTDev:Double  readonly dispid 12;
    // TotalHTNetDev : property TotalHTNetDev 
   property TotalHTNetDev:Double  readonly dispid 13;
    // TotalTTCDev : property TotalTTCDev 
   property TotalTTCDev:Double  readonly dispid 14;
    // TotalTaxes : property TotalTaxes 
   property TotalTaxes:Double  readonly dispid 15;
    // TotalTaxesDev : property TotalTaxesDev 
   property TotalTaxesDev:Double  readonly dispid 16;
    // NetAPayer : property NetAPayer 
   property NetAPayer:Double  readonly dispid 17;
    // NetAPayerDev : property NetAPayerDev 
   property NetAPayerDev:Double  readonly dispid 18;
    // TotalAcomptes : property TotalAcomptes 
   property TotalAcomptes:Double  readonly dispid 19;
    // TotalAcomptesDev : property TotalAcomptesDev 
   property TotalAcomptesDev:Double  readonly dispid 20;
    // TotalEcheance : property TotalEcheance 
   property TotalEcheance:Double  readonly dispid 21;
    // TotalEcheanceDev : property TotalEcheanceDev 
   property TotalEcheanceDev:Double  readonly dispid 22;
    // TotalBonsAchat : property TotalBonsAchat 
   property TotalBonsAchat:Double  readonly dispid 23;
    // TotalBonsAchatDev : property TotalBonsAchatDev 
   property TotalBonsAchatDev:Double  readonly dispid 24;
    // Taxes : property Taxes 
   property Taxes:IDocValoTaxes  readonly dispid 25;
    // Escompte : property Escompte 
   property Escompte:IDocValoEscompte  readonly dispid 26;
    // TotalMarge : property TotalMarge 
   property TotalMarge:Double  readonly dispid 27;
  end;


// IDocValoTaxes : IDocValoTaxes Interface

 IDocValoTaxes = interface(IDispatch)
   ['{7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(lIndex:Integer) : IDocValoTaxe; safecall;
   function Get_Count : Integer; safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[lIndex:Integer]:IDocValoTaxe read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IDocValoTaxes : IDocValoTaxes Interface

 IDocValoTaxesDisp = dispinterface
   ['{7ABB0C6B-AE5E-43CE-9FC2-22294A8161A3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[lIndex:Integer]:IDocValoTaxe  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IDocValoTaxe : IDocValoTaxe Interface

 IDocValoTaxe = interface(IDispatch)
   ['{724FD64D-A3CC-4821-A7F4-12E83E12DF60}']
   function Get_Code : WideString; safecall;
   function Get_Taux : Double; safecall;
   function Get_BaseCalcul : Double; safecall;
   function Get_Montant : Double; safecall;
   function Get_BaseCalculDev : Double; safecall;
   function Get_MontantDev : Double; safecall;
    // Code : property Code 
   property Code:WideString read Get_Code;
    // Taux : property Taux 
   property Taux:Double read Get_Taux;
    // BaseCalcul : property BaseCalcul 
   property BaseCalcul:Double read Get_BaseCalcul;
    // Montant : property Montant 
   property Montant:Double read Get_Montant;
    // BaseCalculDev : property BaseCalculDev 
   property BaseCalculDev:Double read Get_BaseCalculDev;
    // MontantDev : property MontantDev 
   property MontantDev:Double read Get_MontantDev;
  end;


// IDocValoTaxe : IDocValoTaxe Interface

 IDocValoTaxeDisp = dispinterface
   ['{724FD64D-A3CC-4821-A7F4-12E83E12DF60}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Code : property Code 
   property Code:WideString  readonly dispid 1;
    // Taux : property Taux 
   property Taux:Double  readonly dispid 2;
    // BaseCalcul : property BaseCalcul 
   property BaseCalcul:Double  readonly dispid 3;
    // Montant : property Montant 
   property Montant:Double  readonly dispid 4;
    // BaseCalculDev : property BaseCalculDev 
   property BaseCalculDev:Double  readonly dispid 5;
    // MontantDev : property MontantDev 
   property MontantDev:Double  readonly dispid 6;
  end;


// IDocValoEscompte : IDocValoEscompte Interface

 IDocValoEscompte = interface(IDispatch)
   ['{9F1D9451-2EC0-4658-85A5-E236ED9D39D3}']
   function Get_Taux : Double; safecall;
   function Get_BaseCalcul : Double; safecall;
   function Get_Montant : Double; safecall;
    // Taux : property Taux 
   property Taux:Double read Get_Taux;
    // BaseCalcul : property BaseCalcul 
   property BaseCalcul:Double read Get_BaseCalcul;
    // Montant : property Montant 
   property Montant:Double read Get_Montant;
  end;


// IDocValoEscompte : IDocValoEscompte Interface

 IDocValoEscompteDisp = dispinterface
   ['{9F1D9451-2EC0-4658-85A5-E236ED9D39D3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Taux : property Taux 
   property Taux:Double  readonly dispid 1;
    // BaseCalcul : property BaseCalcul 
   property BaseCalcul:Double  readonly dispid 2;
    // Montant : property Montant 
   property Montant:Double  readonly dispid 3;
  end;


// IFrais2 : IFrais2 Interface

 IFrais2 = interface(IDispatch)
   ['{B798E501-D751-4D2B-ADFE-9C9411EA81EF}']
   function Get_Frais(sElt:Smallint) : IFraisElem2; safecall;
   procedure Set_Frais(const sElt:Smallint; const parFrais:IFraisElem2); safecall;
    // Calcul : methode Calcul 
   function Calcul(dMontantUnitaire:Double;dQte:Double;NbDecimalResult:Smallint):Double;safecall;
    // Frais : property Frais 
   property Frais[sElt:Smallint]:IFraisElem2 read Get_Frais write Set_Frais;
  end;


// IFrais2 : IFrais2 Interface

 IFrais2Disp = dispinterface
   ['{B798E501-D751-4D2B-ADFE-9C9411EA81EF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Calcul : methode Calcul 
   function Calcul(dMontantUnitaire:Double;dQte:Double;NbDecimalResult:Smallint):Double;dispid 2;
    // Frais : property Frais 
   property Frais[sElt:Smallint]:IFraisElem2 dispid 1;
  end;


// IFraisElem2 : IFraisElem2 Interface

 IFraisElem2 = interface(IDispatch)
   ['{C1A25544-B9B7-43A1-9617-7BD2321489C4}']
   function Get_FR_Denomination : WideString; safecall;
   procedure Set_FR_Denomination(const pVal:WideString); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
    // Calcul : methode Calcul 
   function Calcul(dMontantUnitaire:Double;dQte:Double;NbDecimalResult:Smallint):Double;safecall;
    // FR_Denomination : property FR_Denomination 
   property FR_Denomination:WideString read Get_FR_Denomination write Set_FR_Denomination;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
  end;


// IFraisElem2 : IFraisElem2 Interface

 IFraisElem2Disp = dispinterface
   ['{C1A25544-B9B7-43A1-9617-7BD2321489C4}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Calcul : methode Calcul 
   function Calcul(dMontantUnitaire:Double;dQte:Double;NbDecimalResult:Smallint):Double;dispid 3;
    // FR_Denomination : property FR_Denomination 
   property FR_Denomination:WideString dispid 1;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 2;
  end;


// IRemise2 : IRemise2 Interface

 IRemise2 = interface(IDispatch)
   ['{11258EBC-3FC0-4461-83F1-AFFBEBF75D10}']
   function Get_Remise(sElt:Smallint) : IRemiseElem2; safecall;
   procedure Set_Remise(const sElt:Smallint; const parRemise:IRemiseElem2); safecall;
    // Calcul : methode Calcul 
   function Calcul(dVal:Double;dQte:Double;NbDecimalResult:Smallint):Double;safecall;
    // CalculDevise : methode CalculDevise 
   function CalculDevise(dVal:Double;dQte:Double;sDate:TDateTime;pDevise:IBPDevise2):Double;safecall;
    // ToString : methode ToString 
   function ToString:WideString;safecall;
    // FromString : methode FromString 
   procedure FromString(bVal:WideString);safecall;
    // Remise : property Remise 
   property Remise[sElt:Smallint]:IRemiseElem2 read Get_Remise write Set_Remise;
  end;


// IRemise2 : IRemise2 Interface

 IRemise2Disp = dispinterface
   ['{11258EBC-3FC0-4461-83F1-AFFBEBF75D10}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Calcul : methode Calcul 
   function Calcul(dVal:Double;dQte:Double;NbDecimalResult:Smallint):Double;dispid 2;
    // CalculDevise : methode CalculDevise 
   function CalculDevise(dVal:Double;dQte:Double;sDate:TDateTime;pDevise:IBPDevise2):Double;dispid 3;
    // ToString : methode ToString 
   function ToString:WideString;dispid 4;
    // FromString : methode FromString 
   procedure FromString(bVal:WideString);dispid 5;
    // Remise : property Remise 
   property Remise[sElt:Smallint]:IRemiseElem2 dispid 1;
  end;


// IRemiseElem2 : IRemiseElem2 Interface

 IRemiseElem2 = interface(IDispatch)
   ['{B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}']
   function Get_REM_Valeur : Double; safecall;
   procedure Set_REM_Valeur(const pVal:Double); safecall;
   function Get_REM_Type : RemiseType; safecall;
   procedure Set_REM_Type(const pVal:RemiseType); safecall;
    // Calcul : methode Calcul 
   function Calcul(dVal:Double;dQte:Double;NbDecimalResult:Smallint):Double;safecall;
    // CalculDevise : methode CalculDevise 
   function CalculDevise(dVal:Double;dQte:Double;sDate:TDateTime;pDevise:IBPDevise2):Double;safecall;
    // ToString : methode ToString 
   function ToString:WideString;safecall;
    // FromString : methode FromString 
   procedure FromString(sVal:WideString);safecall;
    // REM_Valeur : property REM_Valeur 
   property REM_Valeur:Double read Get_REM_Valeur write Set_REM_Valeur;
    // REM_Type : property REM_Type 
   property REM_Type:RemiseType read Get_REM_Type write Set_REM_Type;
  end;


// IRemiseElem2 : IRemiseElem2 Interface

 IRemiseElem2Disp = dispinterface
   ['{B87AA1B8-BEB8-4DFD-BEC4-9F25CAE433D4}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Calcul : methode Calcul 
   function Calcul(dVal:Double;dQte:Double;NbDecimalResult:Smallint):Double;dispid 3;
    // CalculDevise : methode CalculDevise 
   function CalculDevise(dVal:Double;dQte:Double;sDate:TDateTime;pDevise:IBPDevise2):Double;dispid 4;
    // ToString : methode ToString 
   function ToString:WideString;dispid 5;
    // FromString : methode FromString 
   procedure FromString(sVal:WideString);dispid 6;
    // REM_Valeur : property REM_Valeur 
   property REM_Valeur:Double dispid 1;
    // REM_Type : property REM_Type 
   property REM_Type:RemiseType dispid 2;
  end;


// IBPDevise2 : IBPDevise2 Interface

 IBPDevise2 = interface(IBIPersistObject)
   ['{02658A6A-195E-4383-A18B-EB162ED46D5F}']
   function Get_FactoryDevise : IBPDeviseFactory2; safecall;
   function Get_D_Intitule : WideString; safecall;
   procedure Set_D_Intitule(const pVal:WideString); safecall;
   function Get_D_Format : WideString; safecall;
   procedure Set_D_Format(const pVal:WideString); safecall;
   function Get_D_Cours : Double; safecall;
   procedure Set_D_Cours(const pVal:Double); safecall;
   function Get_D_CoursP : Double; safecall;
   procedure Set_D_CoursP(const pVal:Double); safecall;
   function Get_D_Monnaie : WideString; safecall;
   procedure Set_D_Monnaie(const pVal:WideString); safecall;
   function Get_D_SousMonnaie : WideString; safecall;
   procedure Set_D_SousMonnaie(const pVal:WideString); safecall;
   function Get_D_CodeISO : WideString; safecall;
   procedure Set_D_CodeISO(const pVal:WideString); safecall;
   function Get_D_Sigle : WideString; safecall;
   procedure Set_D_Sigle(const pVal:WideString); safecall;
   function Get_D_Mode : DeviseMode; safecall;
   procedure Set_D_Mode(const pVal:DeviseMode); safecall;
   function Get_DeviseCot : IBPDevise2; safecall;
   procedure Set_DeviseCot(const pDevise:IBPDevise2); safecall;
   function Get_D_CoursClot : Double; safecall;
   procedure Set_D_CoursClot(const pVal:Double); safecall;
   function Get_D_AncDate : TDateTime; safecall;
   procedure Set_D_AncDate(const pVal:TDateTime); safecall;
   function Get_D_AncCours : Double; safecall;
   procedure Set_D_AncCours(const pVal:Double); safecall;
   function Get_D_AncMode : DeviseMode; safecall;
   procedure Set_D_AncMode(const pVal:DeviseMode); safecall;
   function Get_DeviseAncCot : IBPDevise2; safecall;
   procedure Set_DeviseAncCot(const pDevise:IBPDevise2); safecall;
   function Get_D_CodeRemise : DeviseRemise; safecall;
   procedure Set_D_CodeRemise(const pVal:DeviseRemise); safecall;
   function Get_D_Euro : WordBool; safecall;
   procedure Set_D_Euro(const pVal:WordBool); safecall;
    // Convert : methode Convert 
   function Convert(pDevise:IBPDevise2;dVal:Double):Double;safecall;
   function Get_D_CodeISONum : WideString; safecall;
   procedure Set_D_CodeISONum(const pVal:WideString); safecall;
    // FactoryDevise : property FactoryDevise 
   property FactoryDevise:IBPDeviseFactory2 read Get_FactoryDevise;
    // D_Intitule : property D_Intitule 
   property D_Intitule:WideString read Get_D_Intitule write Set_D_Intitule;
    // D_Format : property D_Format 
   property D_Format:WideString read Get_D_Format write Set_D_Format;
    // D_Cours : property D_Cours 
   property D_Cours:Double read Get_D_Cours write Set_D_Cours;
    // D_CoursP : property D_CoursP 
   property D_CoursP:Double read Get_D_CoursP write Set_D_CoursP;
    // D_Monnaie : property D_Monnaie 
   property D_Monnaie:WideString read Get_D_Monnaie write Set_D_Monnaie;
    // D_SousMonnaie : property D_SousMonnaie 
   property D_SousMonnaie:WideString read Get_D_SousMonnaie write Set_D_SousMonnaie;
    // D_CodeISO : property D_CodeISO 
   property D_CodeISO:WideString read Get_D_CodeISO write Set_D_CodeISO;
    // D_Sigle : property D_Sigle 
   property D_Sigle:WideString read Get_D_Sigle write Set_D_Sigle;
    // D_Mode : property D_Mode 
   property D_Mode:DeviseMode read Get_D_Mode write Set_D_Mode;
    // DeviseCot : property DeviseCot 
   property DeviseCot:IBPDevise2 read Get_DeviseCot write Set_DeviseCot;
    // D_CoursClot : property D_CoursClot 
   property D_CoursClot:Double read Get_D_CoursClot write Set_D_CoursClot;
    // D_AncDate : property D_AncDate 
   property D_AncDate:TDateTime read Get_D_AncDate write Set_D_AncDate;
    // D_AncCours : property D_AncCours 
   property D_AncCours:Double read Get_D_AncCours write Set_D_AncCours;
    // D_AncMode : property D_AncMode 
   property D_AncMode:DeviseMode read Get_D_AncMode write Set_D_AncMode;
    // DeviseAncCot : property DeviseAncCot 
   property DeviseAncCot:IBPDevise2 read Get_DeviseAncCot write Set_DeviseAncCot;
    // D_CodeRemise : property D_CodeRemise 
   property D_CodeRemise:DeviseRemise read Get_D_CodeRemise write Set_D_CodeRemise;
    // D_Euro : property D_Euro 
   property D_Euro:WordBool read Get_D_Euro write Set_D_Euro;
    // D_CodeISONum : property D_CodeISONum 
   property D_CodeISONum:WideString read Get_D_CodeISONum write Set_D_CodeISONum;
  end;


// IBPDevise2 : IBPDevise2 Interface

 IBPDevise2Disp = dispinterface
   ['{02658A6A-195E-4383-A18B-EB162ED46D5F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Convert : methode Convert 
   function Convert(pDevise:IBPDevise2;dVal:Double):Double;dispid 119;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDevise : property FactoryDevise 
   property FactoryDevise:IBPDeviseFactory2  readonly dispid 100;
    // D_Intitule : property D_Intitule 
   property D_Intitule:WideString dispid 102;
    // D_Format : property D_Format 
   property D_Format:WideString dispid 103;
    // D_Cours : property D_Cours 
   property D_Cours:Double dispid 104;
    // D_CoursP : property D_CoursP 
   property D_CoursP:Double dispid 105;
    // D_Monnaie : property D_Monnaie 
   property D_Monnaie:WideString dispid 106;
    // D_SousMonnaie : property D_SousMonnaie 
   property D_SousMonnaie:WideString dispid 107;
    // D_CodeISO : property D_CodeISO 
   property D_CodeISO:WideString dispid 108;
    // D_Sigle : property D_Sigle 
   property D_Sigle:WideString dispid 109;
    // D_Mode : property D_Mode 
   property D_Mode:DeviseMode dispid 110;
    // DeviseCot : property DeviseCot 
   property DeviseCot:IBPDevise2 dispid 111;
    // D_CoursClot : property D_CoursClot 
   property D_CoursClot:Double dispid 112;
    // D_AncDate : property D_AncDate 
   property D_AncDate:TDateTime dispid 113;
    // D_AncCours : property D_AncCours 
   property D_AncCours:Double dispid 114;
    // D_AncMode : property D_AncMode 
   property D_AncMode:DeviseMode dispid 115;
    // DeviseAncCot : property DeviseAncCot 
   property DeviseAncCot:IBPDevise2 dispid 116;
    // D_CodeRemise : property D_CodeRemise 
   property D_CodeRemise:DeviseRemise dispid 117;
    // D_Euro : property D_Euro 
   property D_Euro:WordBool dispid 118;
    // D_CodeISONum : property D_CodeISONum 
   property D_CodeISONum:WideString dispid 120;
  end;


// IBPDeviseFactory2 : IBPDeviseFactory2 Interface

 IBPDeviseFactory2 = interface(IBITypeObjectFactory)
   ['{A45F660A-3080-4619-9A6E-A6EB8E29DF97}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPDevise2;safecall;
    // ExistCodeISO : methode ExistCodeISO 
   function ExistCodeISO(sCodeISO:WideString):WordBool;safecall;
    // ReadCodeISO : methode ReadCodeISO 
   function ReadCodeISO(sCodeISO:WideString):IBPDevise2;safecall;
  end;


// IBPDeviseFactory2 : IBPDeviseFactory2 Interface

 IBPDeviseFactory2Disp = dispinterface
   ['{A45F660A-3080-4619-9A6E-A6EB8E29DF97}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPDevise2;dispid 11;
    // ExistCodeISO : methode ExistCodeISO 
   function ExistCodeISO(sCodeISO:WideString):WordBool;dispid 12;
    // ReadCodeISO : methode ReadCodeISO 
   function ReadCodeISO(sCodeISO:WideString):IBPDevise2;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IAdresse : IAdresse Interface

 IAdresse = interface(IDispatch)
   ['{03E0F077-29D3-442D-A9AB-D21CE4112A9A}']
   function Get_Adresse : WideString; safecall;
   procedure Set_Adresse(const pVal:WideString); safecall;
   function Get_Complement : WideString; safecall;
   procedure Set_Complement(const pVal:WideString); safecall;
   function Get_CodePostal : WideString; safecall;
   procedure Set_CodePostal(const pVal:WideString); safecall;
   function Get_Ville : WideString; safecall;
   procedure Set_Ville(const pVal:WideString); safecall;
   function Get_CodeRegion : WideString; safecall;
   procedure Set_CodeRegion(const pVal:WideString); safecall;
   function Get_Pays : WideString; safecall;
   procedure Set_Pays(const pVal:WideString); safecall;
   function Get_bGereCodeRegion : WordBool; safecall;
   function Get_bGerePays : WordBool; safecall;
    // Adresse : property Adresse 
   property Adresse:WideString read Get_Adresse write Set_Adresse;
    // Complement : property Complement 
   property Complement:WideString read Get_Complement write Set_Complement;
    // CodePostal : property CodePostal 
   property CodePostal:WideString read Get_CodePostal write Set_CodePostal;
    // Ville : property Ville 
   property Ville:WideString read Get_Ville write Set_Ville;
    // CodeRegion : property CodeRegion 
   property CodeRegion:WideString read Get_CodeRegion write Set_CodeRegion;
    // Pays : property Pays 
   property Pays:WideString read Get_Pays write Set_Pays;
    // bGereCodeRegion : property bGereCodeRegion 
   property bGereCodeRegion:WordBool read Get_bGereCodeRegion;
    // bGerePays : property bGerePays 
   property bGerePays:WordBool read Get_bGerePays;
  end;


// IAdresse : IAdresse Interface

 IAdresseDisp = dispinterface
   ['{03E0F077-29D3-442D-A9AB-D21CE4112A9A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Adresse : property Adresse 
   property Adresse:WideString dispid 1;
    // Complement : property Complement 
   property Complement:WideString dispid 2;
    // CodePostal : property CodePostal 
   property CodePostal:WideString dispid 3;
    // Ville : property Ville 
   property Ville:WideString dispid 4;
    // CodeRegion : property CodeRegion 
   property CodeRegion:WideString dispid 5;
    // Pays : property Pays 
   property Pays:WideString dispid 6;
    // bGereCodeRegion : property bGereCodeRegion 
   property bGereCodeRegion:WordBool  readonly dispid 7;
    // bGerePays : property bGerePays 
   property bGerePays:WordBool  readonly dispid 8;
  end;


// ITelecom : ITelecomInterface

 ITelecom = interface(IDispatch)
   ['{089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}']
   function Get_Telephone : WideString; safecall;
   procedure Set_Telephone(const pVal:WideString); safecall;
   function Get_Telecopie : WideString; safecall;
   procedure Set_Telecopie(const pVal:WideString); safecall;
   function Get_Portable : WideString; safecall;
   procedure Set_Portable(const pVal:WideString); safecall;
   function Get_EMail : WideString; safecall;
   procedure Set_EMail(const pVal:WideString); safecall;
   function Get_Site : WideString; safecall;
   procedure Set_Site(const pVal:WideString); safecall;
   function Get_bGereTelecopie : WordBool; safecall;
   function Get_bGerePortable : WordBool; safecall;
   function Get_bGereEMail : WordBool; safecall;
   function Get_bGereSite : WordBool; safecall;
    // Telephone : property Telephone 
   property Telephone:WideString read Get_Telephone write Set_Telephone;
    // Telecopie : property Telecopie 
   property Telecopie:WideString read Get_Telecopie write Set_Telecopie;
    // Portable : property Portable 
   property Portable:WideString read Get_Portable write Set_Portable;
    // EMail : property EMail 
   property EMail:WideString read Get_EMail write Set_EMail;
    // Site : property Site 
   property Site:WideString read Get_Site write Set_Site;
    // bGereTelecopie : property bGereTelecopie 
   property bGereTelecopie:WordBool read Get_bGereTelecopie;
    // bGerePortable : property bGerePortable 
   property bGerePortable:WordBool read Get_bGerePortable;
    // bGereEMail : property bGereEMail 
   property bGereEMail:WordBool read Get_bGereEMail;
    // bGereSite : property bGereSite 
   property bGereSite:WordBool read Get_bGereSite;
  end;


// ITelecom : ITelecomInterface

 ITelecomDisp = dispinterface
   ['{089B1AA4-8800-4FCB-9013-2CCA6F9D9F7A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Telephone : property Telephone 
   property Telephone:WideString dispid 1;
    // Telecopie : property Telecopie 
   property Telecopie:WideString dispid 2;
    // Portable : property Portable 
   property Portable:WideString dispid 3;
    // EMail : property EMail 
   property EMail:WideString dispid 4;
    // Site : property Site 
   property Site:WideString dispid 5;
    // bGereTelecopie : property bGereTelecopie 
   property bGereTelecopie:WordBool  readonly dispid 6;
    // bGerePortable : property bGerePortable 
   property bGerePortable:WordBool  readonly dispid 7;
    // bGereEMail : property bGereEMail 
   property bGereEMail:WordBool  readonly dispid 8;
    // bGereSite : property bGereSite 
   property bGereSite:WordBool  readonly dispid 9;
  end;


// ITarif2 : ITarif2 Interface

 ITarif2 = interface(IDispatch)
   ['{54EE0721-CF74-48BB-ABE3-54A4E62A18A9}']
   function Get_Prix : Double; safecall;
   function Get_PrixDevise : Double; safecall;
   function Get_IsHorsRemise : WordBool; safecall;
   function Get_Remise : IRemise2; safecall;
   function Get_Reference : WideString; safecall;
   function Get_CodeBarre : WideString; safecall;
   function Get_Devise : IDevise; safecall;
    // Prix : property Prix 
   property Prix:Double read Get_Prix;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double read Get_PrixDevise;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool read Get_IsHorsRemise;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise;
    // Reference : property Reference 
   property Reference:WideString read Get_Reference;
    // CodeBarre : property CodeBarre 
   property CodeBarre:WideString read Get_CodeBarre;
    // Devise : property Devise 
   property Devise:IDevise read Get_Devise;
  end;


// ITarif2 : ITarif2 Interface

 ITarif2Disp = dispinterface
   ['{54EE0721-CF74-48BB-ABE3-54A4E62A18A9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Prix : property Prix 
   property Prix:Double  readonly dispid 1;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double  readonly dispid 2;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool  readonly dispid 3;
    // Remise : property Remise 
   property Remise:IRemise2  readonly dispid 4;
    // Reference : property Reference 
   property Reference:WideString  readonly dispid 5;
    // CodeBarre : property CodeBarre 
   property CodeBarre:WideString  readonly dispid 6;
    // Devise : property Devise 
   property Devise:IDevise  readonly dispid 7;
  end;


// IDevise : IDevise Interface

 IDevise = interface(IDispatch)
   ['{26555D4C-EC13-4B47-A38E-35EAAA45BECF}']
   function Get_D_Intitule : WideString; safecall;
   function Get_D_Format : WideString; safecall;
   function Get_D_Cours : Double; safecall;
   function Get_D_CoursP : Double; safecall;
   function Get_D_Monnaie : WideString; safecall;
   function Get_D_SousMonnaie : WideString; safecall;
   function Get_D_CodeISO : WideString; safecall;
   function Get_D_Sigle : WideString; safecall;
   function Get_D_Mode : DeviseMode; safecall;
   function Get_D_CoursClot : Double; safecall;
   function Get_D_AncDate : TDateTime; safecall;
   function Get_D_AncCours : Double; safecall;
   function Get_D_AncMode : DeviseMode; safecall;
   function Get_D_CodeRemise : DeviseRemise; safecall;
   function Get_D_Euro : WordBool; safecall;
    // Convert : methode Convert 
   function Convert(pDevise:IDevise;dVal:Double):Double;safecall;
   function Get_D_CodeISONum : WideString; safecall;
    // D_Intitule : property D_Intitule 
   property D_Intitule:WideString read Get_D_Intitule;
    // D_Format : property D_Format 
   property D_Format:WideString read Get_D_Format;
    // D_Cours : property D_Cours 
   property D_Cours:Double read Get_D_Cours;
    // D_CoursP : property D_CoursP 
   property D_CoursP:Double read Get_D_CoursP;
    // D_Monnaie : property D_Monnaie 
   property D_Monnaie:WideString read Get_D_Monnaie;
    // D_SousMonnaie : property D_SousMonnaie 
   property D_SousMonnaie:WideString read Get_D_SousMonnaie;
    // D_CodeISO : property D_CodeISO 
   property D_CodeISO:WideString read Get_D_CodeISO;
    // D_Sigle : property D_Sigle 
   property D_Sigle:WideString read Get_D_Sigle;
    // D_Mode : property D_Mode 
   property D_Mode:DeviseMode read Get_D_Mode;
    // D_CoursClot : property D_CoursClot 
   property D_CoursClot:Double read Get_D_CoursClot;
    // D_AncDate : property D_AncDate 
   property D_AncDate:TDateTime read Get_D_AncDate;
    // D_AncCours : property D_AncCours 
   property D_AncCours:Double read Get_D_AncCours;
    // D_AncMode : property D_AncMode 
   property D_AncMode:DeviseMode read Get_D_AncMode;
    // D_CodeRemise : property D_CodeRemise 
   property D_CodeRemise:DeviseRemise read Get_D_CodeRemise;
    // D_Euro : property D_Euro 
   property D_Euro:WordBool read Get_D_Euro;
    // D_CodeISONum : property D_CodeISONum 
   property D_CodeISONum:WideString read Get_D_CodeISONum;
  end;


// IDevise : IDevise Interface

 IDeviseDisp = dispinterface
   ['{26555D4C-EC13-4B47-A38E-35EAAA45BECF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Convert : methode Convert 
   function Convert(pDevise:IDevise;dVal:Double):Double;dispid 17;
    // D_Intitule : property D_Intitule 
   property D_Intitule:WideString  readonly dispid 2;
    // D_Format : property D_Format 
   property D_Format:WideString  readonly dispid 3;
    // D_Cours : property D_Cours 
   property D_Cours:Double  readonly dispid 4;
    // D_CoursP : property D_CoursP 
   property D_CoursP:Double  readonly dispid 5;
    // D_Monnaie : property D_Monnaie 
   property D_Monnaie:WideString  readonly dispid 6;
    // D_SousMonnaie : property D_SousMonnaie 
   property D_SousMonnaie:WideString  readonly dispid 7;
    // D_CodeISO : property D_CodeISO 
   property D_CodeISO:WideString  readonly dispid 8;
    // D_Sigle : property D_Sigle 
   property D_Sigle:WideString  readonly dispid 9;
    // D_Mode : property D_Mode 
   property D_Mode:DeviseMode  readonly dispid 10;
    // D_CoursClot : property D_CoursClot 
   property D_CoursClot:Double  readonly dispid 11;
    // D_AncDate : property D_AncDate 
   property D_AncDate:TDateTime  readonly dispid 12;
    // D_AncCours : property D_AncCours 
   property D_AncCours:Double  readonly dispid 13;
    // D_AncMode : property D_AncMode 
   property D_AncMode:DeviseMode  readonly dispid 14;
    // D_CodeRemise : property D_CodeRemise 
   property D_CodeRemise:DeviseRemise  readonly dispid 15;
    // D_Euro : property D_Euro 
   property D_Euro:WordBool  readonly dispid 16;
    // D_CodeISONum : property D_CodeISONum 
   property D_CodeISONum:WideString  readonly dispid 18;
  end;


// ITarifVente2 : ITarifVente2 Interface

 ITarifVente2 = interface(ITarif2)
   ['{18AF0D16-E2FE-4C21-B399-50B060BEC3E2}']
   function Get_Coefficient : Double; safecall;
   function Get_PrixTTC : WordBool; safecall;
   function Get_Arrondi : IArrondi; safecall;
   function Get_Calcul : WordBool; safecall;
    // Coefficient : property Coefficient 
   property Coefficient:Double read Get_Coefficient;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool read Get_PrixTTC;
    // Arrondi : property Arrondi 
   property Arrondi:IArrondi read Get_Arrondi;
    // Calcul : property Calcul 
   property Calcul:WordBool read Get_Calcul;
  end;


// ITarifVente2 : ITarifVente2 Interface

 ITarifVente2Disp = dispinterface
   ['{18AF0D16-E2FE-4C21-B399-50B060BEC3E2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Prix : property Prix 
   property Prix:Double  readonly dispid 1;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double  readonly dispid 2;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool  readonly dispid 3;
    // Remise : property Remise 
   property Remise:IRemise2  readonly dispid 4;
    // Reference : property Reference 
   property Reference:WideString  readonly dispid 5;
    // CodeBarre : property CodeBarre 
   property CodeBarre:WideString  readonly dispid 6;
    // Devise : property Devise 
   property Devise:IDevise  readonly dispid 7;
    // Coefficient : property Coefficient 
   property Coefficient:Double  readonly dispid 10;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool  readonly dispid 11;
    // Arrondi : property Arrondi 
   property Arrondi:IArrondi  readonly dispid 12;
    // Calcul : property Calcul 
   property Calcul:WordBool  readonly dispid 13;
  end;


// ITarifAchat2 : ITarifAchat2 Interface

 ITarifAchat2 = interface(ITarif2)
   ['{11D2FA93-8598-4475-A940-C5276357BCBE}']
   function Get_Colisage : Double; safecall;
   function Get_DelaiAppro : Smallint; safecall;
   function Get_QteMini : Double; safecall;
   function Get_Garantie : Smallint; safecall;
   function Get_QteReelle : Double; safecall;
    // Colisage : property Colisage 
   property Colisage:Double read Get_Colisage;
    // DelaiAppro : property DelaiAppro 
   property DelaiAppro:Smallint read Get_DelaiAppro;
    // QteMini : property QteMini 
   property QteMini:Double read Get_QteMini;
    // Garantie : property Garantie 
   property Garantie:Smallint read Get_Garantie;
    // QteReelle : property QteReelle 
   property QteReelle:Double read Get_QteReelle;
  end;


// ITarifAchat2 : ITarifAchat2 Interface

 ITarifAchat2Disp = dispinterface
   ['{11D2FA93-8598-4475-A940-C5276357BCBE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Prix : property Prix 
   property Prix:Double  readonly dispid 1;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double  readonly dispid 2;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool  readonly dispid 3;
    // Remise : property Remise 
   property Remise:IRemise2  readonly dispid 4;
    // Reference : property Reference 
   property Reference:WideString  readonly dispid 5;
    // CodeBarre : property CodeBarre 
   property CodeBarre:WideString  readonly dispid 6;
    // Devise : property Devise 
   property Devise:IDevise  readonly dispid 7;
    // Colisage : property Colisage 
   property Colisage:Double  readonly dispid 10;
    // DelaiAppro : property DelaiAppro 
   property DelaiAppro:Smallint  readonly dispid 11;
    // QteMini : property QteMini 
   property QteMini:Double  readonly dispid 12;
    // Garantie : property Garantie 
   property Garantie:Smallint  readonly dispid 13;
    // QteReelle : property QteReelle 
   property QteReelle:Double  readonly dispid 14;
  end;


// IBPAnalytiqueRupture : IBPAnalytiqueRupture Interface

 IBPAnalytiqueRupture = interface(IDispatch)
   ['{8FC21F33-1F4D-44A6-89A4-1F9196195BD2}']
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Lg : Smallint; safecall;
   procedure Set_Lg(const pVal:Smallint); safecall;
   function Get_type_ : AnalytiqueRuptureType; safecall;
   procedure Set_type_(const pVal:AnalytiqueRuptureType); safecall;
    // Intitule : property Intitulé 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Lg : property Lg 
   property Lg:Smallint read Get_Lg write Set_Lg;
    // type : property Type 
   property type_:AnalytiqueRuptureType read Get_type_ write Set_type_;
  end;


// IBPAnalytiqueRupture : IBPAnalytiqueRupture Interface

 IBPAnalytiqueRuptureDisp = dispinterface
   ['{8FC21F33-1F4D-44A6-89A4-1F9196195BD2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Intitule : property Intitulé 
   property Intitule:WideString dispid 101;
    // Lg : property Lg 
   property Lg:Smallint dispid 102;
    // type : property Type 
   property type_:AnalytiqueRuptureType dispid 103;
  end;


// IDocLigneValorisation : IDocLigneValorisation Interface

 IDocLigneValorisation = interface(IDispatch)
   ['{1BBB8B46-588F-4718-BDCF-3E4E79F28346}']
   function Get_HT : Double; safecall;
   function Get_HTBrut : Double; safecall;
   function Get_HTNet : Double; safecall;
   function Get_TTC : Double; safecall;
   function Get_TTC_Brut : Double; safecall;
   function Get_TTC_HorsEscompte : Double; safecall;
   function Get_PrixRevient : Double; safecall;
   function Get_Qte : Double; safecall;
   function Get_QteColisee : Double; safecall;
   function Get_PoidsNet : Double; safecall;
   function Get_PoidsBrut : Double; safecall;
   function Get_HTDev : Double; safecall;
   function Get_HTNetDev : Double; safecall;
   function Get_TTCDev : Double; safecall;
   function Get_TotalTaxes : Double; safecall;
   function Get_TotalTaxesDev : Double; safecall;
   function Get_Taxes : IDocValoTaxes; safecall;
   function Get_Marge : Double; safecall;
   function Get_PU_Net : Double; safecall;
   function Get_PU_NetDev : Double; safecall;
    // HT : HT avec remises appliquées 
   property HT:Double read Get_HT;
    // HTBrut : HT avant remise et avant escompte 
   property HTBrut:Double read Get_HTBrut;
    // HTNet : HT avec remises et escomptes appliqués 
   property HTNet:Double read Get_HTNet;
    // TTC : property TTC 
   property TTC:Double read Get_TTC;
    // TTC_Brut : property TTC_Brut 
   property TTC_Brut:Double read Get_TTC_Brut;
    // TTC_HorsEscompte : property TTC_HorsEscompte 
   property TTC_HorsEscompte:Double read Get_TTC_HorsEscompte;
    // PrixRevient : property PrixRevient 
   property PrixRevient:Double read Get_PrixRevient;
    // Qte : property Qte 
   property Qte:Double read Get_Qte;
    // QteColisee : property QteColisee 
   property QteColisee:Double read Get_QteColisee;
    // PoidsNet : property PoidsNet 
   property PoidsNet:Double read Get_PoidsNet;
    // PoidsBrut : property PoidsBrut 
   property PoidsBrut:Double read Get_PoidsBrut;
    // HTDev : property HTDev 
   property HTDev:Double read Get_HTDev;
    // HTNetDev : property HTNetDev 
   property HTNetDev:Double read Get_HTNetDev;
    // TTCDev : property TTCDev 
   property TTCDev:Double read Get_TTCDev;
    // TotalTaxes : property TotalTaxes 
   property TotalTaxes:Double read Get_TotalTaxes;
    // TotalTaxesDev : property TotalTaxesDev 
   property TotalTaxesDev:Double read Get_TotalTaxesDev;
    // Taxes : property Taxes 
   property Taxes:IDocValoTaxes read Get_Taxes;
    // Marge : property Marge 
   property Marge:Double read Get_Marge;
    // PU_Net : property PU_Net 
   property PU_Net:Double read Get_PU_Net;
    // PU_NetDev : property PU_NetDev 
   property PU_NetDev:Double read Get_PU_NetDev;
  end;


// IDocLigneValorisation : IDocLigneValorisation Interface

 IDocLigneValorisationDisp = dispinterface
   ['{1BBB8B46-588F-4718-BDCF-3E4E79F28346}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // HT : HT avec remises appliquées 
   property HT:Double  readonly dispid 1;
    // HTBrut : HT avant remise et avant escompte 
   property HTBrut:Double  readonly dispid 2;
    // HTNet : HT avec remises et escomptes appliqués 
   property HTNet:Double  readonly dispid 3;
    // TTC : property TTC 
   property TTC:Double  readonly dispid 4;
    // TTC_Brut : property TTC_Brut 
   property TTC_Brut:Double  readonly dispid 5;
    // TTC_HorsEscompte : property TTC_HorsEscompte 
   property TTC_HorsEscompte:Double  readonly dispid 6;
    // PrixRevient : property PrixRevient 
   property PrixRevient:Double  readonly dispid 7;
    // Qte : property Qte 
   property Qte:Double  readonly dispid 8;
    // QteColisee : property QteColisee 
   property QteColisee:Double  readonly dispid 9;
    // PoidsNet : property PoidsNet 
   property PoidsNet:Double  readonly dispid 10;
    // PoidsBrut : property PoidsBrut 
   property PoidsBrut:Double  readonly dispid 11;
    // HTDev : property HTDev 
   property HTDev:Double  readonly dispid 12;
    // HTNetDev : property HTNetDev 
   property HTNetDev:Double  readonly dispid 13;
    // TTCDev : property TTCDev 
   property TTCDev:Double  readonly dispid 14;
    // TotalTaxes : property TotalTaxes 
   property TotalTaxes:Double  readonly dispid 15;
    // TotalTaxesDev : property TotalTaxesDev 
   property TotalTaxesDev:Double  readonly dispid 16;
    // Taxes : property Taxes 
   property Taxes:IDocValoTaxes  readonly dispid 25;
    // Marge : property Marge 
   property Marge:Double  readonly dispid 27;
    // PU_Net : property PU_Net 
   property PU_Net:Double  readonly dispid 28;
    // PU_NetDev : property PU_NetDev 
   property PU_NetDev:Double  readonly dispid 29;
  end;


// ITransformation : ITransformation Interface

 ITransformation = interface(IDispatch)
   ['{9CFC5621-A9C5-4CB7-8F59-5D43528CB085}']
   function Get_Vente : ITransformationVente; safecall;
   function Get_Achat : ITransformationAchat; safecall;
    // Vente : property Vente 
   property Vente:ITransformationVente read Get_Vente;
    // Achat : property Achat 
   property Achat:ITransformationAchat read Get_Achat;
  end;


// ITransformation : ITransformation Interface

 ITransformationDisp = dispinterface
   ['{9CFC5621-A9C5-4CB7-8F59-5D43528CB085}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Vente : property Vente 
   property Vente:ITransformationVente  readonly dispid 10;
    // Achat : property Achat 
   property Achat:ITransformationAchat  readonly dispid 11;
  end;


// ITransformationVente : ITransformationVente Interface

 ITransformationVente = interface(IDispatch)
   ['{3C639ED8-ABBF-4449-9B86-510624C35C24}']
    // CreateProcess_Commander : Transformation vers un bon de commande de vente 
   function CreateProcess_Commander:IPMDocTransformer;safecall;
    // CreateProcess_Livrer : Transformation vers un bon de livraison de vente 
   function CreateProcess_Livrer:IPMDocTransformer;safecall;
    // CreateProcess_Facturer : Transformation vers une facture de vente 
   function CreateProcess_Facturer:IPMDocTransformer;safecall;
  end;


// ITransformationVente : ITransformationVente Interface

 ITransformationVenteDisp = dispinterface
   ['{3C639ED8-ABBF-4449-9B86-510624C35C24}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // CreateProcess_Commander : Transformation vers un bon de commande de vente 
   function CreateProcess_Commander:IPMDocTransformer;dispid 10;
    // CreateProcess_Livrer : Transformation vers un bon de livraison de vente 
   function CreateProcess_Livrer:IPMDocTransformer;dispid 11;
    // CreateProcess_Facturer : Transformation vers une facture de vente 
   function CreateProcess_Facturer:IPMDocTransformer;dispid 12;
  end;


// IPMProcess : IPMProcess Interface

 IPMProcess = interface(IDispatch)
   ['{CA25DA28-1153-4BE1-9849-403D1D8B2A3F}']
    // Process : property Process 
   procedure Process;safecall;
   function Get_CanProcess : WordBool; safecall;
   function Get_Errors : IFailInfoCol; safecall;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool read Get_CanProcess;
    // Errors : property Errors 
   property Errors:IFailInfoCol read Get_Errors;
  end;


// IPMProcess : IPMProcess Interface

 IPMProcessDisp = dispinterface
   ['{CA25DA28-1153-4BE1-9849-403D1D8B2A3F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
  end;


// IPMDocTransformer : IPMDocTransformer Interface

 IPMDocTransformer = interface(IPMProcess)
   ['{3B2FF624-53B6-4F75-8A34-41CFDA72646F}']
    // _Reserved : method _Reserved (methode interne) 
   procedure _Reserved;safecall;
   function Get_DO_Date : TDateTime; safecall;
   procedure Set_DO_Date(const pVal:TDateTime); safecall;
   function Get_RecalculFraisExpedition : WordBool; safecall;
   procedure Set_RecalculFraisExpedition(const pVal:WordBool); safecall;
    // AddDocument : methode AddDocument 
   procedure AddDocument(pDoc:IBODocument3);safecall;
    // RmvDocument : methode RmvDocument 
   procedure RmvDocument(pDoc:IBODocument3);safecall;
    // AddDocumentLigne : methode AddDocumentLigne 
   procedure AddDocumentLigne(pLigne:IBODocumentLigne3);safecall;
    // RmvDocumentLigne : methode RmvDocumentLigne 
   procedure RmvDocumentLigne(pLigne:IBODocumentLigne3);safecall;
    // AddDocumentDestination : methode AddDocumentDestination 
   procedure AddDocumentDestination(pDoc:IBODocument3);safecall;
    // RmvDocumentDestination : methode RmvDocumentDestination 
   procedure RmvDocumentDestination(pDoc:IBODocument3);safecall;
   function Get_UserLotsToUse(pLigne:IBODocumentLigne3) : IBICollectionDispatch; safecall;
   function Get_UserLotsQteRestantAFournir(pLigne:IBODocumentLigne3) : Double; safecall;
   function Get_ListDocumentsATransformer : IBICollection; safecall;
   function Get_ListLignesATransformer : IBICollection; safecall;
   function Get_ListDocumentsResult : IBICollection; safecall;
   function Get_ListLignesResult : IBICollection; safecall;
   function Get_ListDocumentsDestination : IBICollection; safecall;
   function Get_MajCoursType : TransfoMajCoursType; safecall;
   procedure Set_MajCoursType(const pVal:TransfoMajCoursType); safecall;
   function Get_MajTauxTaxe : WordBool; safecall;
   procedure Set_MajTauxTaxe(const pVal:WordBool); safecall;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime read Get_DO_Date write Set_DO_Date;
    // RecalculFraisExpedition : property RecalculFraisExpedition 
   property RecalculFraisExpedition:WordBool read Get_RecalculFraisExpedition write Set_RecalculFraisExpedition;
    // UserLotsToUse : Collection des lots paramètrés pour une ligne donnée 
   property UserLotsToUse[pLigne:IBODocumentLigne3]:IBICollectionDispatch read Get_UserLotsToUse;
    // UserLotsQteRestantAFournir : Quantité pour laquelle il reste à fournir des lots 
   property UserLotsQteRestantAFournir[pLigne:IBODocumentLigne3]:Double read Get_UserLotsQteRestantAFournir;
    // ListDocumentsATransformer : Collection des documents à transformer 
   property ListDocumentsATransformer:IBICollection read Get_ListDocumentsATransformer;
    // ListLignesATransformer : Collection des lignes à transformer 
   property ListLignesATransformer:IBICollection read Get_ListLignesATransformer;
    // ListDocumentsResult : Collection des documents resultants de la transformation 
   property ListDocumentsResult:IBICollection read Get_ListDocumentsResult;
    // ListLignesResult : Collection des lignes resultants de la transformation 
   property ListLignesResult:IBICollection read Get_ListLignesResult;
    // ListDocumentsDestination : Collection des documents à compléter 
   property ListDocumentsDestination:IBICollection read Get_ListDocumentsDestination;
    // MajCoursType : property MajCoursType 
   property MajCoursType:TransfoMajCoursType read Get_MajCoursType write Set_MajCoursType;
    // MajTauxTaxe : property MajTauxTaxe 
   property MajTauxTaxe:WordBool read Get_MajTauxTaxe write Set_MajTauxTaxe;
  end;

// IPMDocTransformer : IPMDocTransformer Interface

 IPMDocTransformerDisp = dispinterface
   ['{3B2FF624-53B6-4F75-8A34-41CFDA72646F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // _Reserved : method _Reserved (methode interne) 
   procedure _Reserved;dispid 99;
    // AddDocument : methode AddDocument 
   procedure AddDocument(pDoc:IBODocument3);dispid 110;
    // RmvDocument : methode RmvDocument 
   procedure RmvDocument(pDoc:IBODocument3);dispid 111;
    // AddDocumentLigne : methode AddDocumentLigne 
   procedure AddDocumentLigne(pLigne:IBODocumentLigne3);dispid 112;
    // RmvDocumentLigne : methode RmvDocumentLigne 
   procedure RmvDocumentLigne(pLigne:IBODocumentLigne3);dispid 113;
    // AddDocumentDestination : methode AddDocumentDestination 
   procedure AddDocumentDestination(pDoc:IBODocument3);dispid 114;
    // RmvDocumentDestination : methode RmvDocumentDestination 
   procedure RmvDocumentDestination(pDoc:IBODocument3);dispid 115;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 100;
    // RecalculFraisExpedition : property RecalculFraisExpedition 
   property RecalculFraisExpedition:WordBool dispid 103;
    // UserLotsToUse : Collection des lots paramètrés pour une ligne donnée 
   property UserLotsToUse[pLigne:IBODocumentLigne3]:IBICollectionDispatch  readonly dispid 155;
    // UserLotsQteRestantAFournir : Quantité pour laquelle il reste à fournir des lots 
   property UserLotsQteRestantAFournir[pLigne:IBODocumentLigne3]:Double  readonly dispid 156;
    // ListDocumentsATransformer : Collection des documents à transformer 
   property ListDocumentsATransformer:IBICollection  readonly dispid 150;
    // ListLignesATransformer : Collection des lignes à transformer 
   property ListLignesATransformer:IBICollection  readonly dispid 151;
    // ListDocumentsResult : Collection des documents resultants de la transformation 
   property ListDocumentsResult:IBICollection  readonly dispid 152;
    // ListLignesResult : Collection des lignes resultants de la transformation 
   property ListLignesResult:IBICollection  readonly dispid 153;
    // ListDocumentsDestination : Collection des documents à compléter 
   property ListDocumentsDestination:IBICollection  readonly dispid 154;
    // MajCoursType : property MajCoursType 
   property MajCoursType:TransfoMajCoursType dispid 157;
    // MajTauxTaxe : property MajTauxTaxe 
   property MajTauxTaxe:WordBool dispid 158;
  end;


// IFailInfoCol : IFailInfoCol Interface

 IFailInfoCol = interface(IDispatch)
   ['{ED8391C3-A97F-4464-AFA4-D8A52DA6C558}']
   function Get_Item(lIndex:Integer) : IFailInfo; safecall;
   function Get_Count : Integer; safecall;
   function Get__NewEnum : IUnknown; safecall;
    // Item : property Item 
   property Item[lIndex:Integer]:IFailInfo read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
  end;


// IFailInfoCol : IFailInfoCol Interface

 IFailInfoColDisp = dispinterface
   ['{ED8391C3-A97F-4464-AFA4-D8A52DA6C558}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Item : property Item 
   property Item[lIndex:Integer]:IFailInfo  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
  end;


// IFailInfo : IFailInfo Interface

 IFailInfo = interface(IDispatch)
   ['{56E46799-276B-4FAA-B64E-B98F1B245C92}']
   function Get_ErrorCode : OleVariant; safecall;
   function Get_Text_ : WideString; safecall;
   function Get_Indice : Integer; safecall;
    // ErrorCode : property ErrorCode 
   property ErrorCode:OleVariant read Get_ErrorCode;
    // Text : property Text 
   property Text_:WideString read Get_Text_;
    // Indice : property Indice 
   property Indice:Integer read Get_Indice;
  end;


// IFailInfo : IFailInfo Interface

 IFailInfoDisp = dispinterface
   ['{56E46799-276B-4FAA-B64E-B98F1B245C92}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // ErrorCode : property ErrorCode 
   property ErrorCode:OleVariant  readonly dispid 1;
    // Text : property Text 
   property Text_:WideString  readonly dispid 2;
    // Indice : property Indice 
   property Indice:Integer  readonly dispid 3;
  end;


// IBODocument3 : IBODocument3 Interface

 IBODocument3 = interface(IBIPersistObject)
   ['{32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}']
   function Get_FactoryDocument : IBODocumentFactory; safecall;
   function Get_FactoryDocumentLigne : IBODocumentLigneFactory; safecall;
   function Get_DO_Domaine : DomaineType; safecall;
   function Get_DO_Type : DocumentType; safecall;
   function Get_DO_Piece : WideString; safecall;
   procedure Set_DO_Piece(const pVal:WideString); safecall;
   function Get_DO_Date : TDateTime; safecall;
   procedure Set_DO_Date(const pVal:TDateTime); safecall;
   function Get_DO_Ref : WideString; safecall;
   procedure Set_DO_Ref(const pVal:WideString); safecall;
   function Get_DepotStockage : IBODepot3; safecall;
   procedure Set_DepotStockage(const pDepot:IBODepot3); safecall;
   function Get_DO_Imprim : WordBool; safecall;
   function Get_DO_Heure : TDateTime; safecall;
   function Get_DO_Transfere : WordBool; safecall;
   function Get_InfoLibre : IBIValues; safecall;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;safecall;
   function Get_Collaborateur : IBOCollaborateur; safecall;
   procedure Set_Collaborateur(const pCollaborateur:IBOCollaborateur); safecall;
   function Get_Souche : IBISouche; safecall;
   procedure Set_Souche(const pSouche:IBISouche); safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pCompteA:IBOCompteA3); safecall;
   function Get_DO_TotalHT : Double; safecall;
   function Get_FactoryDocumentMedia : IBITypeObjectFactory; safecall;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory read Get_FactoryDocument;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory read Get_FactoryDocumentLigne;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType read Get_DO_Domaine;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType read Get_DO_Type;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString read Get_DO_Piece write Set_DO_Piece;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime read Get_DO_Date write Set_DO_Date;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString read Get_DO_Ref write Set_DO_Ref;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 read Get_DepotStockage write Set_DepotStockage;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool read Get_DO_Imprim;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime read Get_DO_Heure;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool read Get_DO_Transfere;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    // Souche : property Souche 
   property Souche:IBISouche read Get_Souche write Set_Souche;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double read Get_DO_TotalHT;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory read Get_FactoryDocumentMedia;
  end;


// IBODocument3 : IBODocument3 Interface

 IBODocument3Disp = dispinterface
   ['{32FE56B9-1E64-4A59-AE3C-EA5BEBBA2C3D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;dispid 115;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 100;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 101;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 104;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 105;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString dispid 106;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 107;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 108;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 dispid 109;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool  readonly dispid 110;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime  readonly dispid 111;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool  readonly dispid 113;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 114;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 116;
    // Souche : property Souche 
   property Souche:IBISouche dispid 117;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 dispid 161;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double  readonly dispid 118;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory  readonly dispid 119;
  end;


// IBODocumentFactory : IBODocumentFactory Interface

 IBODocumentFactory = interface(IBITypeObjectFactory)
   ['{B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}']
   function Get_InfoLibreFields : IBIFields; safecall;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBODocumentFactory : IBODocumentFactory Interface

 IBODocumentFactoryDisp = dispinterface
   ['{B6986EB1-B7E5-47E0-A22E-B4C64A1A54B1}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 21;
  end;


// IBIFields : IBIFields Interface

 IBIFields = interface(IDispatch)
   ['{2817DCCC-42F2-4206-835D-F46D0AD2AA0F}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(lIndex:Integer) : IBIField; safecall;
   function Get_Count : Integer; safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[lIndex:Integer]:IBIField read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IBIFields : IBIFields Interface

 IBIFieldsDisp = dispinterface
   ['{2817DCCC-42F2-4206-835D-F46D0AD2AA0F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[lIndex:Integer]:IBIField  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IBIField : IBIField Interface

 IBIField = interface(IDispatch)
   ['{EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}']
   function Get_Name : WideString; safecall;
   function Get_Size : Smallint; safecall;
   function Get_type_ : FieldType; safecall;
   function Get_Formule : WideString; safecall;
   function Get_IsCalculable : WordBool; safecall;
    // Name : property Name 
   property Name:WideString read Get_Name;
    // Size : property Size 
   property Size:Smallint read Get_Size;
    // type : property Type 
   property type_:FieldType read Get_type_;
    // Formule : property Formule 
   property Formule:WideString read Get_Formule;
    // IsCalculable : property IsCalculable 
   property IsCalculable:WordBool read Get_IsCalculable;
  end;


// IBIField : IBIField Interface

 IBIFieldDisp = dispinterface
   ['{EDC1CB4E-E678-438B-B722-5BEDCCED8EF8}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Name : property Name 
   property Name:WideString  readonly dispid 1;
    // Size : property Size 
   property Size:Smallint  readonly dispid 2;
    // type : property Type 
   property type_:FieldType  readonly dispid 3;
    // Formule : property Formule 
   property Formule:WideString  readonly dispid 4;
    // IsCalculable : property IsCalculable 
   property IsCalculable:WordBool  readonly dispid 5;
  end;


// IBODocumentLigneFactory : IBODocumentLigneFactory Interface

 IBODocumentLigneFactory = interface(IBITypeObjectFactory)
   ['{EA77FBAD-D58F-461F-9542-8F123C1D7B85}']
   function Get_InfoLibreFields : IBIFields; safecall;
    // QueryPied : methode QueryPied 
   function QueryPied:IBICollection;safecall;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBODocumentLigneFactory : IBODocumentLigneFactory Interface

 IBODocumentLigneFactoryDisp = dispinterface
   ['{EA77FBAD-D58F-461F-9542-8F123C1D7B85}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryPied : methode QueryPied 
   function QueryPied:IBICollection;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 10;
  end;


// IBODepot3 : IBODepot3 Interface

 IBODepot3 = interface(IBIPersistObject)
   ['{390E51AD-CC0A-4641-84D9-6B8E97906812}']
   function Get_FactoryDepot : IBODepotFactory2; safecall;
   function Get_FactoryDepotContact : IBITypeObjectFactory; safecall;
   function Get_DE_Intitule : WideString; safecall;
   procedure Set_DE_Intitule(const pVal:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_DE_Contact : WideString; safecall;
   procedure Set_DE_Contact(const pVal:WideString); safecall;
   function Get_CategorieCompta : IBICategorieCompta; safecall;
   procedure Set_CategorieCompta(const pCategorieCompta:IBICategorieCompta); safecall;
   function Get_DE_Code : WideString; safecall;
   procedure Set_DE_Code(const pVal:WideString); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
   function Get_FactoryDepotEmplacement : IBODepotEmplacementFactory; safecall;
   function Get_DefaultEmplacement : IBODepotEmplacement; safecall;
   procedure Set_DefaultEmplacement(const pObj:IBODepotEmplacement); safecall;
   function Get_DE_Exclure : WordBool; safecall;
   procedure Set_DE_Exclure(const pVal:WordBool); safecall;
   function Get_DE_Souche(sElt:DomaineType) : IBISouche; safecall;
   procedure Set_DE_Souche(const sElt:DomaineType; const parDE_Souche:IBISouche); safecall;
    // FactoryDepot : property FactoryDepot 
   property FactoryDepot:IBODepotFactory2 read Get_FactoryDepot;
    // FactoryDepotContact : property FactoryDepotContact 
   property FactoryDepotContact:IBITypeObjectFactory read Get_FactoryDepotContact;
    // DE_Intitule : property DE_Intitule 
   property DE_Intitule:WideString read Get_DE_Intitule write Set_DE_Intitule;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // DE_Contact : property DE_Contact 
   property DE_Contact:WideString read Get_DE_Contact write Set_DE_Contact;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    // DE_Code : property DE_Code 
   property DE_Code:WideString read Get_DE_Code write Set_DE_Code;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // FactoryDepotEmplacement : property FactoryDepotEmplacement 
   property FactoryDepotEmplacement:IBODepotEmplacementFactory read Get_FactoryDepotEmplacement;
    // DefaultEmplacement : property DefaultEmplacement 
   property DefaultEmplacement:IBODepotEmplacement read Get_DefaultEmplacement write Set_DefaultEmplacement;
    // DE_Exclure : property DE_Exclure 
   property DE_Exclure:WordBool read Get_DE_Exclure write Set_DE_Exclure;
    // DE_Souche : property DE_Souche 
   property DE_Souche[sElt:DomaineType]:IBISouche read Get_DE_Souche write Set_DE_Souche;
  end;


// IBODepot3 : IBODepot3 Interface

 IBODepot3Disp = dispinterface
   ['{390E51AD-CC0A-4641-84D9-6B8E97906812}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDepot : property FactoryDepot 
   property FactoryDepot:IBODepotFactory2  readonly dispid 100;
    // FactoryDepotContact : property FactoryDepotContact 
   property FactoryDepotContact:IBITypeObjectFactory  readonly dispid 101;
    // DE_Intitule : property DE_Intitule 
   property DE_Intitule:WideString dispid 102;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 103;
    // DE_Contact : property DE_Contact 
   property DE_Contact:WideString dispid 107;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 108;
    // DE_Code : property DE_Code 
   property DE_Code:WideString dispid 112;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 113;
    // FactoryDepotEmplacement : property FactoryDepotEmplacement 
   property FactoryDepotEmplacement:IBODepotEmplacementFactory  readonly dispid 115;
    // DefaultEmplacement : property DefaultEmplacement 
   property DefaultEmplacement:IBODepotEmplacement dispid 116;
    // DE_Exclure : property DE_Exclure 
   property DE_Exclure:WordBool dispid 117;
    // DE_Souche : property DE_Souche 
   property DE_Souche[sElt:DomaineType]:IBISouche dispid 118;
  end;


// IBODepotFactory2 : IBODepotFactory2 Interface

 IBODepotFactory2 = interface(IBITypeObjectFactory)
   ['{22A6C915-8B4F-4BB0-B720-B8DA08203AE0}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBODepot3;safecall;
  end;


// IBODepotFactory2 : IBODepotFactory2 Interface

 IBODepotFactory2Disp = dispinterface
   ['{22A6C915-8B4F-4BB0-B720-B8DA08203AE0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBODepot3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODepotEmplacementFactory : IBODepotEmplacementFactory Interface

 IBODepotEmplacementFactory = interface(IBITypeObjectFactory)
   ['{1B59ED90-B489-4E8F-928F-CA5CA4B443F8}']
    // ExistCode : methode ExistCode 
   function ExistCode(sDP_Code:WideString):WordBool;safecall;
    // ReadCode : methode ReadCode 
   function ReadCode(sDP_Code:WideString):IBODepotEmplacement;safecall;
  end;


// IBODepotEmplacementFactory : IBODepotEmplacementFactory Interface

 IBODepotEmplacementFactoryDisp = dispinterface
   ['{1B59ED90-B489-4E8F-928F-CA5CA4B443F8}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistCode : methode ExistCode 
   function ExistCode(sDP_Code:WideString):WordBool;dispid 10;
    // ReadCode : methode ReadCode 
   function ReadCode(sDP_Code:WideString):IBODepotEmplacement;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODepotEmplacement : IBODepotEmplacement Interface

 IBODepotEmplacement = interface(IBIPersistObject)
   ['{F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}']
   function Get_FactoryDepotEmplacement : IBODepotEmplacementFactory; safecall;
   function Get_Depot : IBODepot3; safecall;
   function Get_DP_Code : WideString; safecall;
   procedure Set_DP_Code(const pVal:WideString); safecall;
   function Get_DP_Intitule : WideString; safecall;
   procedure Set_DP_Intitule(const pVal:WideString); safecall;
   function Get_DP_Zone : DepotEmplZone; safecall;
   procedure Set_DP_Zone(const pVal:DepotEmplZone); safecall;
   function Get_DP_Type : DepotEmplType; safecall;
   procedure Set_DP_Type(const pVal:DepotEmplType); safecall;
    // FactoryDepotEmplacement : property FactoryDepotEmplacement 
   property FactoryDepotEmplacement:IBODepotEmplacementFactory read Get_FactoryDepotEmplacement;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot;
    // DP_Code : property DP_Code 
   property DP_Code:WideString read Get_DP_Code write Set_DP_Code;
    // DP_Intitule : property DP_Intitule 
   property DP_Intitule:WideString read Get_DP_Intitule write Set_DP_Intitule;
    // DP_Zone : property DP_Zone 
   property DP_Zone:DepotEmplZone read Get_DP_Zone write Set_DP_Zone;
    // DP_Type : property DP_Type 
   property DP_Type:DepotEmplType read Get_DP_Type write Set_DP_Type;
  end;


// IBODepotEmplacement : IBODepotEmplacement Interface

 IBODepotEmplacementDisp = dispinterface
   ['{F9E53BA9-EBAD-462E-9AAF-3B768FD8E6F1}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDepotEmplacement : property FactoryDepotEmplacement 
   property FactoryDepotEmplacement:IBODepotEmplacementFactory  readonly dispid 120;
    // Depot : property Depot 
   property Depot:IBODepot3  readonly dispid 121;
    // DP_Code : property DP_Code 
   property DP_Code:WideString dispid 122;
    // DP_Intitule : property DP_Intitule 
   property DP_Intitule:WideString dispid 123;
    // DP_Zone : property DP_Zone 
   property DP_Zone:DepotEmplZone dispid 124;
    // DP_Type : property DP_Type 
   property DP_Type:DepotEmplType dispid 125;
  end;


// IBISouche : IBISouche Interface

 IBISouche = interface(IBIPersistObject)
   ['{E323C1CD-6888-42A8-8DA2-D8B66A9819B8}']
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Domaine : DomaineType; safecall;
   function Get_IsValide : WordBool; safecall;
   procedure Set_IsValide(const pVal:WordBool); safecall;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType):WideString;safecall;
    // WriteCurrentPiece : methode WriteCurrentPiece 
   procedure WriteCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType;sVal:WideString);safecall;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Domaine : property Domaine 
   property Domaine:DomaineType read Get_Domaine;
    // IsValide : property IsValide 
   property IsValide:WordBool read Get_IsValide write Set_IsValide;
  end;


// IBISouche : IBISouche Interface

 IBISoucheDisp = dispinterface
   ['{E323C1CD-6888-42A8-8DA2-D8B66A9819B8}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType):WideString;dispid 103;
    // WriteCurrentPiece : methode WriteCurrentPiece 
   procedure WriteCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType;sVal:WideString);dispid 104;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // IsValide : property IsValide 
   property IsValide:WordBool dispid 102;
  end;


// IBIValues : IBIValues Interface

 IBIValues = interface(IDispatch)
   ['{492D8954-BF34-4EB1-A8C8-85C45454B8BF}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(vIndex:OleVariant) : OleVariant; safecall;
   procedure Set_Item(const vIndex:OleVariant; const parItem:OleVariant); safecall;
   function Get_Count : Integer; safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[vIndex:OleVariant]:OleVariant read Get_Item write Set_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// IBIValues : IBIValues Interface

 IBIValuesDisp = dispinterface
   ['{492D8954-BF34-4EB1-A8C8-85C45454B8BF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[vIndex:OleVariant]:OleVariant dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IBOCollaborateur : IBOCollaborateur Interface

 IBOCollaborateur = interface(IBIPersistObject)
   ['{358B9088-4422-436B-88D3-66ECDF3CC622}']
   function Get_FactoryCollaborateur : IBOCollaborateurFactory; safecall;
   function Get_Nom : WideString; safecall;
   procedure Set_Nom(const pVal:WideString); safecall;
   function Get_Prenom : WideString; safecall;
   procedure Set_Prenom(const pVal:WideString); safecall;
   function Get_Fonction : WideString; safecall;
   procedure Set_Fonction(const pVal:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_Service : WideString; safecall;
   procedure Set_Service(const pVal:WideString); safecall;
   function Get_Vendeur : WordBool; safecall;
   procedure Set_Vendeur(const pVal:WordBool); safecall;
   function Get_Caissier : WordBool; safecall;
   procedure Set_Caissier(const pVal:WordBool); safecall;
   function Get_DateCreation : TDateTime; safecall;
   function Get_Utilisateur : WideString; safecall;
   procedure Set_Utilisateur(const pVal:WideString); safecall;
   function Get_Acheteur : WordBool; safecall;
   procedure Set_Acheteur(const pVal:WordBool); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
   function Get_Receptionnaire : WordBool; safecall;
   procedure Set_Receptionnaire(const pVal:WordBool); safecall;
   function Get_ChargeRecouvrement : WordBool; safecall;
   procedure Set_ChargeRecouvrement(const pVal:WordBool); safecall;
   function Get_Matricule : WideString; safecall;
   procedure Set_Matricule(const pVal:WideString); safecall;
   function Get_Facebook : WideString; safecall;
   procedure Set_Facebook(const pVal:WideString); safecall;
   function Get_LinkedIn : WideString; safecall;
   procedure Set_LinkedIn(const pVal:WideString); safecall;
   function Get_Skype : WideString; safecall;
   procedure Set_Skype(const pVal:WideString); safecall;
    // FactoryCollaborateur : property FactoryCollaborateur 
   property FactoryCollaborateur:IBOCollaborateurFactory read Get_FactoryCollaborateur;
    // Nom : property Nom 
   property Nom:WideString read Get_Nom write Set_Nom;
    // Prenom : property Prenom 
   property Prenom:WideString read Get_Prenom write Set_Prenom;
    // Fonction : property Fonction 
   property Fonction:WideString read Get_Fonction write Set_Fonction;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // Service : property Service 
   property Service:WideString read Get_Service write Set_Service;
    // Vendeur : property Vendeur 
   property Vendeur:WordBool read Get_Vendeur write Set_Vendeur;
    // Caissier : property Caissier 
   property Caissier:WordBool read Get_Caissier write Set_Caissier;
    // DateCreation : property DateCreation 
   property DateCreation:TDateTime read Get_DateCreation;
    // Utilisateur : property Utilisateur 
   property Utilisateur:WideString read Get_Utilisateur write Set_Utilisateur;
    // Acheteur : property Acheteur 
   property Acheteur:WordBool read Get_Acheteur write Set_Acheteur;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // Receptionnaire : property Receptionnaire 
   property Receptionnaire:WordBool read Get_Receptionnaire write Set_Receptionnaire;
    // ChargeRecouvrement : property ChargeRecouvrement 
   property ChargeRecouvrement:WordBool read Get_ChargeRecouvrement write Set_ChargeRecouvrement;
    // Matricule : property Matricule 
   property Matricule:WideString read Get_Matricule write Set_Matricule;
    // Facebook : property Facebook 
   property Facebook:WideString read Get_Facebook write Set_Facebook;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString read Get_LinkedIn write Set_LinkedIn;
    // Skype : property Skype 
   property Skype:WideString read Get_Skype write Set_Skype;
  end;


// IBOCollaborateur : IBOCollaborateur Interface

 IBOCollaborateurDisp = dispinterface
   ['{358B9088-4422-436B-88D3-66ECDF3CC622}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryCollaborateur : property FactoryCollaborateur 
   property FactoryCollaborateur:IBOCollaborateurFactory  readonly dispid 100;
    // Nom : property Nom 
   property Nom:WideString dispid 101;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 104;
    // Service : property Service 
   property Service:WideString dispid 105;
    // Vendeur : property Vendeur 
   property Vendeur:WordBool dispid 106;
    // Caissier : property Caissier 
   property Caissier:WordBool dispid 107;
    // DateCreation : property DateCreation 
   property DateCreation:TDateTime  readonly dispid 108;
    // Utilisateur : property Utilisateur 
   property Utilisateur:WideString dispid 109;
    // Acheteur : property Acheteur 
   property Acheteur:WordBool dispid 110;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 111;
    // Receptionnaire : property Receptionnaire 
   property Receptionnaire:WordBool dispid 114;
    // ChargeRecouvrement : property ChargeRecouvrement 
   property ChargeRecouvrement:WordBool dispid 116;
    // Matricule : property Matricule 
   property Matricule:WideString dispid 117;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 118;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 119;
    // Skype : property Skype 
   property Skype:WideString dispid 120;
  end;


// IBOCollaborateurFactory : IBOCollaborateurFactory Interface

 IBOCollaborateurFactory = interface(IBITypeObjectFactory)
   ['{37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}']
    // ExistNomPrenom : methode ExistNomPrenom 
   function ExistNomPrenom(sNom:WideString;sPrenom:WideString):WordBool;safecall;
    // ReadNomPrenom : methode ReadNomPrenom 
   function ReadNomPrenom(sNom:WideString;sPrenom:WideString):IBOCollaborateur;safecall;
  end;


// IBOCollaborateurFactory : IBOCollaborateurFactory Interface

 IBOCollaborateurFactoryDisp = dispinterface
   ['{37A491F2-E6F5-47BF-B7F3-2E3CDD5C4E75}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNomPrenom : methode ExistNomPrenom 
   function ExistNomPrenom(sNom:WideString;sPrenom:WideString):WordBool;dispid 10;
    // ReadNomPrenom : methode ReadNomPrenom 
   function ReadNomPrenom(sNom:WideString;sPrenom:WideString):IBOCollaborateur;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOCompteA3 : IBOCompteA3 Interface

 IBOCompteA3 = interface(IBIPersistObject)
   ['{F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}']
   function Get_FactoryCompteA : IBOCompteAFactory3; safecall;
   function Get_Analytique : IBPAnalytique3; safecall;
   procedure Set_Analytique(const pAnalytique:IBPAnalytique3); safecall;
   function Get_CA_Num : WideString; safecall;
   procedure Set_CA_Num(const pVal:WideString); safecall;
   function Get_CA_Type : CompteAType; safecall;
   procedure Set_CA_Type(const pVal:CompteAType); safecall;
   function Get_CA_Intitule : WideString; safecall;
   procedure Set_CA_Intitule(const pVal:WideString); safecall;
   function Get_CA_Classement : WideString; safecall;
   procedure Set_CA_Classement(const pVal:WideString); safecall;
   function Get_CA_Raccourci : WideString; safecall;
   procedure Set_CA_Raccourci(const pVal:WideString); safecall;
   function Get_CA_Report : WordBool; safecall;
   procedure Set_CA_Report(const pVal:WordBool); safecall;
   function Get_Analyse : IBPAnalyse; safecall;
   procedure Set_Analyse(const pVal:IBPAnalyse); safecall;
   function Get_CA_SautLigne : Smallint; safecall;
   procedure Set_CA_SautLigne(const pVal:Smallint); safecall;
   function Get_CA_SautPage : WordBool; safecall;
   procedure Set_CA_SautPage(const pVal:WordBool); safecall;
   function Get_CA_Sommeil : WordBool; safecall;
   procedure Set_CA_Sommeil(const pVal:WordBool); safecall;
   function Get_CA_DateCreate : TDateTime; safecall;
   function Get_CA_Domaine : CompteADomaineType; safecall;
   procedure Set_CA_Domaine(const pVal:CompteADomaineType); safecall;
   function Get_CA_Achat : Double; safecall;
   procedure Set_CA_Achat(const pVal:Double); safecall;
   function Get_CA_Vente : Double; safecall;
   procedure Set_CA_Vente(const pVal:Double); safecall;
   function Get_InfoLibre : IBIValues; safecall;
   function Get_Collaborateur : IBOCollaborateur; safecall;
   procedure Set_Collaborateur(const pCollaborateur:IBOCollaborateur); safecall;
   function Get_CA_Statut : CompteAStatutType; safecall;
   procedure Set_CA_Statut(const pVal:CompteAStatutType); safecall;
   function Get_CA_DateCreationAffaire : TDateTime; safecall;
   procedure Set_CA_DateCreationAffaire(const pVal:TDateTime); safecall;
   function Get_CA_DateAcceptAffaire : TDateTime; safecall;
   procedure Set_CA_DateAcceptAffaire(const pVal:TDateTime); safecall;
   function Get_CA_DateDebutAffaire : TDateTime; safecall;
   procedure Set_CA_DateDebutAffaire(const pVal:TDateTime); safecall;
   function Get_CA_DateFinAffaire : TDateTime; safecall;
   procedure Set_CA_DateFinAffaire(const pVal:TDateTime); safecall;
   function Get_CA_ModeFacturation : CompteAModeFacturationType; safecall;
   procedure Set_CA_ModeFacturation(const pVal:CompteAModeFacturationType); safecall;
   function Get_FactoryCompteAContact : IBITypeObjectFactory; safecall;
   function Get_FactoryCompteAMedia : IBITypeObjectFactory; safecall;
    // FactoryCompteA : property FactoryCompteA 
   property FactoryCompteA:IBOCompteAFactory3 read Get_FactoryCompteA;
    // Analytique : property Analytique 
   property Analytique:IBPAnalytique3 read Get_Analytique write Set_Analytique;
    // CA_Num : property CA_Num 
   property CA_Num:WideString read Get_CA_Num write Set_CA_Num;
    // CA_Type : property CA_Type 
   property CA_Type:CompteAType read Get_CA_Type write Set_CA_Type;
    // CA_Intitule : property CA_Intitule 
   property CA_Intitule:WideString read Get_CA_Intitule write Set_CA_Intitule;
    // CA_Classement : property CA_Classement 
   property CA_Classement:WideString read Get_CA_Classement write Set_CA_Classement;
    // CA_Raccourci : property CA_Raccourci 
   property CA_Raccourci:WideString read Get_CA_Raccourci write Set_CA_Raccourci;
    // CA_Report : property CA_Report 
   property CA_Report:WordBool read Get_CA_Report write Set_CA_Report;
    // Analyse : property Analyse 
   property Analyse:IBPAnalyse read Get_Analyse write Set_Analyse;
    // CA_SautLigne : property CA_SautLigne 
   property CA_SautLigne:Smallint read Get_CA_SautLigne write Set_CA_SautLigne;
    // CA_SautPage : property CA_SautPage 
   property CA_SautPage:WordBool read Get_CA_SautPage write Set_CA_SautPage;
    // CA_Sommeil : property CA_Sommeil 
   property CA_Sommeil:WordBool read Get_CA_Sommeil write Set_CA_Sommeil;
    // CA_DateCreate : property CA_DateCreate 
   property CA_DateCreate:TDateTime read Get_CA_DateCreate;
    // CA_Domaine : property CA_Domaine 
   property CA_Domaine:CompteADomaineType read Get_CA_Domaine write Set_CA_Domaine;
    // CA_Achat : property CA_Achat 
   property CA_Achat:Double read Get_CA_Achat write Set_CA_Achat;
    // CA_Vente : property CA_Vente 
   property CA_Vente:Double read Get_CA_Vente write Set_CA_Vente;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // Collaborateur : property Chargé affaire 
   property Collaborateur:IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    // CA_Statut : property CA_Statut 
   property CA_Statut:CompteAStatutType read Get_CA_Statut write Set_CA_Statut;
    // CA_DateCreationAffaire : property Date de création affaire 
   property CA_DateCreationAffaire:TDateTime read Get_CA_DateCreationAffaire write Set_CA_DateCreationAffaire;
    // CA_DateAcceptAffaire : property Date acceptation affaire 
   property CA_DateAcceptAffaire:TDateTime read Get_CA_DateAcceptAffaire write Set_CA_DateAcceptAffaire;
    // CA_DateDebutAffaire : property Date début affaire 
   property CA_DateDebutAffaire:TDateTime read Get_CA_DateDebutAffaire write Set_CA_DateDebutAffaire;
    // CA_DateFinAffaire : property Date de fin affaire 
   property CA_DateFinAffaire:TDateTime read Get_CA_DateFinAffaire write Set_CA_DateFinAffaire;
    // CA_ModeFacturation : property CA_ModeFacturation 
   property CA_ModeFacturation:CompteAModeFacturationType read Get_CA_ModeFacturation write Set_CA_ModeFacturation;
    // FactoryCompteAContact : property FactoryCompteAContact 
   property FactoryCompteAContact:IBITypeObjectFactory read Get_FactoryCompteAContact;
    // FactoryCompteAMedia : property FactoryCompteAMedia 
   property FactoryCompteAMedia:IBITypeObjectFactory read Get_FactoryCompteAMedia;
  end;


// IBOCompteA3 : IBOCompteA3 Interface

 IBOCompteA3Disp = dispinterface
   ['{F4A12389-C6F0-4A1A-8F6F-17D1816C7E26}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryCompteA : property FactoryCompteA 
   property FactoryCompteA:IBOCompteAFactory3  readonly dispid 100;
    // Analytique : property Analytique 
   property Analytique:IBPAnalytique3 dispid 101;
    // CA_Num : property CA_Num 
   property CA_Num:WideString dispid 102;
    // CA_Type : property CA_Type 
   property CA_Type:CompteAType dispid 103;
    // CA_Intitule : property CA_Intitule 
   property CA_Intitule:WideString dispid 104;
    // CA_Classement : property CA_Classement 
   property CA_Classement:WideString dispid 105;
    // CA_Raccourci : property CA_Raccourci 
   property CA_Raccourci:WideString dispid 106;
    // CA_Report : property CA_Report 
   property CA_Report:WordBool dispid 107;
    // Analyse : property Analyse 
   property Analyse:IBPAnalyse dispid 108;
    // CA_SautLigne : property CA_SautLigne 
   property CA_SautLigne:Smallint dispid 109;
    // CA_SautPage : property CA_SautPage 
   property CA_SautPage:WordBool dispid 110;
    // CA_Sommeil : property CA_Sommeil 
   property CA_Sommeil:WordBool dispid 111;
    // CA_DateCreate : property CA_DateCreate 
   property CA_DateCreate:TDateTime  readonly dispid 112;
    // CA_Domaine : property CA_Domaine 
   property CA_Domaine:CompteADomaineType dispid 113;
    // CA_Achat : property CA_Achat 
   property CA_Achat:Double dispid 114;
    // CA_Vente : property CA_Vente 
   property CA_Vente:Double dispid 115;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 116;
    // Collaborateur : property Chargé affaire 
   property Collaborateur:IBOCollaborateur dispid 117;
    // CA_Statut : property CA_Statut 
   property CA_Statut:CompteAStatutType dispid 118;
    // CA_DateCreationAffaire : property Date de création affaire 
   property CA_DateCreationAffaire:TDateTime dispid 119;
    // CA_DateAcceptAffaire : property Date acceptation affaire 
   property CA_DateAcceptAffaire:TDateTime dispid 120;
    // CA_DateDebutAffaire : property Date début affaire 
   property CA_DateDebutAffaire:TDateTime dispid 121;
    // CA_DateFinAffaire : property Date de fin affaire 
   property CA_DateFinAffaire:TDateTime dispid 122;
    // CA_ModeFacturation : property CA_ModeFacturation 
   property CA_ModeFacturation:CompteAModeFacturationType dispid 123;
    // FactoryCompteAContact : property FactoryCompteAContact 
   property FactoryCompteAContact:IBITypeObjectFactory  readonly dispid 124;
    // FactoryCompteAMedia : property FactoryCompteAMedia 
   property FactoryCompteAMedia:IBITypeObjectFactory  readonly dispid 125;
  end;


// IBOCompteAFactory3 : IBOCompteAFactory3 Interface

 IBOCompteAFactory3 = interface(IBITypeObjectFactory)
   ['{2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}']
    // ExistNumero : methode ExistNumero 
   function ExistNumero(pAnalytique:IBPAnalytique3;sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(pAnalytique:IBPAnalytique3;sNum:WideString):IBOCompteA3;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;safecall;
    // InfoLibreFields : methode InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBOCompteAFactory3 : IBOCompteAFactory3 Interface

 IBOCompteAFactory3Disp = dispinterface
   ['{2CE84C92-B46A-4AEB-9D9B-BFA7D0C6D2C5}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(pAnalytique:IBPAnalytique3;sNum:WideString):WordBool;dispid 10;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(pAnalytique:IBPAnalytique3;sNum:WideString):IBOCompteA3;dispid 11;
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : methode InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 12;
  end;


// IBPAnalytique3 : IBPAnalytique3 Interface

 IBPAnalytique3 = interface(IBIPersistObject)
   ['{67899AAF-D6B5-43DE-820C-630E767F30FB}']
   function Get_FactoryAnalytique : IBPAnalytiqueFactory3; safecall;
   function Get_A_Intitule : WideString; safecall;
   procedure Set_A_Intitule(const pVal:WideString); safecall;
   function Get_SectionAttente : IBOCompteA3; safecall;
   procedure Set_SectionAttente(const pCompteA:IBOCompteA3); safecall;
   function Get_A_Obligatoire : WordBool; safecall;
   procedure Set_A_Obligatoire(const pVal:WordBool); safecall;
   function Get_Rupture(sElt:Smallint) : IBPAnalytiqueRupture; safecall;
   function Get_IsStructured : WordBool; safecall;
    // FactoryAnalytique : property FactoryAnalytique 
   property FactoryAnalytique:IBPAnalytiqueFactory3 read Get_FactoryAnalytique;
    // A_Intitule : property A_Intitule 
   property A_Intitule:WideString read Get_A_Intitule write Set_A_Intitule;
    // SectionAttente : property SectionAttente 
   property SectionAttente:IBOCompteA3 read Get_SectionAttente write Set_SectionAttente;
    // A_Obligatoire : property A_Obligatoire 
   property A_Obligatoire:WordBool read Get_A_Obligatoire write Set_A_Obligatoire;
    // Rupture : property Rupture 
   property Rupture[sElt:Smallint]:IBPAnalytiqueRupture read Get_Rupture;
    // IsStructured : property IsStructured 
   property IsStructured:WordBool read Get_IsStructured;
  end;


// IBPAnalytique3 : IBPAnalytique3 Interface

 IBPAnalytique3Disp = dispinterface
   ['{67899AAF-D6B5-43DE-820C-630E767F30FB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryAnalytique : property FactoryAnalytique 
   property FactoryAnalytique:IBPAnalytiqueFactory3  readonly dispid 100;
    // A_Intitule : property A_Intitule 
   property A_Intitule:WideString dispid 101;
    // SectionAttente : property SectionAttente 
   property SectionAttente:IBOCompteA3 dispid 102;
    // A_Obligatoire : property A_Obligatoire 
   property A_Obligatoire:WordBool dispid 103;
    // Rupture : property Rupture 
   property Rupture[sElt:Smallint]:IBPAnalytiqueRupture  readonly dispid 104;
    // IsStructured : property IsStructured 
   property IsStructured:WordBool  readonly dispid 105;
  end;


// IBPAnalytiqueFactory3 : IBPAnalytiqueFactory3 Interface

 IBPAnalytiqueFactory3 = interface(IBITypeObjectFactory)
   ['{E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPAnalytique3;safecall;
  end;


// IBPAnalytiqueFactory3 : IBPAnalytiqueFactory3 Interface

 IBPAnalytiqueFactory3Disp = dispinterface
   ['{E0088168-DC4B-4062-BBE5-4FAFCDF25C0A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPAnalytique3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPAnalyse : IBPAnalyse Interface

 IBPAnalyse = interface(IBIPersistObject)
   ['{3723FCFA-5384-4666-BAF8-4767E202D581}']
   function Get_FactoryAnalyse : IBPAnalyseFactory; safecall;
   function Get_A_Intitule : WideString; safecall;
   procedure Set_A_Intitule(const pVal:WideString); safecall;
    // FactoryAnalyse : property FactoryAnalyse 
   property FactoryAnalyse:IBPAnalyseFactory read Get_FactoryAnalyse;
    // A_Intitule : property A_Intitule 
   property A_Intitule:WideString read Get_A_Intitule write Set_A_Intitule;
  end;


// IBPAnalyse : IBPAnalyse Interface

 IBPAnalyseDisp = dispinterface
   ['{3723FCFA-5384-4666-BAF8-4767E202D581}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryAnalyse : property FactoryAnalyse 
   property FactoryAnalyse:IBPAnalyseFactory  readonly dispid 100;
    // A_Intitule : property A_Intitule 
   property A_Intitule:WideString dispid 101;
  end;


// IBPAnalyseFactory : IBPAnalyseFactory Interface

 IBPAnalyseFactory = interface(IBITypeObjectFactory)
   ['{C16CDB84-022B-4471-90EF-689793E6A560}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPAnalyse;safecall;
  end;


// IBPAnalyseFactory : IBPAnalyseFactory Interface

 IBPAnalyseFactoryDisp = dispinterface
   ['{C16CDB84-022B-4471-90EF-689793E6A560}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPAnalyse;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODocumentLigne3 : IBODocumentLigne3 Interface

 IBODocumentLigne3 = interface(IBIPersistObject)
   ['{7D3D9D90-6A4D-4174-92BA-2BEA034A9095}']
   function Get_Document : IBODocument3; safecall;
   function Get_FactoryDocumentLigne : IBODocumentLigneFactory; safecall;
   function Get_DO_Domaine : DomaineType; safecall;
   function Get_DO_Type : DocumentType; safecall;
   function Get_DO_Ref : WideString; safecall;
   procedure Set_DO_Ref(const pVal:WideString); safecall;
   function Get_Article : IBOArticle3; safecall;
   function Get_DL_Design : WideString; safecall;
   procedure Set_DL_Design(const pVal:WideString); safecall;
   function Get_DL_Qte : Double; safecall;
   procedure Set_DL_Qte(const pVal:Double); safecall;
   function Get_DL_PoidsNet : Double; safecall;
   procedure Set_DL_PoidsNet(const pVal:Double); safecall;
   function Get_DL_PoidsBrut : Double; safecall;
   procedure Set_DL_PoidsBrut(const pVal:Double); safecall;
   function Get_DL_PrixUnitaire : Double; safecall;
   procedure Set_DL_PrixUnitaire(const pVal:Double); safecall;
   function Get_ArticleGammeEnum1 : IBOArticleGammeEnum3; safecall;
   function Get_ArticleGammeEnum2 : IBOArticleGammeEnum3; safecall;
   function Get_DL_PrixRU : Double; safecall;
   procedure Set_DL_PrixRU(const pVal:Double); safecall;
   function Get_DL_CMUP : Double; safecall;
   procedure Set_DL_CMUP(const pVal:Double); safecall;
   function Get_DL_MvtStock : DocumentLigneMvtStockType; safecall;
   function Get_EU_Enumere : WideString; safecall;
   procedure Set_EU_Enumere(const pVal:WideString); safecall;
   function Get_EU_Qte : Double; safecall;
   procedure Set_EU_Qte(const pVal:Double); safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pDepot:IBODepot3); safecall;
   function Get_DL_MontantHT : Double; safecall;
   function Get_LS_NoSerie : WideString; safecall;
   procedure Set_LS_NoSerie(const pVal:WideString); safecall;
   function Get_LS_Peremption : TDateTime; safecall;
   procedure Set_LS_Peremption(const pVal:TDateTime); safecall;
   function Get_LS_Fabrication : TDateTime; safecall;
   procedure Set_LS_Fabrication(const pVal:TDateTime); safecall;
   function Get_Valorisee : WordBool; safecall;
   procedure Set_Valorisee(const pVal:WordBool); safecall;
   function Get_DL_FactPoids : WordBool; safecall;
   function Get_InfoLibre : IBIValues; safecall;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);safecall;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);safecall;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);safecall;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);safecall;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);safecall;
   function Get_FactoryDocumentLigneEmplacement : IBITypeObjectFactory; safecall;
   function Get_Lot : IBOArticleDepotLot; safecall;
   procedure Set_Lot(const pLot:IBOArticleDepotLot); safecall;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);safecall;
   function Get_Collaborateur : IBOCollaborateur; safecall;
   procedure Set_Collaborateur(const pCollaborateur:IBOCollaborateur); safecall;
   function Get_TxtComplementaire : WideString; safecall;
   procedure Set_TxtComplementaire(const pVal:WideString); safecall;
   function Get_Ressource : IBIRessource; safecall;
   procedure Set_Ressource(const pRessource:IBIRessource); safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pCompteA:IBOCompteA3); safecall;
   function Get_FactoryDocumentLigneLienCM : IBITypeObjectFactory; safecall;
   function Get_DO_Date : TDateTime; safecall;
   procedure Set_DO_Date(const pVal:TDateTime); safecall;
   function Get_LS_ComplementOut : WideString; safecall;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;safecall;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;safecall;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);safecall;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);safecall;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);safecall;
   function Get_DL_PieceOFProd : Integer; safecall;
   procedure Set_DL_PieceOFProd(const pVal:Integer); safecall;
   function Get_DL_Operation : WideString; safecall;
   procedure Set_DL_Operation(const pVal:WideString); safecall;
   function Get_DefaultCMUP : Double; safecall;
    // Document : property Document 
   property Document:IBODocument3 read Get_Document;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory read Get_FactoryDocumentLigne;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType read Get_DO_Domaine;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType read Get_DO_Type;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString read Get_DO_Ref write Set_DO_Ref;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // DL_Design : property DL_Design 
   property DL_Design:WideString read Get_DL_Design write Set_DL_Design;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double read Get_DL_Qte write Set_DL_Qte;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double read Get_DL_PoidsNet write Set_DL_PoidsNet;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double read Get_DL_PoidsBrut write Set_DL_PoidsBrut;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double read Get_DL_PrixUnitaire write Set_DL_PrixUnitaire;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleGammeEnum1;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleGammeEnum2;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double read Get_DL_PrixRU write Set_DL_PrixRU;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double read Get_DL_CMUP write Set_DL_CMUP;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType read Get_DL_MvtStock;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString read Get_EU_Enumere write Set_EU_Enumere;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double read Get_EU_Qte write Set_EU_Qte;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double read Get_DL_MontantHT;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString read Get_LS_NoSerie write Set_LS_NoSerie;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime read Get_LS_Peremption write Set_LS_Peremption;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime read Get_LS_Fabrication write Set_LS_Fabrication;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool read Get_Valorisee write Set_Valorisee;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool read Get_DL_FactPoids;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory read Get_FactoryDocumentLigneEmplacement;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot read Get_Lot write Set_Lot;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString read Get_TxtComplementaire write Set_TxtComplementaire;
    // Ressource : property Ressource 
   property Ressource:IBIRessource read Get_Ressource write Set_Ressource;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory read Get_FactoryDocumentLigneLienCM;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime read Get_DO_Date write Set_DO_Date;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString read Get_LS_ComplementOut;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer read Get_DL_PieceOFProd write Set_DL_PieceOFProd;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString read Get_DL_Operation write Set_DL_Operation;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double read Get_DefaultCMUP;
  end;


// IBODocumentLigne3 : IBODocumentLigne3 Interface

 IBODocumentLigne3Disp = dispinterface
   ['{7D3D9D90-6A4D-4174-92BA-2BEA034A9095}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);dispid 126;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);dispid 127;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);dispid 128;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);dispid 129;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);dispid 130;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);dispid 134;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;dispid 141;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;dispid 142;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);dispid 143;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);dispid 144;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);dispid 145;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 101;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 131;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 102;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 103;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 104;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 105;
    // DL_Design : property DL_Design 
   property DL_Design:WideString dispid 106;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 107;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double dispid 108;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double dispid 109;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double dispid 110;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 111;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 112;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double dispid 113;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double dispid 114;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType  readonly dispid 115;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString dispid 116;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double dispid 117;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 118;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double  readonly dispid 119;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString dispid 120;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime dispid 121;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime dispid 122;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool dispid 123;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool  readonly dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 125;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 132;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot dispid 133;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 135;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString dispid 136;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 137;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 216;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory  readonly dispid 138;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 139;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString  readonly dispid 140;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer dispid 146;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString dispid 147;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double  readonly dispid 148;
  end;


// IBOArticle3 : IBOArticle3 Interface

 IBOArticle3 = interface(IBIPersistObject)
   ['{E05DF99C-5D91-4A03-B9A1-5C87A92D8298}']
   function Get_FactoryArticle : IBOArticleFactory3; safecall;
   function Get_FactoryArticleTarifFournisseur : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleTarifClient : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleTarifCategorie : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleMedia : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleGlossaire : IBOArticleGlossaireFactory2; safecall;
   function Get_FactoryArticleParamCompta : IBOArticleParamComptaFactory3; safecall;
   function Get_FactoryArticleDepot : IBOArticleDepotFactory; safecall;
   function Get_FactoryArticleGammeEnum1 : IBOArticleGammeEnumFactory; safecall;
   function Get_FactoryArticleGammeEnum2 : IBOArticleGammeEnumFactory; safecall;
   function Get_FactoryArticleNomenclature : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleCond : IBOArticleCondFactory; safecall;
   function Get_AR_Ref : WideString; safecall;
   procedure Set_AR_Ref(const pVal:WideString); safecall;
   function Get_AR_Design : WideString; safecall;
   procedure Set_AR_Design(const pVal:WideString); safecall;
   function Get_Famille : IBOFamille3; safecall;
   procedure Set_Famille(const pFamille:IBOFamille3); safecall;
   function Get_ArticleSubstitution : IBOArticle3; safecall;
   procedure Set_ArticleSubstitution(const pArticle:IBOArticle3); safecall;
   function Get_AR_Raccourci : WideString; safecall;
   procedure Set_AR_Raccourci(const pVal:WideString); safecall;
   function Get_AR_Garantie : Smallint; safecall;
   procedure Set_AR_Garantie(const pVal:Smallint); safecall;
   function Get_AR_UnitePoids : UnitePoidsType; safecall;
   procedure Set_AR_UnitePoids(const pVal:UnitePoidsType); safecall;
   function Get_AR_PoidsNet : Double; safecall;
   procedure Set_AR_PoidsNet(const pVal:Double); safecall;
   function Get_AR_PoidsBrut : Double; safecall;
   procedure Set_AR_PoidsBrut(const pVal:Double); safecall;
   function Get_Unite : IBPUnite; safecall;
   procedure Set_Unite(const pUnite:IBPUnite); safecall;
   function Get_AR_PrixAchat : Double; safecall;
   procedure Set_AR_PrixAchat(const pVal:Double); safecall;
   function Get_AR_Coef : Double; safecall;
   procedure Set_AR_Coef(const pVal:Double); safecall;
   function Get_AR_PrixVen : Double; safecall;
   procedure Set_AR_PrixVen(const pVal:Double); safecall;
   function Get_AR_PrixTTC : WordBool; safecall;
   procedure Set_AR_PrixTTC(const pVal:WordBool); safecall;
   function Get_Gamme1 : IBPGamme; safecall;
   procedure Set_Gamme1(const pVal:IBPGamme); safecall;
   function Get_Gamme2 : IBPGamme; safecall;
   procedure Set_Gamme2(const pVal:IBPGamme); safecall;
   function Get_AR_SuiviStock : SuiviStockType; safecall;
   procedure Set_AR_SuiviStock(const pVal:SuiviStockType); safecall;
   function Get_AR_Nomencl : NomenclatureType; safecall;
   procedure Set_AR_Nomencl(const pVal:NomenclatureType); safecall;
   function Get_AR_Stat(sVal:Smallint) : WideString; safecall;
   procedure Set_AR_Stat(const sVal:Smallint; const parAR_Stat:WideString); safecall;
   function Get_AR_Escompte : WordBool; safecall;
   procedure Set_AR_Escompte(const pVal:WordBool); safecall;
   function Get_AR_Delai : Smallint; safecall;
   procedure Set_AR_Delai(const pVal:Smallint); safecall;
   function Get_AR_HorsStat : WordBool; safecall;
   procedure Set_AR_HorsStat(const pVal:WordBool); safecall;
   function Get_AR_VteDebit : WordBool; safecall;
   procedure Set_AR_VteDebit(const pVal:WordBool); safecall;
   function Get_AR_NotImp : WordBool; safecall;
   procedure Set_AR_NotImp(const pVal:WordBool); safecall;
   function Get_AR_Sommeil : WordBool; safecall;
   procedure Set_AR_Sommeil(const pVal:WordBool); safecall;
   function Get_AR_Langue1 : WideString; safecall;
   procedure Set_AR_Langue1(const pVal:WideString); safecall;
   function Get_AR_Langue2 : WideString; safecall;
   procedure Set_AR_Langue2(const pVal:WideString); safecall;
   function Get_AR_CodeBarre : WideString; safecall;
   procedure Set_AR_CodeBarre(const pVal:WideString); safecall;
   function Get_AR_CodeFiscal : WideString; safecall;
   procedure Set_AR_CodeFiscal(const pVal:WideString); safecall;
   function Get_AR_Pays : WideString; safecall;
   procedure Set_AR_Pays(const pVal:WideString); safecall;
   function Get_AR_Frais : IFrais2; safecall;
   procedure Set_AR_Frais(const pFrais:IFrais2); safecall;
   function Get_Conditionnement : IBPConditionnement; safecall;
   procedure Set_Conditionnement(const pConditionnement:IBPConditionnement); safecall;
   function Get_AR_PUNet : Double; safecall;
   procedure Set_AR_PUNet(const pVal:Double); safecall;
   function Get_AR_Contremarque : WordBool; safecall;
   procedure Set_AR_Contremarque(const pVal:WordBool); safecall;
   function Get_AR_FactPoids : WordBool; safecall;
   procedure Set_AR_FactPoids(const pVal:WordBool); safecall;
   function Get_AR_FactForfait : WordBool; safecall;
   procedure Set_AR_FactForfait(const pVal:WordBool); safecall;
   function Get_AR_DateCreation : TDateTime; safecall;
   function Get_AR_Publie : WordBool; safecall;
   procedure Set_AR_Publie(const pVal:WordBool); safecall;
   function Get_AR_DateModif : TDateTime; safecall;
   function Get_AR_Photo : WideString; safecall;
   procedure Set_AR_Photo(const pVal:WideString); safecall;
   function Get_FournisseurPrincipal : IBOArticleTarifFournisseur3; safecall;
   procedure Set_FournisseurPrincipal(const pFournisseur:IBOArticleTarifFournisseur3); safecall;
   function Get_ArticleDepotPrincipal : IBOArticleDepot3; safecall;
   procedure Set_ArticleDepotPrincipal(const pDepot:IBOArticleDepot3); safecall;
    // CA_TTC : methode CA_TTC 
   function CA_TTC(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // CA_HTBrut : methode CA_HTBrut 
   function CA_HTBrut(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // CA_HTNet : methode CA_HTNet 
   function CA_HTNet(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TauxRemiseMoyen : methode TauxRemiseMoyen 
   function TauxRemiseMoyen(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalCoutRevient : methode TotalCoutRevient 
   function TotalCoutRevient(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalMarge : methode TotalMarge 
   function TotalMarge(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalQtes : methode TotalQtes 
   function TotalQtes(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalQtesColisees : methode TotalQtesColisees 
   function TotalQtesColisees(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalPoidsNet : methode TotalPoidsNet 
   function TotalPoidsNet(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalPoidsBrut : methode TotalPoidsBrut 
   function TotalPoidsBrut(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TarifVente : methode TarifVente 
   function TarifVente:ITarifVente2;safecall;
    // TarifVenteCategorie : methode TarifVenteCategorie 
   function TarifVenteCategorie(pCategorieTarif:IBPCategorieTarif;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteCategorieMonoGamme : methode TarifVenteCategorieMonoGamme 
   function TarifVenteCategorieMonoGamme(pCategorieTarif:IBPCategorieTarif;pEnum:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteCategorieDoubleGamme : methode TarifVenteCategorieDoubleGamme 
   function TarifVenteCategorieDoubleGamme(pCategorieTarif:IBPCategorieTarif;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteCategorieCond : methode TarifVenteCategorieCond 
   function TarifVenteCategorieCond(pCategorieTarif:IBPCategorieTarif;pConditionnement:IBOArticleCond3;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteTiers : methode TarifVenteTiers 
   function TarifVenteTiers(pClient:IBOClient3;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteTiersMonoGamme : methode TarifVenteTiersMonoGamme 
   function TarifVenteTiersMonoGamme(pClient:IBOClient3;pEnum:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteTiersDoubleGamme : methode TarifVenteTiersDoubleGamme 
   function TarifVenteTiersDoubleGamme(pClient:IBOClient3;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;safecall;
    // TarifVenteTiersCond : methode TarifVenteTiersCond 
   function TarifVenteTiersCond(pClient:IBOClient3;pConditionnement:IBOArticleCond3;dQtes:Double):ITarifVente2;safecall;
    // TarifAchat : methode TarifAchat 
   function TarifAchat:ITarifAchat2;safecall;
    // TarifAchatMonoGamme : methode TarifAchatMonoGamme 
   function TarifAchatMonoGamme(pEnum:IBOArticleGammeEnum3):ITarifAchat2;safecall;
    // TarifAchatDoubleGamme : methode TarifAchatDoubleGamme 
   function TarifAchatDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):ITarifAchat2;safecall;
    // TarifAchatTiers : methode TarifAchatTiers 
   function TarifAchatTiers(pFournisseur:IBOFournisseur3;dQtes:Double):ITarifAchat2;safecall;
    // TarifAchatTiersMonoGamme : methode TarifAchatTiersMonoGamme 
   function TarifAchatTiersMonoGamme(pFournisseur:IBOFournisseur3;pEnum:IBOArticleGammeEnum3;dQtes:Double):ITarifAchat2;safecall;
    // TarifAchatTiersDoubleGamme : methode TarifAchatTiersDoubleGamme 
   function TarifAchatTiersDoubleGamme(pFournisseur:IBOFournisseur3;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;dQtes:Double):ITarifAchat2;safecall;
    // StockValeur : methode StockValeur 
   function StockValeur(DateStock:TDateTime):Double;safecall;
    // StockValeurMonoGamme : methode StockValeurMonoGamme 
   function StockValeurMonoGamme(DateStock:TDateTime;pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockValeurDoubleGamme : methode StockValeurDoubleGamme 
   function StockValeurDoubleGamme(DateStock:TDateTime;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;safecall;
    // StockQteMonoGamme : methode StockQteMonoGamme 
   function StockQteMonoGamme(DateStock:TDateTime;pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockQteDoubleGamme : methode StockQteDoubleGamme 
   function StockQteDoubleGamme(DateStock:TDateTime;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockReel : methode StockReel 
   function StockReel:Double;safecall;
    // StockReelMonoGamme : methode StockReelMonoGamme 
   function StockReelMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockReelDoubleGamme : methode StockReelDoubleGamme 
   function StockReelDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockCommande : methode StockCommande 
   function StockCommande:Double;safecall;
    // StockCommandeMonoGamme : methode StockCommandeMonoGamme 
   function StockCommandeMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockCommandeDoubleGamme : methode StockCommandeDoubleGamme 
   function StockCommandeDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockReserve : methode StockReserve 
   function StockReserve:Double;safecall;
    // StockReserveMonoGamme : methode StockReserveMonoGamme 
   function StockReserveMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockReserveDoubleGamme : methode StockReserveDoubleGamme 
   function StockReserveDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;safecall;
    // StockATermeMonoGamme : methode StockATermeMonoGamme 
   function StockATermeMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockATermeDoubleGamme : methode StockATermeDoubleGamme 
   function StockATermeDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;safecall;
    // StockPrepareMonoGamme : methode StockPrepareMonoGamme 
   function StockPrepareMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockPrepareDoubleGamme : methode StockPrepareDoubleGamme 
   function StockPrepareDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockReserveContremarque : methode StockReserveContremarque 
   function StockReserveContremarque:Double;safecall;
    // StockReserveContremarqueMonoGamme : methode StockReserveContremarqueMonoGamme 
   function StockReserveContremarqueMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockReserveContremarqueDoubleGamme : methode StockReserveContremarqueDoubleGamme 
   function StockReserveContremarqueDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockCommandeContremarque : methode StockCommandeContremarque 
   function StockCommandeContremarque:Double;safecall;
    // StockCommandeContremarqueMonoGamme : methode StockCommandeContremarqueMonoGamme 
   function StockCommandeContremarqueMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockCommandeContremarqueDoubleGamme : methode StockCommandeContremarqueDoubleGamme 
   function StockCommandeContremarqueDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;safecall;
    // StockDispoMonoGamme : methode StockDispoMonoGamme 
   function StockDispoMonoGamme(pEnum:IBOArticleGammeEnum3):Double;safecall;
    // StockDispoDoubleGamme : methode StockDispoDoubleGamme 
   function StockDispoDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;safecall;
   function Get_ModeleTousDomaine : IBOModele2; safecall;
   procedure Set_ModeleTousDomaine(const pObject:IBOModele2); safecall;
   function Get_ModeleAchat : IBOModele2; safecall;
   procedure Set_ModeleAchat(const pObject:IBOModele2); safecall;
   function Get_ModeleVente : IBOModele2; safecall;
   procedure Set_ModeleVente(const pObject:IBOModele2); safecall;
   function Get_ModeleStock : IBOModele2; safecall;
   procedure Set_ModeleStock(const pObject:IBOModele2); safecall;
   function Get_ModeleComptoir : IBOModele2; safecall;
   procedure Set_ModeleComptoir(const pObject:IBOModele2); safecall;
   function Get_ModeleInterne : IBOModele2; safecall;
   procedure Set_ModeleInterne(const pObject:IBOModele2); safecall;
   function Get_AR_CoutStd : Double; safecall;
   procedure Set_AR_CoutStd(const pVal:Double); safecall;
   function Get_AR_QteComp : Double; safecall;
   procedure Set_AR_QteComp(const pVal:Double); safecall;
   function Get_AR_QteOperatoire : Double; safecall;
   procedure Set_AR_QteOperatoire(const pVal:Double); safecall;
   function Get_InfoLibre : IBIValues; safecall;
   function Get_ConditionnementPrincipal : IBOArticleCond3; safecall;
   procedure Set_ConditionnementPrincipal(const pArtCond:IBOArticleCond3); safecall;
   function Get_ConditionnementAffichage : IBOArticleCond3; safecall;
   procedure Set_ConditionnementAffichage(const pArtCond:IBOArticleCond3); safecall;
   function Get_AR_Prevision : WordBool; safecall;
   procedure Set_AR_Prevision(const pVal:WordBool); safecall;
   function Get_Catalogue : IBPProduit2; safecall;
   procedure Set_Catalogue(const pProduit:IBPProduit2); safecall;
   function Get_AR_Type : ArticleType; safecall;
   procedure Set_AR_Type(const pVal:ArticleType); safecall;
   function Get_RessourceDefault : IBIRessource; safecall;
   procedure Set_RessourceDefault(const pRessource:IBIRessource); safecall;
   function Get_FactoryArticleRessource : IBOArticleRessourceFactory; safecall;
   function Get_AR_EdiCode : WideString; safecall;
   procedure Set_AR_EdiCode(const pVal:WideString); safecall;
   function Get_AR_Nature : FamilleNatureType; safecall;
   procedure Set_AR_Nature(const pVal:FamilleNatureType); safecall;
   function Get_AR_DelaiFabrication : Smallint; safecall;
   procedure Set_AR_DelaiFabrication(const pVal:Smallint); safecall;
   function Get_AR_NbColis : Smallint; safecall;
   procedure Set_AR_NbColis(const pVal:Smallint); safecall;
   function Get_AR_DelaiPeremption : Smallint; safecall;
   procedure Set_AR_DelaiPeremption(const pVal:Smallint); safecall;
   function Get_AR_DelaiSecurite : Smallint; safecall;
   procedure Set_AR_DelaiSecurite(const pVal:Smallint); safecall;
   function Get_AR_SousTraitance : WordBool; safecall;
   procedure Set_AR_SousTraitance(const pVal:WordBool); safecall;
   function Get_AR_Fictif : WordBool; safecall;
   procedure Set_AR_Fictif(const pVal:WordBool); safecall;
   function Get_AR_TypeLancement : LancementType; safecall;
   procedure Set_AR_TypeLancement(const pVal:LancementType); safecall;
   function Get_AR_Criticite : FamilleCriticiteType; safecall;
   procedure Set_AR_Criticite(const pVal:FamilleCriticiteType); safecall;
   function Get_AR_Cycle : CycleType; safecall;
   procedure Set_AR_Cycle(const pVal:CycleType); safecall;
    // FactoryArticle : property FactoryArticle 
   property FactoryArticle:IBOArticleFactory3 read Get_FactoryArticle;
    // FactoryArticleTarifFournisseur : property FactoryArticleTarifFournisseur 
   property FactoryArticleTarifFournisseur:IBITypeObjectFactory read Get_FactoryArticleTarifFournisseur;
    // FactoryArticleTarifClient : property FactoryArticleTarifClient 
   property FactoryArticleTarifClient:IBITypeObjectFactory read Get_FactoryArticleTarifClient;
    // FactoryArticleTarifCategorie : property FactoryArticleTarifCategorie 
   property FactoryArticleTarifCategorie:IBITypeObjectFactory read Get_FactoryArticleTarifCategorie;
    // FactoryArticleMedia : property FactoryArticleMedia 
   property FactoryArticleMedia:IBITypeObjectFactory read Get_FactoryArticleMedia;
    // FactoryArticleGlossaire : property FactoryArticleGlossaire 
   property FactoryArticleGlossaire:IBOArticleGlossaireFactory2 read Get_FactoryArticleGlossaire;
    // FactoryArticleParamCompta : property FactoryArticleParamCompta 
   property FactoryArticleParamCompta:IBOArticleParamComptaFactory3 read Get_FactoryArticleParamCompta;
    // FactoryArticleDepot : property FactoryArticleDepot 
   property FactoryArticleDepot:IBOArticleDepotFactory read Get_FactoryArticleDepot;
    // FactoryArticleGammeEnum1 : property FactoryArticleGammeEnum1 
   property FactoryArticleGammeEnum1:IBOArticleGammeEnumFactory read Get_FactoryArticleGammeEnum1;
    // FactoryArticleGammeEnum2 : property FactoryArticleGammeEnum2 
   property FactoryArticleGammeEnum2:IBOArticleGammeEnumFactory read Get_FactoryArticleGammeEnum2;
    // FactoryArticleNomenclature : property FactoryArticleNomenclature 
   property FactoryArticleNomenclature:IBITypeObjectFactory read Get_FactoryArticleNomenclature;
    // FactoryArticleCond : property FactoryArticleCond 
   property FactoryArticleCond:IBOArticleCondFactory read Get_FactoryArticleCond;
    // AR_Ref : property AR_Ref 
   property AR_Ref:WideString read Get_AR_Ref write Set_AR_Ref;
    // AR_Design : property AR_Design 
   property AR_Design:WideString read Get_AR_Design write Set_AR_Design;
    // Famille : property Famille 
   property Famille:IBOFamille3 read Get_Famille write Set_Famille;
    // ArticleSubstitution : property ArticleSubstitution 
   property ArticleSubstitution:IBOArticle3 read Get_ArticleSubstitution write Set_ArticleSubstitution;
    // AR_Raccourci : property AR_Raccourci 
   property AR_Raccourci:WideString read Get_AR_Raccourci write Set_AR_Raccourci;
    // AR_Garantie : property AR_Garantie 
   property AR_Garantie:Smallint read Get_AR_Garantie write Set_AR_Garantie;
    // AR_UnitePoids : property AR_UnitePoids 
   property AR_UnitePoids:UnitePoidsType read Get_AR_UnitePoids write Set_AR_UnitePoids;
    // AR_PoidsNet : property AR_PoidsNet 
   property AR_PoidsNet:Double read Get_AR_PoidsNet write Set_AR_PoidsNet;
    // AR_PoidsBrut : property AR_PoidsBrut 
   property AR_PoidsBrut:Double read Get_AR_PoidsBrut write Set_AR_PoidsBrut;
    // Unite : property Unite 
   property Unite:IBPUnite read Get_Unite write Set_Unite;
    // AR_PrixAchat : property AR_PrixAchat 
   property AR_PrixAchat:Double read Get_AR_PrixAchat write Set_AR_PrixAchat;
    // AR_Coef : property AR_Coef 
   property AR_Coef:Double read Get_AR_Coef write Set_AR_Coef;
    // AR_PrixVen : property AR_PrixVen 
   property AR_PrixVen:Double read Get_AR_PrixVen write Set_AR_PrixVen;
    // AR_PrixTTC : property AR_PrixTTC 
   property AR_PrixTTC:WordBool read Get_AR_PrixTTC write Set_AR_PrixTTC;
    // Gamme1 : property Gamme1 
   property Gamme1:IBPGamme read Get_Gamme1 write Set_Gamme1;
    // Gamme2 : property Gamme2 
   property Gamme2:IBPGamme read Get_Gamme2 write Set_Gamme2;
    // AR_SuiviStock : property AR_SuiviStock 
   property AR_SuiviStock:SuiviStockType read Get_AR_SuiviStock write Set_AR_SuiviStock;
    // AR_Nomencl : property AR_Nomencl 
   property AR_Nomencl:NomenclatureType read Get_AR_Nomencl write Set_AR_Nomencl;
    // AR_Stat : property AR_Stat 
   property AR_Stat[sVal:Smallint]:WideString read Get_AR_Stat write Set_AR_Stat;
    // AR_Escompte : property AR_Escompte 
   property AR_Escompte:WordBool read Get_AR_Escompte write Set_AR_Escompte;
    // AR_Delai : property AR_Delai 
   property AR_Delai:Smallint read Get_AR_Delai write Set_AR_Delai;
    // AR_HorsStat : property AR_HorsStat 
   property AR_HorsStat:WordBool read Get_AR_HorsStat write Set_AR_HorsStat;
    // AR_VteDebit : property AR_VteDebit 
   property AR_VteDebit:WordBool read Get_AR_VteDebit write Set_AR_VteDebit;
    // AR_NotImp : property AR_NotImp 
   property AR_NotImp:WordBool read Get_AR_NotImp write Set_AR_NotImp;
    // AR_Sommeil : property AR_Sommeil 
   property AR_Sommeil:WordBool read Get_AR_Sommeil write Set_AR_Sommeil;
    // AR_Langue1 : property AR_Langue1 
   property AR_Langue1:WideString read Get_AR_Langue1 write Set_AR_Langue1;
    // AR_Langue2 : property AR_Langue2 
   property AR_Langue2:WideString read Get_AR_Langue2 write Set_AR_Langue2;
    // AR_CodeBarre : property AR_CodeBarre 
   property AR_CodeBarre:WideString read Get_AR_CodeBarre write Set_AR_CodeBarre;
    // AR_CodeFiscal : property AR_CodeFiscal 
   property AR_CodeFiscal:WideString read Get_AR_CodeFiscal write Set_AR_CodeFiscal;
    // AR_Pays : property AR_Pays 
   property AR_Pays:WideString read Get_AR_Pays write Set_AR_Pays;
    // AR_Frais : property AR_Frais 
   property AR_Frais:IFrais2 read Get_AR_Frais write Set_AR_Frais;
    // Conditionnement : property Conditionnement 
   property Conditionnement:IBPConditionnement read Get_Conditionnement write Set_Conditionnement;
    // AR_PUNet : property AR_PUNet 
   property AR_PUNet:Double read Get_AR_PUNet write Set_AR_PUNet;
    // AR_Contremarque : property AR_Contremarque 
   property AR_Contremarque:WordBool read Get_AR_Contremarque write Set_AR_Contremarque;
    // AR_FactPoids : property AR_FactPoids 
   property AR_FactPoids:WordBool read Get_AR_FactPoids write Set_AR_FactPoids;
    // AR_FactForfait : property AR_FactForfait 
   property AR_FactForfait:WordBool read Get_AR_FactForfait write Set_AR_FactForfait;
    // AR_DateCreation : property AR_DateCreation 
   property AR_DateCreation:TDateTime read Get_AR_DateCreation;
    // AR_Publie : property AR_Publie 
   property AR_Publie:WordBool read Get_AR_Publie write Set_AR_Publie;
    // AR_DateModif : property AR_DateModif 
   property AR_DateModif:TDateTime read Get_AR_DateModif;
    // AR_Photo : property AR_Photo 
   property AR_Photo:WideString read Get_AR_Photo write Set_AR_Photo;
    // FournisseurPrincipal : property FournisseurPrincipal 
   property FournisseurPrincipal:IBOArticleTarifFournisseur3 read Get_FournisseurPrincipal write Set_FournisseurPrincipal;
    // ArticleDepotPrincipal : property ArticleDepotPrincipal 
   property ArticleDepotPrincipal:IBOArticleDepot3 read Get_ArticleDepotPrincipal write Set_ArticleDepotPrincipal;
    // ModeleTousDomaine : property Modèle tous domaine 
   property ModeleTousDomaine:IBOModele2 read Get_ModeleTousDomaine write Set_ModeleTousDomaine;
    // ModeleAchat : property Modèle Domaine Achat 
   property ModeleAchat:IBOModele2 read Get_ModeleAchat write Set_ModeleAchat;
    // ModeleVente : property Modèle Domaine Vente 
   property ModeleVente:IBOModele2 read Get_ModeleVente write Set_ModeleVente;
    // ModeleStock : property Modèle Domaine Stock 
   property ModeleStock:IBOModele2 read Get_ModeleStock write Set_ModeleStock;
    // ModeleComptoir : property Modèle Domaine Comptoir 
   property ModeleComptoir:IBOModele2 read Get_ModeleComptoir write Set_ModeleComptoir;
    // ModeleInterne : property Modèle Domaine Interne 
   property ModeleInterne:IBOModele2 read Get_ModeleInterne write Set_ModeleInterne;
    // AR_CoutStd : property AR_CoutStd 
   property AR_CoutStd:Double read Get_AR_CoutStd write Set_AR_CoutStd;
    // AR_QteComp : property AR_QteComp 
   property AR_QteComp:Double read Get_AR_QteComp write Set_AR_QteComp;
    // AR_QteOperatoire : property AR_QteOperatoire 
   property AR_QteOperatoire:Double read Get_AR_QteOperatoire write Set_AR_QteOperatoire;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // ConditionnementPrincipal : property ConditionnementPrincipal 
   property ConditionnementPrincipal:IBOArticleCond3 read Get_ConditionnementPrincipal write Set_ConditionnementPrincipal;
    // ConditionnementAffichage : property ConditionnementAffichage 
   property ConditionnementAffichage:IBOArticleCond3 read Get_ConditionnementAffichage write Set_ConditionnementAffichage;
    // AR_Prevision : property AR_Prevision 
   property AR_Prevision:WordBool read Get_AR_Prevision write Set_AR_Prevision;
    // Catalogue : property Catalogue 
   property Catalogue:IBPProduit2 read Get_Catalogue write Set_Catalogue;
    // AR_Type : property AR_Type 
   property AR_Type:ArticleType read Get_AR_Type write Set_AR_Type;
    // RessourceDefault : property RessourceDefault 
   property RessourceDefault:IBIRessource read Get_RessourceDefault write Set_RessourceDefault;
    // FactoryArticleRessource : property FactoryArticleRessource 
   property FactoryArticleRessource:IBOArticleRessourceFactory read Get_FactoryArticleRessource;
    // AR_EdiCode : property AR_EdiCode 
   property AR_EdiCode:WideString read Get_AR_EdiCode write Set_AR_EdiCode;
    // AR_Nature : property AR_Nature 
   property AR_Nature:FamilleNatureType read Get_AR_Nature write Set_AR_Nature;
    // AR_DelaiFabrication : property AR_DelaiFabrication 
   property AR_DelaiFabrication:Smallint read Get_AR_DelaiFabrication write Set_AR_DelaiFabrication;
    // AR_NbColis : property AR_NbColis 
   property AR_NbColis:Smallint read Get_AR_NbColis write Set_AR_NbColis;
    // AR_DelaiPeremption : property AR_DelaiPeremption 
   property AR_DelaiPeremption:Smallint read Get_AR_DelaiPeremption write Set_AR_DelaiPeremption;
    // AR_DelaiSecurite : property AR_DelaiSecurite 
   property AR_DelaiSecurite:Smallint read Get_AR_DelaiSecurite write Set_AR_DelaiSecurite;
    // AR_SousTraitance : property AR_SousTraitance 
   property AR_SousTraitance:WordBool read Get_AR_SousTraitance write Set_AR_SousTraitance;
    // AR_Fictif : property AR_Fictif 
   property AR_Fictif:WordBool read Get_AR_Fictif write Set_AR_Fictif;
    // AR_TypeLancement : property AR_TypeLancement 
   property AR_TypeLancement:LancementType read Get_AR_TypeLancement write Set_AR_TypeLancement;
    // AR_Criticite : property AR_Criticite 
   property AR_Criticite:FamilleCriticiteType read Get_AR_Criticite write Set_AR_Criticite;
    // AR_Cycle : property AR_Cycle 
   property AR_Cycle:CycleType read Get_AR_Cycle write Set_AR_Cycle;
  end;


// IBOArticle3 : IBOArticle3 Interface

 IBOArticle3Disp = dispinterface
   ['{E05DF99C-5D91-4A03-B9A1-5C87A92D8298}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // CA_TTC : methode CA_TTC 
   function CA_TTC(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 160;
    // CA_HTBrut : methode CA_HTBrut 
   function CA_HTBrut(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 161;
    // CA_HTNet : methode CA_HTNet 
   function CA_HTNet(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 162;
    // TauxRemiseMoyen : methode TauxRemiseMoyen 
   function TauxRemiseMoyen(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 163;
    // TotalCoutRevient : methode TotalCoutRevient 
   function TotalCoutRevient(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 164;
    // TotalMarge : methode TotalMarge 
   function TotalMarge(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 165;
    // TotalQtes : methode TotalQtes 
   function TotalQtes(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 166;
    // TotalQtesColisees : methode TotalQtesColisees 
   function TotalQtesColisees(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 167;
    // TotalPoidsNet : methode TotalPoidsNet 
   function TotalPoidsNet(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 168;
    // TotalPoidsBrut : methode TotalPoidsBrut 
   function TotalPoidsBrut(pTiers:IBICollection;dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 169;
    // TarifVente : methode TarifVente 
   function TarifVente:ITarifVente2;dispid 170;
    // TarifVenteCategorie : methode TarifVenteCategorie 
   function TarifVenteCategorie(pCategorieTarif:IBPCategorieTarif;dQtes:Double):ITarifVente2;dispid 171;
    // TarifVenteCategorieMonoGamme : methode TarifVenteCategorieMonoGamme 
   function TarifVenteCategorieMonoGamme(pCategorieTarif:IBPCategorieTarif;pEnum:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;dispid 172;
    // TarifVenteCategorieDoubleGamme : methode TarifVenteCategorieDoubleGamme 
   function TarifVenteCategorieDoubleGamme(pCategorieTarif:IBPCategorieTarif;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;dispid 173;
    // TarifVenteCategorieCond : methode TarifVenteCategorieCond 
   function TarifVenteCategorieCond(pCategorieTarif:IBPCategorieTarif;pConditionnement:IBOArticleCond3;dQtes:Double):ITarifVente2;dispid 174;
    // TarifVenteTiers : methode TarifVenteTiers 
   function TarifVenteTiers(pClient:IBOClient3;dQtes:Double):ITarifVente2;dispid 175;
    // TarifVenteTiersMonoGamme : methode TarifVenteTiersMonoGamme 
   function TarifVenteTiersMonoGamme(pClient:IBOClient3;pEnum:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;dispid 176;
    // TarifVenteTiersDoubleGamme : methode TarifVenteTiersDoubleGamme 
   function TarifVenteTiersDoubleGamme(pClient:IBOClient3;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;dQtes:Double):ITarifVente2;dispid 177;
    // TarifVenteTiersCond : methode TarifVenteTiersCond 
   function TarifVenteTiersCond(pClient:IBOClient3;pConditionnement:IBOArticleCond3;dQtes:Double):ITarifVente2;dispid 178;
    // TarifAchat : methode TarifAchat 
   function TarifAchat:ITarifAchat2;dispid 179;
    // TarifAchatMonoGamme : methode TarifAchatMonoGamme 
   function TarifAchatMonoGamme(pEnum:IBOArticleGammeEnum3):ITarifAchat2;dispid 180;
    // TarifAchatDoubleGamme : methode TarifAchatDoubleGamme 
   function TarifAchatDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):ITarifAchat2;dispid 181;
    // TarifAchatTiers : methode TarifAchatTiers 
   function TarifAchatTiers(pFournisseur:IBOFournisseur3;dQtes:Double):ITarifAchat2;dispid 182;
    // TarifAchatTiersMonoGamme : methode TarifAchatTiersMonoGamme 
   function TarifAchatTiersMonoGamme(pFournisseur:IBOFournisseur3;pEnum:IBOArticleGammeEnum3;dQtes:Double):ITarifAchat2;dispid 183;
    // TarifAchatTiersDoubleGamme : methode TarifAchatTiersDoubleGamme 
   function TarifAchatTiersDoubleGamme(pFournisseur:IBOFournisseur3;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;dQtes:Double):ITarifAchat2;dispid 184;
    // StockValeur : methode StockValeur 
   function StockValeur(DateStock:TDateTime):Double;dispid 185;
    // StockValeurMonoGamme : methode StockValeurMonoGamme 
   function StockValeurMonoGamme(DateStock:TDateTime;pEnum:IBOArticleGammeEnum3):Double;dispid 186;
    // StockValeurDoubleGamme : methode StockValeurDoubleGamme 
   function StockValeurDoubleGamme(DateStock:TDateTime;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 187;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;dispid 188;
    // StockQteMonoGamme : methode StockQteMonoGamme 
   function StockQteMonoGamme(DateStock:TDateTime;pEnum:IBOArticleGammeEnum3):Double;dispid 189;
    // StockQteDoubleGamme : methode StockQteDoubleGamme 
   function StockQteDoubleGamme(DateStock:TDateTime;pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 190;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 191;
    // StockReelMonoGamme : methode StockReelMonoGamme 
   function StockReelMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 192;
    // StockReelDoubleGamme : methode StockReelDoubleGamme 
   function StockReelDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 193;
    // StockCommande : methode StockCommande 
   function StockCommande:Double;dispid 194;
    // StockCommandeMonoGamme : methode StockCommandeMonoGamme 
   function StockCommandeMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 195;
    // StockCommandeDoubleGamme : methode StockCommandeDoubleGamme 
   function StockCommandeDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 196;
    // StockReserve : methode StockReserve 
   function StockReserve:Double;dispid 197;
    // StockReserveMonoGamme : methode StockReserveMonoGamme 
   function StockReserveMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 198;
    // StockReserveDoubleGamme : methode StockReserveDoubleGamme 
   function StockReserveDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 199;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 200;
    // StockATermeMonoGamme : methode StockATermeMonoGamme 
   function StockATermeMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 201;
    // StockATermeDoubleGamme : methode StockATermeDoubleGamme 
   function StockATermeDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 202;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;dispid 203;
    // StockPrepareMonoGamme : methode StockPrepareMonoGamme 
   function StockPrepareMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 204;
    // StockPrepareDoubleGamme : methode StockPrepareDoubleGamme 
   function StockPrepareDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 205;
    // StockReserveContremarque : methode StockReserveContremarque 
   function StockReserveContremarque:Double;dispid 206;
    // StockReserveContremarqueMonoGamme : methode StockReserveContremarqueMonoGamme 
   function StockReserveContremarqueMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 207;
    // StockReserveContremarqueDoubleGamme : methode StockReserveContremarqueDoubleGamme 
   function StockReserveContremarqueDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 208;
    // StockCommandeContremarque : methode StockCommandeContremarque 
   function StockCommandeContremarque:Double;dispid 209;
    // StockCommandeContremarqueMonoGamme : methode StockCommandeContremarqueMonoGamme 
   function StockCommandeContremarqueMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 210;
    // StockCommandeContremarqueDoubleGamme : methode StockCommandeContremarqueDoubleGamme 
   function StockCommandeContremarqueDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 211;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;dispid 212;
    // StockDispoMonoGamme : methode StockDispoMonoGamme 
   function StockDispoMonoGamme(pEnum:IBOArticleGammeEnum3):Double;dispid 213;
    // StockDispoDoubleGamme : methode StockDispoDoubleGamme 
   function StockDispoDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):Double;dispid 214;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticle : property FactoryArticle 
   property FactoryArticle:IBOArticleFactory3  readonly dispid 100;
    // FactoryArticleTarifFournisseur : property FactoryArticleTarifFournisseur 
   property FactoryArticleTarifFournisseur:IBITypeObjectFactory  readonly dispid 101;
    // FactoryArticleTarifClient : property FactoryArticleTarifClient 
   property FactoryArticleTarifClient:IBITypeObjectFactory  readonly dispid 102;
    // FactoryArticleTarifCategorie : property FactoryArticleTarifCategorie 
   property FactoryArticleTarifCategorie:IBITypeObjectFactory  readonly dispid 103;
    // FactoryArticleMedia : property FactoryArticleMedia 
   property FactoryArticleMedia:IBITypeObjectFactory  readonly dispid 104;
    // FactoryArticleGlossaire : property FactoryArticleGlossaire 
   property FactoryArticleGlossaire:IBOArticleGlossaireFactory2  readonly dispid 106;
    // FactoryArticleParamCompta : property FactoryArticleParamCompta 
   property FactoryArticleParamCompta:IBOArticleParamComptaFactory3  readonly dispid 107;
    // FactoryArticleDepot : property FactoryArticleDepot 
   property FactoryArticleDepot:IBOArticleDepotFactory  readonly dispid 108;
    // FactoryArticleGammeEnum1 : property FactoryArticleGammeEnum1 
   property FactoryArticleGammeEnum1:IBOArticleGammeEnumFactory  readonly dispid 109;
    // FactoryArticleGammeEnum2 : property FactoryArticleGammeEnum2 
   property FactoryArticleGammeEnum2:IBOArticleGammeEnumFactory  readonly dispid 110;
    // FactoryArticleNomenclature : property FactoryArticleNomenclature 
   property FactoryArticleNomenclature:IBITypeObjectFactory  readonly dispid 111;
    // FactoryArticleCond : property FactoryArticleCond 
   property FactoryArticleCond:IBOArticleCondFactory  readonly dispid 112;
    // AR_Ref : property AR_Ref 
   property AR_Ref:WideString dispid 113;
    // AR_Design : property AR_Design 
   property AR_Design:WideString dispid 114;
    // Famille : property Famille 
   property Famille:IBOFamille3 dispid 115;
    // ArticleSubstitution : property ArticleSubstitution 
   property ArticleSubstitution:IBOArticle3 dispid 116;
    // AR_Raccourci : property AR_Raccourci 
   property AR_Raccourci:WideString dispid 117;
    // AR_Garantie : property AR_Garantie 
   property AR_Garantie:Smallint dispid 118;
    // AR_UnitePoids : property AR_UnitePoids 
   property AR_UnitePoids:UnitePoidsType dispid 119;
    // AR_PoidsNet : property AR_PoidsNet 
   property AR_PoidsNet:Double dispid 120;
    // AR_PoidsBrut : property AR_PoidsBrut 
   property AR_PoidsBrut:Double dispid 121;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 122;
    // AR_PrixAchat : property AR_PrixAchat 
   property AR_PrixAchat:Double dispid 123;
    // AR_Coef : property AR_Coef 
   property AR_Coef:Double dispid 124;
    // AR_PrixVen : property AR_PrixVen 
   property AR_PrixVen:Double dispid 125;
    // AR_PrixTTC : property AR_PrixTTC 
   property AR_PrixTTC:WordBool dispid 126;
    // Gamme1 : property Gamme1 
   property Gamme1:IBPGamme dispid 127;
    // Gamme2 : property Gamme2 
   property Gamme2:IBPGamme dispid 128;
    // AR_SuiviStock : property AR_SuiviStock 
   property AR_SuiviStock:SuiviStockType dispid 129;
    // AR_Nomencl : property AR_Nomencl 
   property AR_Nomencl:NomenclatureType dispid 130;
    // AR_Stat : property AR_Stat 
   property AR_Stat[sVal:Smallint]:WideString dispid 131;
    // AR_Escompte : property AR_Escompte 
   property AR_Escompte:WordBool dispid 132;
    // AR_Delai : property AR_Delai 
   property AR_Delai:Smallint dispid 133;
    // AR_HorsStat : property AR_HorsStat 
   property AR_HorsStat:WordBool dispid 134;
    // AR_VteDebit : property AR_VteDebit 
   property AR_VteDebit:WordBool dispid 135;
    // AR_NotImp : property AR_NotImp 
   property AR_NotImp:WordBool dispid 136;
    // AR_Sommeil : property AR_Sommeil 
   property AR_Sommeil:WordBool dispid 137;
    // AR_Langue1 : property AR_Langue1 
   property AR_Langue1:WideString dispid 138;
    // AR_Langue2 : property AR_Langue2 
   property AR_Langue2:WideString dispid 139;
    // AR_CodeBarre : property AR_CodeBarre 
   property AR_CodeBarre:WideString dispid 144;
    // AR_CodeFiscal : property AR_CodeFiscal 
   property AR_CodeFiscal:WideString dispid 145;
    // AR_Pays : property AR_Pays 
   property AR_Pays:WideString dispid 146;
    // AR_Frais : property AR_Frais 
   property AR_Frais:IFrais2 dispid 147;
    // Conditionnement : property Conditionnement 
   property Conditionnement:IBPConditionnement dispid 148;
    // AR_PUNet : property AR_PUNet 
   property AR_PUNet:Double dispid 149;
    // AR_Contremarque : property AR_Contremarque 
   property AR_Contremarque:WordBool dispid 150;
    // AR_FactPoids : property AR_FactPoids 
   property AR_FactPoids:WordBool dispid 151;
    // AR_FactForfait : property AR_FactForfait 
   property AR_FactForfait:WordBool dispid 152;
    // AR_DateCreation : property AR_DateCreation 
   property AR_DateCreation:TDateTime  readonly dispid 153;
    // AR_Publie : property AR_Publie 
   property AR_Publie:WordBool dispid 155;
    // AR_DateModif : property AR_DateModif 
   property AR_DateModif:TDateTime  readonly dispid 156;
    // AR_Photo : property AR_Photo 
   property AR_Photo:WideString dispid 157;
    // FournisseurPrincipal : property FournisseurPrincipal 
   property FournisseurPrincipal:IBOArticleTarifFournisseur3 dispid 158;
    // ArticleDepotPrincipal : property ArticleDepotPrincipal 
   property ArticleDepotPrincipal:IBOArticleDepot3 dispid 159;
    // ModeleTousDomaine : property Modèle tous domaine 
   property ModeleTousDomaine:IBOModele2 dispid 215;
    // ModeleAchat : property Modèle Domaine Achat 
   property ModeleAchat:IBOModele2 dispid 216;
    // ModeleVente : property Modèle Domaine Vente 
   property ModeleVente:IBOModele2 dispid 217;
    // ModeleStock : property Modèle Domaine Stock 
   property ModeleStock:IBOModele2 dispid 218;
    // ModeleComptoir : property Modèle Domaine Comptoir 
   property ModeleComptoir:IBOModele2 dispid 219;
    // ModeleInterne : property Modèle Domaine Interne 
   property ModeleInterne:IBOModele2 dispid 220;
    // AR_CoutStd : property AR_CoutStd 
   property AR_CoutStd:Double dispid 221;
    // AR_QteComp : property AR_QteComp 
   property AR_QteComp:Double dispid 222;
    // AR_QteOperatoire : property AR_QteOperatoire 
   property AR_QteOperatoire:Double dispid 223;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 224;
    // ConditionnementPrincipal : property ConditionnementPrincipal 
   property ConditionnementPrincipal:IBOArticleCond3 dispid 225;
    // ConditionnementAffichage : property ConditionnementAffichage 
   property ConditionnementAffichage:IBOArticleCond3 dispid 226;
    // AR_Prevision : property AR_Prevision 
   property AR_Prevision:WordBool dispid 227;
    // Catalogue : property Catalogue 
   property Catalogue:IBPProduit2 dispid 228;
    // AR_Type : property AR_Type 
   property AR_Type:ArticleType dispid 229;
    // RessourceDefault : property RessourceDefault 
   property RessourceDefault:IBIRessource dispid 230;
    // FactoryArticleRessource : property FactoryArticleRessource 
   property FactoryArticleRessource:IBOArticleRessourceFactory  readonly dispid 231;
    // AR_EdiCode : property AR_EdiCode 
   property AR_EdiCode:WideString dispid 232;
    // AR_Nature : property AR_Nature 
   property AR_Nature:FamilleNatureType dispid 233;
    // AR_DelaiFabrication : property AR_DelaiFabrication 
   property AR_DelaiFabrication:Smallint dispid 234;
    // AR_NbColis : property AR_NbColis 
   property AR_NbColis:Smallint dispid 235;
    // AR_DelaiPeremption : property AR_DelaiPeremption 
   property AR_DelaiPeremption:Smallint dispid 236;
    // AR_DelaiSecurite : property AR_DelaiSecurite 
   property AR_DelaiSecurite:Smallint dispid 237;
    // AR_SousTraitance : property AR_SousTraitance 
   property AR_SousTraitance:WordBool dispid 238;
    // AR_Fictif : property AR_Fictif 
   property AR_Fictif:WordBool dispid 239;
    // AR_TypeLancement : property AR_TypeLancement 
   property AR_TypeLancement:LancementType dispid 240;
    // AR_Criticite : property AR_Criticite 
   property AR_Criticite:FamilleCriticiteType dispid 241;
    // AR_Cycle : property AR_Cycle 
   property AR_Cycle:CycleType dispid 242;
  end;


// IBOArticleFactory3 : IBOArticleFactory3 Interface

 IBOArticleFactory3 = interface(IBITypeObjectFactory)
   ['{154DA331-CD29-403D-80F1-8D812FE017FB}']
   function Get_ListOrderReference : IBICollection; safecall;
   function Get_ListOrderFamille : IBICollection; safecall;
    // ExistReference : methode ExistReference 
   function ExistReference(sReference:WideString):WordBool;safecall;
    // ReadReference : methode ReadReference 
   function ReadReference(sReference:WideString):IBOArticle3;safecall;
    // ExistCodeBarre : methode ExistCodeBarre 
   function ExistCodeBarre(sCodeBarre:WideString):WordBool;safecall;
    // ReadCodeBarre : methode ReadCodeBarre 
   function ReadCodeBarre(sCodeBarre:WideString):IBOArticle3;safecall;
    // QueryActifOrderReference : methode QueryActifOrderReference 
   function QueryActifOrderReference:IBICollection;safecall;
    // QueryPublieOrderReference : methode QueryPublieOrderReference 
   function QueryPublieOrderReference:IBICollection;safecall;
    // QueryReferenceOrderReference : methode QueryReferenceOrderReference 
   function QueryReferenceOrderReference(AR_RefDe:WideString;AR_RefA:WideString):IBICollection;safecall;
    // QueryFamille : methode QueryFamille 
   function QueryFamille(pFamille:IBOFamille3):IBICollection;safecall;
    // QueryMouvementeOrderReference : methode QueryMouvementeOrderReference 
   function QueryMouvementeOrderReference:IBICollection;safecall;
    // QueryReplicate : methode QueryReplicate 
   function QueryReplicate(lIndice:Integer):IBICollection;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
    // QueryCatalogue : methode QueryCatalogue 
   function QueryCatalogue(pProduit:IBPProduit2):IBICollection;safecall;
    // QueryBaremeSoldeApplicable : Liste des articles sur lesquels s'appliquent un solde donné 
   function QueryBaremeSoldeApplicable(pSolde:IBOBaremeSolde):IBICollection;safecall;
    // QueryDepotEmplacement : Liste des articles passés au moins une fois par un emplacement donné 
   function QueryDepotEmplacement(pEmpl:IBODepotEmplacement):IBICollection;safecall;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
   function Get_ListOrderDesignation : IBICollection; safecall;
    // ListOrderReference : property ListOrderReference 
   property ListOrderReference:IBICollection read Get_ListOrderReference;
    // ListOrderFamille : property ListOrderFamille 
   property ListOrderFamille:IBICollection read Get_ListOrderFamille;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
    // ListOrderDesignation : property ListOrderDesignation 
   property ListOrderDesignation:IBICollection read Get_ListOrderDesignation;
  end;


// IBOArticleFactory3 : IBOArticleFactory3 Interface

 IBOArticleFactory3Disp = dispinterface
   ['{154DA331-CD29-403D-80F1-8D812FE017FB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistReference : methode ExistReference 
   function ExistReference(sReference:WideString):WordBool;dispid 12;
    // ReadReference : methode ReadReference 
   function ReadReference(sReference:WideString):IBOArticle3;dispid 13;
    // ExistCodeBarre : methode ExistCodeBarre 
   function ExistCodeBarre(sCodeBarre:WideString):WordBool;dispid 14;
    // ReadCodeBarre : methode ReadCodeBarre 
   function ReadCodeBarre(sCodeBarre:WideString):IBOArticle3;dispid 15;
    // QueryActifOrderReference : methode QueryActifOrderReference 
   function QueryActifOrderReference:IBICollection;dispid 16;
    // QueryPublieOrderReference : methode QueryPublieOrderReference 
   function QueryPublieOrderReference:IBICollection;dispid 17;
    // QueryReferenceOrderReference : methode QueryReferenceOrderReference 
   function QueryReferenceOrderReference(AR_RefDe:WideString;AR_RefA:WideString):IBICollection;dispid 18;
    // QueryFamille : methode QueryFamille 
   function QueryFamille(pFamille:IBOFamille3):IBICollection;dispid 19;
    // QueryMouvementeOrderReference : methode QueryMouvementeOrderReference 
   function QueryMouvementeOrderReference:IBICollection;dispid 20;
    // QueryReplicate : methode QueryReplicate 
   function QueryReplicate(lIndice:Integer):IBICollection;dispid 21;
    // QueryCatalogue : methode QueryCatalogue 
   function QueryCatalogue(pProduit:IBPProduit2):IBICollection;dispid 23;
    // QueryBaremeSoldeApplicable : Liste des articles sur lesquels s'appliquent un solde donné 
   function QueryBaremeSoldeApplicable(pSolde:IBOBaremeSolde):IBICollection;dispid 24;
    // QueryDepotEmplacement : Liste des articles passés au moins une fois par un emplacement donné 
   function QueryDepotEmplacement(pEmpl:IBODepotEmplacement):IBICollection;dispid 25;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 26;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderReference : property ListOrderReference 
   property ListOrderReference:IBICollection  readonly dispid 10;
    // ListOrderFamille : property ListOrderFamille 
   property ListOrderFamille:IBICollection  readonly dispid 11;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 22;
    // ListOrderDesignation : property ListOrderDesignation 
   property ListOrderDesignation:IBICollection  readonly dispid 27;
  end;


// IBOFamille3 : IBOFamille3 Interface

 IBOFamille3 = interface(IBIPersistObject)
   ['{8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}']
   function Get_FactoryFamille : IBOFamilleFactory2; safecall;
   function Get_FactoryFamilleParamCompta : IBITypeObjectFactory; safecall;
   function Get_FA_CodeFamille : WideString; safecall;
   procedure Set_FA_CodeFamille(const pVal:WideString); safecall;
   function Get_FA_Type : FamilleType; safecall;
   procedure Set_FA_Type(const pVal:FamilleType); safecall;
   function Get_FA_Intitule : WideString; safecall;
   procedure Set_FA_Intitule(const pVal:WideString); safecall;
   function Get_Unite : IBPUnite; safecall;
   procedure Set_Unite(const pUnite:IBPUnite); safecall;
   function Get_Produit : IBPProduit2; safecall;
   procedure Set_Produit(const pProduit:IBPProduit2); safecall;
   function Get_FA_Coef : Double; safecall;
   procedure Set_FA_Coef(const pVal:Double); safecall;
   function Get_FA_SuiviStock : SuiviStockType; safecall;
   procedure Set_FA_SuiviStock(const pVal:SuiviStockType); safecall;
   function Get_FA_Garantie : Smallint; safecall;
   procedure Set_FA_Garantie(const pVal:Smallint); safecall;
   function Get_FamilleCentral : IBOFamille3; safecall;
   procedure Set_FamilleCentral(const pFamille:IBOFamille3); safecall;
   function Get_FA_Stat(sElt:Smallint) : WideString; safecall;
   procedure Set_FA_Stat(const sElt:Smallint; const parFA_Stat:WideString); safecall;
   function Get_FA_CodeFiscal : WideString; safecall;
   procedure Set_FA_CodeFiscal(const pVal:WideString); safecall;
   function Get_FA_Pays : WideString; safecall;
   procedure Set_FA_Pays(const pVal:WideString); safecall;
   function Get_FA_UnitePoids : UnitePoidsType; safecall;
   procedure Set_FA_UnitePoids(const pVal:UnitePoidsType); safecall;
   function Get_FA_Escompte : WordBool; safecall;
   procedure Set_FA_Escompte(const pVal:WordBool); safecall;
   function Get_FA_Delai : Smallint; safecall;
   procedure Set_FA_Delai(const pVal:Smallint); safecall;
   function Get_FA_HorsStat : WordBool; safecall;
   procedure Set_FA_HorsStat(const pVal:WordBool); safecall;
   function Get_FA_VteDebit : WordBool; safecall;
   procedure Set_FA_VteDebit(const pVal:WordBool); safecall;
   function Get_FA_NotImp : WordBool; safecall;
   procedure Set_FA_NotImp(const pVal:WordBool); safecall;
   function Get_Frais : IFrais2; safecall;
   procedure Set_Frais(const pFrais:IFrais2); safecall;
   function Get_FA_Contremarque : WordBool; safecall;
   procedure Set_FA_Contremarque(const pVal:WordBool); safecall;
   function Get_FA_FactPoids : WordBool; safecall;
   procedure Set_FA_FactPoids(const pVal:WordBool); safecall;
   function Get_FA_FactForfait : WordBool; safecall;
   procedure Set_FA_FactForfait(const pVal:WordBool); safecall;
   function Get_FA_Publie : WordBool; safecall;
   procedure Set_FA_Publie(const pVal:WordBool); safecall;
   function Get_FactoryFamilleTarifCategorie : IBITypeObjectFactory; safecall;
   function Get_FactoryFamilleTarifClient : IBITypeObjectFactory; safecall;
   function Get_FactoryFamilleTarifFournisseur : IBITypeObjectFactory; safecall;
   function Get_ModeleTousDomaine : IBOModele2; safecall;
   procedure Set_ModeleTousDomaine(const pObject:IBOModele2); safecall;
   function Get_ModeleAchat : IBOModele2; safecall;
   procedure Set_ModeleAchat(const pObject:IBOModele2); safecall;
   function Get_ModeleVente : IBOModele2; safecall;
   procedure Set_ModeleVente(const pObject:IBOModele2); safecall;
   function Get_ModeleStock : IBOModele2; safecall;
   procedure Set_ModeleStock(const pObject:IBOModele2); safecall;
   function Get_ModeleComptoir : IBOModele2; safecall;
   procedure Set_ModeleComptoir(const pObject:IBOModele2); safecall;
   function Get_ModeleInterne : IBOModele2; safecall;
   procedure Set_ModeleInterne(const pObject:IBOModele2); safecall;
   function Get_Catalogue : IBPProduit2; safecall;
   procedure Set_Catalogue(const pProduit:IBPProduit2); safecall;
   function Get_FA_Nature : FamilleNatureType; safecall;
   procedure Set_FA_Nature(const pVal:FamilleNatureType); safecall;
   function Get_FA_NbColis : Smallint; safecall;
   procedure Set_FA_NbColis(const pVal:Smallint); safecall;
   function Get_FA_SousTraitance : WordBool; safecall;
   procedure Set_FA_SousTraitance(const pVal:WordBool); safecall;
   function Get_FA_Fictif : WordBool; safecall;
   procedure Set_FA_Fictif(const pVal:WordBool); safecall;
   function Get_FA_Criticite : FamilleCriticiteType; safecall;
   procedure Set_FA_Criticite(const pVal:FamilleCriticiteType); safecall;
    // FactoryFamille : property FactoryFamille 
   property FactoryFamille:IBOFamilleFactory2 read Get_FactoryFamille;
    // FactoryFamilleParamCompta : property FactoryFamilleParamCompta 
   property FactoryFamilleParamCompta:IBITypeObjectFactory read Get_FactoryFamilleParamCompta;
    // FA_CodeFamille : property FA_CodeFamille 
   property FA_CodeFamille:WideString read Get_FA_CodeFamille write Set_FA_CodeFamille;
    // FA_Type : property FA_Type 
   property FA_Type:FamilleType read Get_FA_Type write Set_FA_Type;
    // FA_Intitule : property FA_Intitule 
   property FA_Intitule:WideString read Get_FA_Intitule write Set_FA_Intitule;
    // Unite : property Unite 
   property Unite:IBPUnite read Get_Unite write Set_Unite;
    // Produit : property Produit 
   property Produit:IBPProduit2 read Get_Produit write Set_Produit;
    // FA_Coef : property FA_Coef 
   property FA_Coef:Double read Get_FA_Coef write Set_FA_Coef;
    // FA_SuiviStock : property FA_SuiviStock 
   property FA_SuiviStock:SuiviStockType read Get_FA_SuiviStock write Set_FA_SuiviStock;
    // FA_Garantie : property FA_Garantie 
   property FA_Garantie:Smallint read Get_FA_Garantie write Set_FA_Garantie;
    // FamilleCentral : property FamilleCentral 
   property FamilleCentral:IBOFamille3 read Get_FamilleCentral write Set_FamilleCentral;
    // FA_Stat : property FA_Stat 
   property FA_Stat[sElt:Smallint]:WideString read Get_FA_Stat write Set_FA_Stat;
    // FA_CodeFiscal : property FA_CodeFiscal 
   property FA_CodeFiscal:WideString read Get_FA_CodeFiscal write Set_FA_CodeFiscal;
    // FA_Pays : property FA_Pays 
   property FA_Pays:WideString read Get_FA_Pays write Set_FA_Pays;
    // FA_UnitePoids : property FA_UnitePoids 
   property FA_UnitePoids:UnitePoidsType read Get_FA_UnitePoids write Set_FA_UnitePoids;
    // FA_Escompte : property FA_Escompte 
   property FA_Escompte:WordBool read Get_FA_Escompte write Set_FA_Escompte;
    // FA_Delai : property FA_Delai 
   property FA_Delai:Smallint read Get_FA_Delai write Set_FA_Delai;
    // FA_HorsStat : property FA_HorsStat 
   property FA_HorsStat:WordBool read Get_FA_HorsStat write Set_FA_HorsStat;
    // FA_VteDebit : property FA_VteDebit 
   property FA_VteDebit:WordBool read Get_FA_VteDebit write Set_FA_VteDebit;
    // FA_NotImp : property FA_NotImp 
   property FA_NotImp:WordBool read Get_FA_NotImp write Set_FA_NotImp;
    // Frais : property Frais 
   property Frais:IFrais2 read Get_Frais write Set_Frais;
    // FA_Contremarque : property FA_Contremarque 
   property FA_Contremarque:WordBool read Get_FA_Contremarque write Set_FA_Contremarque;
    // FA_FactPoids : property FA_FactPoids 
   property FA_FactPoids:WordBool read Get_FA_FactPoids write Set_FA_FactPoids;
    // FA_FactForfait : property FA_FactForfait 
   property FA_FactForfait:WordBool read Get_FA_FactForfait write Set_FA_FactForfait;
    // FA_Publie : property FA_Publie 
   property FA_Publie:WordBool read Get_FA_Publie write Set_FA_Publie;
    // FactoryFamilleTarifCategorie : property FactoryFamilleTarifCategorie 
   property FactoryFamilleTarifCategorie:IBITypeObjectFactory read Get_FactoryFamilleTarifCategorie;
    // FactoryFamilleTarifClient : property FactoryFamilleTarifClient 
   property FactoryFamilleTarifClient:IBITypeObjectFactory read Get_FactoryFamilleTarifClient;
    // FactoryFamilleTarifFournisseur : property FactoryFamilleTarifFournisseur 
   property FactoryFamilleTarifFournisseur:IBITypeObjectFactory read Get_FactoryFamilleTarifFournisseur;
    // ModeleTousDomaine : property Modèle tous domaine 
   property ModeleTousDomaine:IBOModele2 read Get_ModeleTousDomaine write Set_ModeleTousDomaine;
    // ModeleAchat : property Modèle Domaine Achat 
   property ModeleAchat:IBOModele2 read Get_ModeleAchat write Set_ModeleAchat;
    // ModeleVente : property Modèle Domaine Vente 
   property ModeleVente:IBOModele2 read Get_ModeleVente write Set_ModeleVente;
    // ModeleStock : property Modèle Domaine Stock 
   property ModeleStock:IBOModele2 read Get_ModeleStock write Set_ModeleStock;
    // ModeleComptoir : property Modèle Domaine Comptoir 
   property ModeleComptoir:IBOModele2 read Get_ModeleComptoir write Set_ModeleComptoir;
    // ModeleInterne : property Modèle Domaine Interne 
   property ModeleInterne:IBOModele2 read Get_ModeleInterne write Set_ModeleInterne;
    // Catalogue : property Catalogue 
   property Catalogue:IBPProduit2 read Get_Catalogue write Set_Catalogue;
    // FA_Nature : property FA_Nature 
   property FA_Nature:FamilleNatureType read Get_FA_Nature write Set_FA_Nature;
    // FA_NbColis : property FA_NbColis 
   property FA_NbColis:Smallint read Get_FA_NbColis write Set_FA_NbColis;
    // FA_SousTraitance : property FA_SousTraitance 
   property FA_SousTraitance:WordBool read Get_FA_SousTraitance write Set_FA_SousTraitance;
    // FA_Fictif : property FA_Fictif 
   property FA_Fictif:WordBool read Get_FA_Fictif write Set_FA_Fictif;
    // FA_Criticite : property FA_Criticite 
   property FA_Criticite:FamilleCriticiteType read Get_FA_Criticite write Set_FA_Criticite;
  end;


// IBOFamille3 : IBOFamille3 Interface

 IBOFamille3Disp = dispinterface
   ['{8F8ABB37-5FD5-4AD8-860D-30F6D8C6BF31}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryFamille : property FactoryFamille 
   property FactoryFamille:IBOFamilleFactory2  readonly dispid 100;
    // FactoryFamilleParamCompta : property FactoryFamilleParamCompta 
   property FactoryFamilleParamCompta:IBITypeObjectFactory  readonly dispid 101;
    // FA_CodeFamille : property FA_CodeFamille 
   property FA_CodeFamille:WideString dispid 102;
    // FA_Type : property FA_Type 
   property FA_Type:FamilleType dispid 103;
    // FA_Intitule : property FA_Intitule 
   property FA_Intitule:WideString dispid 104;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 105;
    // Produit : property Produit 
   property Produit:IBPProduit2 dispid 106;
    // FA_Coef : property FA_Coef 
   property FA_Coef:Double dispid 107;
    // FA_SuiviStock : property FA_SuiviStock 
   property FA_SuiviStock:SuiviStockType dispid 108;
    // FA_Garantie : property FA_Garantie 
   property FA_Garantie:Smallint dispid 109;
    // FamilleCentral : property FamilleCentral 
   property FamilleCentral:IBOFamille3 dispid 110;
    // FA_Stat : property FA_Stat 
   property FA_Stat[sElt:Smallint]:WideString dispid 111;
    // FA_CodeFiscal : property FA_CodeFiscal 
   property FA_CodeFiscal:WideString dispid 112;
    // FA_Pays : property FA_Pays 
   property FA_Pays:WideString dispid 113;
    // FA_UnitePoids : property FA_UnitePoids 
   property FA_UnitePoids:UnitePoidsType dispid 114;
    // FA_Escompte : property FA_Escompte 
   property FA_Escompte:WordBool dispid 115;
    // FA_Delai : property FA_Delai 
   property FA_Delai:Smallint dispid 116;
    // FA_HorsStat : property FA_HorsStat 
   property FA_HorsStat:WordBool dispid 117;
    // FA_VteDebit : property FA_VteDebit 
   property FA_VteDebit:WordBool dispid 118;
    // FA_NotImp : property FA_NotImp 
   property FA_NotImp:WordBool dispid 119;
    // Frais : property Frais 
   property Frais:IFrais2 dispid 120;
    // FA_Contremarque : property FA_Contremarque 
   property FA_Contremarque:WordBool dispid 121;
    // FA_FactPoids : property FA_FactPoids 
   property FA_FactPoids:WordBool dispid 122;
    // FA_FactForfait : property FA_FactForfait 
   property FA_FactForfait:WordBool dispid 123;
    // FA_Publie : property FA_Publie 
   property FA_Publie:WordBool dispid 124;
    // FactoryFamilleTarifCategorie : property FactoryFamilleTarifCategorie 
   property FactoryFamilleTarifCategorie:IBITypeObjectFactory  readonly dispid 125;
    // FactoryFamilleTarifClient : property FactoryFamilleTarifClient 
   property FactoryFamilleTarifClient:IBITypeObjectFactory  readonly dispid 126;
    // FactoryFamilleTarifFournisseur : property FactoryFamilleTarifFournisseur 
   property FactoryFamilleTarifFournisseur:IBITypeObjectFactory  readonly dispid 127;
    // ModeleTousDomaine : property Modèle tous domaine 
   property ModeleTousDomaine:IBOModele2 dispid 128;
    // ModeleAchat : property Modèle Domaine Achat 
   property ModeleAchat:IBOModele2 dispid 129;
    // ModeleVente : property Modèle Domaine Vente 
   property ModeleVente:IBOModele2 dispid 130;
    // ModeleStock : property Modèle Domaine Stock 
   property ModeleStock:IBOModele2 dispid 131;
    // ModeleComptoir : property Modèle Domaine Comptoir 
   property ModeleComptoir:IBOModele2 dispid 132;
    // ModeleInterne : property Modèle Domaine Interne 
   property ModeleInterne:IBOModele2 dispid 133;
    // Catalogue : property Catalogue 
   property Catalogue:IBPProduit2 dispid 134;
    // FA_Nature : property FA_Nature 
   property FA_Nature:FamilleNatureType dispid 135;
    // FA_NbColis : property FA_NbColis 
   property FA_NbColis:Smallint dispid 136;
    // FA_SousTraitance : property FA_SousTraitance 
   property FA_SousTraitance:WordBool dispid 137;
    // FA_Fictif : property FA_Fictif 
   property FA_Fictif:WordBool dispid 138;
    // FA_Criticite : property FA_Criticite 
   property FA_Criticite:FamilleCriticiteType dispid 139;
  end;


// IBOFamilleFactory2 : IBOFamilleFactory2 Interface

 IBOFamilleFactory2 = interface(IBITypeObjectFactory)
   ['{B6F2B040-5FF8-439D-8888-0EF811BD5744}']
    // ExistCode : methode ExistCode 
   function ExistCode(fType:FamilleType;sNum:WideString):WordBool;safecall;
    // ReadCode : methode ReadCode 
   function ReadCode(fType:FamilleType;sNum:WideString):IBOFamille3;safecall;
    // QueryCatalogue : methode QueryCatalogue 
   function QueryCatalogue(pProduit:IBPProduit2):IBICollection;safecall;
  end;


// IBOFamilleFactory2 : IBOFamilleFactory2 Interface

 IBOFamilleFactory2Disp = dispinterface
   ['{B6F2B040-5FF8-439D-8888-0EF811BD5744}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistCode : methode ExistCode 
   function ExistCode(fType:FamilleType;sNum:WideString):WordBool;dispid 10;
    // ReadCode : methode ReadCode 
   function ReadCode(fType:FamilleType;sNum:WideString):IBOFamille3;dispid 11;
    // QueryCatalogue : methode QueryCatalogue 
   function QueryCatalogue(pProduit:IBPProduit2):IBICollection;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPProduit2 : IBPProduit2 Interface

 IBPProduit2 = interface(IBIPersistObject)
   ['{FE278BBF-4234-43EB-A81B-FF0A92107279}']
   function Get_FactoryProduit : IBPProduitFactory2; safecall;
   function Get_CP_Intitule : WideString; safecall;
   procedure Set_CP_Intitule(const pVal:WideString); safecall;
   function Get_CP_Stock : WordBool; safecall;
   procedure Set_CP_Stock(const pVal:WordBool); safecall;
   function Get_FactorySousCatalogue : IBPProduitFactory2; safecall;
   function Get_CL_Code : WideString; safecall;
   procedure Set_CL_Code(const pVal:WideString); safecall;
   function Get_CatalogueParent : IBPProduit2; safecall;
    // FactoryProduit : property FactoryProduit 
   property FactoryProduit:IBPProduitFactory2 read Get_FactoryProduit;
    // CP_Intitule : property CP_Intitule 
   property CP_Intitule:WideString read Get_CP_Intitule write Set_CP_Intitule;
    // CP_Stock : property CP_Stock 
   property CP_Stock:WordBool read Get_CP_Stock write Set_CP_Stock;
    // FactorySousCatalogue : property FactorySousCatalogue 
   property FactorySousCatalogue:IBPProduitFactory2 read Get_FactorySousCatalogue;
    // CL_Code : property CL_Code 
   property CL_Code:WideString read Get_CL_Code write Set_CL_Code;
    // CatalogueParent : property CatalogueParent 
   property CatalogueParent:IBPProduit2 read Get_CatalogueParent;
  end;


// IBPProduit2 : IBPProduit2 Interface

 IBPProduit2Disp = dispinterface
   ['{FE278BBF-4234-43EB-A81B-FF0A92107279}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryProduit : property FactoryProduit 
   property FactoryProduit:IBPProduitFactory2  readonly dispid 100;
    // CP_Intitule : property CP_Intitule 
   property CP_Intitule:WideString dispid 101;
    // CP_Stock : property CP_Stock 
   property CP_Stock:WordBool dispid 102;
    // FactorySousCatalogue : property FactorySousCatalogue 
   property FactorySousCatalogue:IBPProduitFactory2  readonly dispid 103;
    // CL_Code : property CL_Code 
   property CL_Code:WideString dispid 104;
    // CatalogueParent : property CatalogueParent 
   property CatalogueParent:IBPProduit2  readonly dispid 105;
  end;


// IBPProduitFactory2 : IBPProduitFactory2 Interface

 IBPProduitFactory2 = interface(IBITypeObjectFactory)
   ['{EFB726BF-32CF-4168-9A5C-33A8E74A499C}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPProduit2;safecall;
  end;


// IBPProduitFactory2 : IBPProduitFactory2 Interface

 IBPProduitFactory2Disp = dispinterface
   ['{EFB726BF-32CF-4168-9A5C-33A8E74A499C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPProduit2;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPUnite : IBPUnite Interface

 IBPUnite = interface(IBIPersistObject)
   ['{D5E5967F-96F9-4507-816C-D3DB7157ED64}']
   function Get_FactoryUnite : IBPUniteFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_CorrespondancePlanning : WordBool; safecall;
   procedure Set_CorrespondancePlanning(const pVal:WordBool); safecall;
   function Get_NbUnite : Smallint; safecall;
   procedure Set_NbUnite(const pVal:Smallint); safecall;
   function Get_UniteTemps : UnitePlanning; safecall;
   procedure Set_UniteTemps(const pVal:UnitePlanning); safecall;
    // FactoryUnite : property FactoryUnite 
   property FactoryUnite:IBPUniteFactory read Get_FactoryUnite;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // CorrespondancePlanning : property CorrespondancePlanning 
   property CorrespondancePlanning:WordBool read Get_CorrespondancePlanning write Set_CorrespondancePlanning;
    // NbUnite : property NbUnite 
   property NbUnite:Smallint read Get_NbUnite write Set_NbUnite;
    // UniteTemps : property UniteTemps 
   property UniteTemps:UnitePlanning read Get_UniteTemps write Set_UniteTemps;
  end;


// IBPUnite : IBPUnite Interface

 IBPUniteDisp = dispinterface
   ['{D5E5967F-96F9-4507-816C-D3DB7157ED64}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryUnite : property FactoryUnite 
   property FactoryUnite:IBPUniteFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // CorrespondancePlanning : property CorrespondancePlanning 
   property CorrespondancePlanning:WordBool dispid 102;
    // NbUnite : property NbUnite 
   property NbUnite:Smallint dispid 103;
    // UniteTemps : property UniteTemps 
   property UniteTemps:UnitePlanning dispid 104;
  end;


// IBPUniteFactory : IBPUniteFactory Interface

 IBPUniteFactory = interface(IBITypeObjectFactory)
   ['{17DF42EF-AB95-4200-9114-7D4E5A3ED034}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPUnite;safecall;
  end;


// IBPUniteFactory : IBPUniteFactory Interface

 IBPUniteFactoryDisp = dispinterface
   ['{17DF42EF-AB95-4200-9114-7D4E5A3ED034}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPUnite;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOModele2 : IBOModele2 Interface

 IBOModele2 = interface(IBIPersistObject)
   ['{DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}']
   function Get_FactoryModele : IBOModeleFactory; safecall;
   function Get_MO_Intitule : WideString; safecall;
   procedure Set_MO_Intitule(const pVal:WideString); safecall;
   function Get_MO_Calcul : WideString; safecall;
   procedure Set_MO_Calcul(const pVal:WideString); safecall;
    // FactoryModele : property FactoryModele 
   property FactoryModele:IBOModeleFactory read Get_FactoryModele;
    // MO_Intitule : property MO_Intitule 
   property MO_Intitule:WideString read Get_MO_Intitule write Set_MO_Intitule;
    // MO_Calcul : property MO_Calcul 
   property MO_Calcul:WideString read Get_MO_Calcul write Set_MO_Calcul;
  end;


// IBOModele2 : IBOModele2 Interface

 IBOModele2Disp = dispinterface
   ['{DCFAB54C-F238-4B5D-A8FC-E368FB2B0CD2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModele : property FactoryModele 
   property FactoryModele:IBOModeleFactory  readonly dispid 100;
    // MO_Intitule : property MO_Intitule 
   property MO_Intitule:WideString dispid 101;
    // MO_Calcul : property MO_Calcul 
   property MO_Calcul:WideString dispid 102;
  end;


// IBOModeleFactory : IBOModeleFactory Interface

 IBOModeleFactory = interface(IBITypeObjectFactory)
   ['{D4306949-E667-4D20-8A94-317296689089}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBOModele2;safecall;
  end;


// IBOModeleFactory : IBOModeleFactory Interface

 IBOModeleFactoryDisp = dispinterface
   ['{D4306949-E667-4D20-8A94-317296689089}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBOModele2;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOBaremeSolde : IBOBaremeSolde Interface

 IBOBaremeSolde = interface(IBIPersistObject)
   ['{DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}']
   function Get_FactoryBaremeSolde : IBOBaremeSoldeFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_DateDebut : TDateTime; safecall;
   procedure Set_DateDebut(const pVal:TDateTime); safecall;
   function Get_DateFin : TDateTime; safecall;
   procedure Set_DateFin(const pVal:TDateTime); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
   function Get_type_ : BaremeSoldeType; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
   procedure Set_Fournisseur(const pObject:IBOFournisseur3); safecall;
    // FactoryBaremeSolde : property FactoryBaremeSolde 
   property FactoryBaremeSolde:IBOBaremeSoldeFactory read Get_FactoryBaremeSolde;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime read Get_DateDebut write Set_DateDebut;
    // DateFin : property DateFin 
   property DateFin:TDateTime read Get_DateFin write Set_DateFin;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
    // type : property Type 
   property type_:BaremeSoldeType read Get_type_;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
  end;


// IBOBaremeSolde : IBOBaremeSolde Interface

 IBOBaremeSoldeDisp = dispinterface
   ['{DF7C73E9-09F8-4A3E-A678-37C12B0DF31F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryBaremeSolde : property FactoryBaremeSolde 
   property FactoryBaremeSolde:IBOBaremeSoldeFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime dispid 102;
    // DateFin : property DateFin 
   property DateFin:TDateTime dispid 103;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 104;
    // type : property Type 
   property type_:BaremeSoldeType  readonly dispid 105;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 dispid 106;
  end;


// IBOBaremeSoldeFactory : IBOBaremeSoldeFactory Interface

 IBOBaremeSoldeFactory = interface(IBITypeObjectFactory)
   ['{4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOBaremeSolde;safecall;
    // QueryApplicableDate : methode QueryApplicableDate 
   function QueryApplicableDate(dVal:TDateTime):IBICollection;safecall;
    // QueryApplicableArticleDate : methode QueryApplicableArticleDate 
   function QueryApplicableArticleDate(pArticle:IBOArticle3;dVal:TDateTime):IBICollection;safecall;
  end;


// IBOBaremeSoldeFactory : IBOBaremeSoldeFactory Interface

 IBOBaremeSoldeFactoryDisp = dispinterface
   ['{4ADADBE9-4B6F-4451-8A97-A2C03083EBEA}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOBaremeSolde;dispid 11;
    // QueryApplicableDate : methode QueryApplicableDate 
   function QueryApplicableDate(dVal:TDateTime):IBICollection;dispid 12;
    // QueryApplicableArticleDate : methode QueryApplicableArticleDate 
   function QueryApplicableArticleDate(pArticle:IBOArticle3;dVal:TDateTime):IBICollection;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOTiers3 : IBOTiers3 Interface

 IBOTiers3 = interface(IBIPersistObject)
   ['{CA651533-8F26-41F2-B0D5-855956FDA70F}']
   function Get_FactoryTiers : IBOTiersFactory3; safecall;
   function Get_FactoryTiersBanque : IBITypeObjectFactory; safecall;
   function Get_FactoryTiersReglement : IBITypeObjectFactory; safecall;
   function Get_FactoryTiersContact : IBITypeObjectFactory; safecall;
   function Get_FactoryTiersCompteG : IBOTiersCompteGFactory3; safecall;
   function Get_FactoryTiersMedia : IBITypeObjectFactory; safecall;
   function Get_CT_Num : WideString; safecall;
   procedure Set_CT_Num(const pVal:WideString); safecall;
   function Get_CT_Intitule : WideString; safecall;
   procedure Set_CT_Intitule(const pVal:WideString); safecall;
   function Get_CT_Type : TiersType; safecall;
   function Get_CompteGPrinc : IBOCompteG3; safecall;
   procedure Set_CompteGPrinc(const pCompteG:IBOCompteG3); safecall;
   function Get_CT_Qualite : WideString; safecall;
   procedure Set_CT_Qualite(const pVal:WideString); safecall;
   function Get_CT_Classement : WideString; safecall;
   procedure Set_CT_Classement(const pVal:WideString); safecall;
   function Get_CT_Contact : WideString; safecall;
   procedure Set_CT_Contact(const pVal:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_CT_Raccourci : WideString; safecall;
   procedure Set_CT_Raccourci(const pVal:WideString); safecall;
   function Get_BanquePrincipale : IBOTiersBanque3; safecall;
   procedure Set_BanquePrincipale(const pTiersBanque:IBOTiersBanque3); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_CT_Ape : WideString; safecall;
   procedure Set_CT_Ape(const pVal:WideString); safecall;
   function Get_CT_Identifiant : WideString; safecall;
   procedure Set_CT_Identifiant(const pVal:WideString); safecall;
   function Get_CT_Siret : WideString; safecall;
   procedure Set_CT_Siret(const pVal:WideString); safecall;
   function Get_CT_Stat(sElt:Smallint) : WideString; safecall;
   procedure Set_CT_Stat(const sElt:Smallint; const parCT_Stat:WideString); safecall;
   function Get_CT_Commentaire : WideString; safecall;
   procedure Set_CT_Commentaire(const pVal:WideString); safecall;
   function Get_CT_Langue : LangueType; safecall;
   procedure Set_CT_Langue(const pVal:LangueType); safecall;
   function Get_CT_DateCreate : TDateTime; safecall;
   function Get_CT_SautLigne : Smallint; safecall;
   procedure Set_CT_SautLigne(const pVal:Smallint); safecall;
   function Get_CT_SautPage : WordBool; safecall;
   procedure Set_CT_SautPage(const pVal:WordBool); safecall;
   function Get_CT_Lettrage : WordBool; safecall;
   procedure Set_CT_Lettrage(const pVal:WordBool); safecall;
   function Get_CT_ValidEch : WordBool; safecall;
   procedure Set_CT_ValidEch(const pVal:WordBool); safecall;
   function Get_CT_Sommeil : WordBool; safecall;
   procedure Set_CT_Sommeil(const pVal:WordBool); safecall;
   function Get_CT_NotRappel : WordBool; safecall;
   procedure Set_CT_NotRappel(const pVal:WordBool); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
    // MvtDebit : methode MvtDebit 
   function MvtDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;safecall;
    // MvtCredit : methode MvtCredit 
   function MvtCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;safecall;
    // MvtSolde : methode MvtSolde 
   function MvtSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;safecall;
    // MvtDevDebit : methode MvtDevDebit 
   function MvtDevDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;safecall;
    // MvtDevCredit : methode MvtDevCredit 
   function MvtDevCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;safecall;
    // MvtDevSolde : methode MvtDevSolde 
   function MvtDevSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;safecall;
    // Solde : methode Solde 
   function Solde:Double;safecall;
   function Get_CompteAIFRS : IBOCompteA3; safecall;
   procedure Set_CompteAIFRS(const pCompteA:IBOCompteA3); safecall;
   function Get_InfoLibre : IBIValues; safecall;
   function Get_ModeleReglement : IBOModeleReglement; safecall;
   procedure Set_ModeleReglement(const pModeleReglement:IBOModeleReglement); safecall;
   function Get_CT_EdiCodeType : EdiCodeType; safecall;
   procedure Set_CT_EdiCodeType(const pVal:EdiCodeType); safecall;
   function Get_CT_EdiCode : WideString; safecall;
   procedure Set_CT_EdiCode(const pVal:WideString); safecall;
   function Get_CT_Facebook : WideString; safecall;
   procedure Set_CT_Facebook(const pVal:WideString); safecall;
   function Get_CT_LinkedIn : WideString; safecall;
   procedure Set_CT_LinkedIn(const pVal:WideString); safecall;
   function Get_ExclureMarketing : WordBool; safecall;
   procedure Set_ExclureMarketing(const pVal:WordBool); safecall;
   function Get_ActivateGDPR : WordBool; safecall;
    // CleanPersonalData : methode CleanPersonalData 
   procedure CleanPersonalData;safecall;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3 read Get_FactoryTiers;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory read Get_FactoryTiersBanque;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory read Get_FactoryTiersReglement;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory read Get_FactoryTiersContact;
    // FactoryTiersCompteG : property FactoryTiersCompteG 
   property FactoryTiersCompteG:IBOTiersCompteGFactory3 read Get_FactoryTiersCompteG;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory read Get_FactoryTiersMedia;
    // CT_Num : property CT_Num 
   property CT_Num:WideString read Get_CT_Num write Set_CT_Num;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString read Get_CT_Intitule write Set_CT_Intitule;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType read Get_CT_Type;
    // CompteGPrinc : property CompteGPrinc 
   property CompteGPrinc:IBOCompteG3 read Get_CompteGPrinc write Set_CompteGPrinc;
    // CT_Qualite : property CT_Qualite 
   property CT_Qualite:WideString read Get_CT_Qualite write Set_CT_Qualite;
    // CT_Classement : property CT_Classement 
   property CT_Classement:WideString read Get_CT_Classement write Set_CT_Classement;
    // CT_Contact : property CT_Contact 
   property CT_Contact:WideString read Get_CT_Contact write Set_CT_Contact;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // CT_Raccourci : property CT_Raccourci 
   property CT_Raccourci:WideString read Get_CT_Raccourci write Set_CT_Raccourci;
    // BanquePrincipale : property BanquePrincipale 
   property BanquePrincipale:IBOTiersBanque3 read Get_BanquePrincipale write Set_BanquePrincipale;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // CT_Ape : property CT_Ape 
   property CT_Ape:WideString read Get_CT_Ape write Set_CT_Ape;
    // CT_Identifiant : property CT_Identifiant 
   property CT_Identifiant:WideString read Get_CT_Identifiant write Set_CT_Identifiant;
    // CT_Siret : property CT_Siret 
   property CT_Siret:WideString read Get_CT_Siret write Set_CT_Siret;
    // CT_Stat : property CT_Stat 
   property CT_Stat[sElt:Smallint]:WideString read Get_CT_Stat write Set_CT_Stat;
    // CT_Commentaire : property CT_Commentaire 
   property CT_Commentaire:WideString read Get_CT_Commentaire write Set_CT_Commentaire;
    // CT_Langue : property CT_Langue 
   property CT_Langue:LangueType read Get_CT_Langue write Set_CT_Langue;
    // CT_DateCreate : property CT_DateCreate 
   property CT_DateCreate:TDateTime read Get_CT_DateCreate;
    // CT_SautLigne : property CT_SautLigne 
   property CT_SautLigne:Smallint read Get_CT_SautLigne write Set_CT_SautLigne;
    // CT_SautPage : property CT_SautPage 
   property CT_SautPage:WordBool read Get_CT_SautPage write Set_CT_SautPage;
    // CT_Lettrage : property CT_Lettrage 
   property CT_Lettrage:WordBool read Get_CT_Lettrage write Set_CT_Lettrage;
    // CT_ValidEch : property CT_ValidEch 
   property CT_ValidEch:WordBool read Get_CT_ValidEch write Set_CT_ValidEch;
    // CT_Sommeil : property CT_Sommeil 
   property CT_Sommeil:WordBool read Get_CT_Sommeil write Set_CT_Sommeil;
    // CT_NotRappel : property CT_NotRappel 
   property CT_NotRappel:WordBool read Get_CT_NotRappel write Set_CT_NotRappel;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 read Get_CompteAIFRS write Set_CompteAIFRS;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement read Get_ModeleReglement write Set_ModeleReglement;
    // CT_EdiCodeType : property CT_EdiCodeType 
   property CT_EdiCodeType:EdiCodeType read Get_CT_EdiCodeType write Set_CT_EdiCodeType;
    // CT_EdiCode : property CT_EdiCode 
   property CT_EdiCode:WideString read Get_CT_EdiCode write Set_CT_EdiCode;
    // CT_Facebook : property CT_Facebook 
   property CT_Facebook:WideString read Get_CT_Facebook write Set_CT_Facebook;
    // CT_LinkedIn : property CT_LinkedIn 
   property CT_LinkedIn:WideString read Get_CT_LinkedIn write Set_CT_LinkedIn;
    // ExclureMarketing : property ExclureMarketing 
   property ExclureMarketing:WordBool read Get_ExclureMarketing write Set_ExclureMarketing;
    // ActivateGDPR : property ActivateGDPR 
   property ActivateGDPR:WordBool read Get_ActivateGDPR;
  end;


// IBOTiers3 : IBOTiers3 Interface

 IBOTiers3Disp = dispinterface
   ['{CA651533-8F26-41F2-B0D5-855956FDA70F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // MvtDebit : methode MvtDebit 
   function MvtDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 143;
    // MvtCredit : methode MvtCredit 
   function MvtCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 144;
    // MvtSolde : methode MvtSolde 
   function MvtSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 145;
    // MvtDevDebit : methode MvtDevDebit 
   function MvtDevDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 146;
    // MvtDevCredit : methode MvtDevCredit 
   function MvtDevCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 147;
    // MvtDevSolde : methode MvtDevSolde 
   function MvtDevSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 148;
    // Solde : methode Solde 
   function Solde:Double;dispid 149;
    // CleanPersonalData : methode CleanPersonalData 
   procedure CleanPersonalData;dispid 159;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3  readonly dispid 100;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory  readonly dispid 101;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory  readonly dispid 102;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory  readonly dispid 103;
    // FactoryTiersCompteG : property FactoryTiersCompteG 
   property FactoryTiersCompteG:IBOTiersCompteGFactory3  readonly dispid 104;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory  readonly dispid 105;
    // CT_Num : property CT_Num 
   property CT_Num:WideString dispid 106;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString dispid 107;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType  readonly dispid 108;
    // CompteGPrinc : property CompteGPrinc 
   property CompteGPrinc:IBOCompteG3 dispid 109;
    // CT_Qualite : property CT_Qualite 
   property CT_Qualite:WideString dispid 110;
    // CT_Classement : property CT_Classement 
   property CT_Classement:WideString dispid 111;
    // CT_Contact : property CT_Contact 
   property CT_Contact:WideString dispid 112;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 113;
    // CT_Raccourci : property CT_Raccourci 
   property CT_Raccourci:WideString dispid 119;
    // BanquePrincipale : property BanquePrincipale 
   property BanquePrincipale:IBOTiersBanque3 dispid 120;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 121;
    // CT_Ape : property CT_Ape 
   property CT_Ape:WideString dispid 122;
    // CT_Identifiant : property CT_Identifiant 
   property CT_Identifiant:WideString dispid 123;
    // CT_Siret : property CT_Siret 
   property CT_Siret:WideString dispid 124;
    // CT_Stat : property CT_Stat 
   property CT_Stat[sElt:Smallint]:WideString dispid 125;
    // CT_Commentaire : property CT_Commentaire 
   property CT_Commentaire:WideString dispid 126;
    // CT_Langue : property CT_Langue 
   property CT_Langue:LangueType dispid 128;
    // CT_DateCreate : property CT_DateCreate 
   property CT_DateCreate:TDateTime  readonly dispid 132;
    // CT_SautLigne : property CT_SautLigne 
   property CT_SautLigne:Smallint dispid 133;
    // CT_SautPage : property CT_SautPage 
   property CT_SautPage:WordBool dispid 134;
    // CT_Lettrage : property CT_Lettrage 
   property CT_Lettrage:WordBool dispid 135;
    // CT_ValidEch : property CT_ValidEch 
   property CT_ValidEch:WordBool dispid 136;
    // CT_Sommeil : property CT_Sommeil 
   property CT_Sommeil:WordBool dispid 137;
    // CT_NotRappel : property CT_NotRappel 
   property CT_NotRappel:WordBool dispid 138;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 139;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 150;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 151;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement dispid 152;
    // CT_EdiCodeType : property CT_EdiCodeType 
   property CT_EdiCodeType:EdiCodeType dispid 153;
    // CT_EdiCode : property CT_EdiCode 
   property CT_EdiCode:WideString dispid 154;
    // CT_Facebook : property CT_Facebook 
   property CT_Facebook:WideString dispid 155;
    // CT_LinkedIn : property CT_LinkedIn 
   property CT_LinkedIn:WideString dispid 156;
    // ExclureMarketing : property ExclureMarketing 
   property ExclureMarketing:WordBool dispid 157;
    // ActivateGDPR : property ActivateGDPR 
   property ActivateGDPR:WordBool  readonly dispid 158;
  end;


// IBOTiersPart3 : IBOTiersPart3 Interface

 IBOTiersPart3 = interface(IBOTiers3)
   ['{F5C77FD4-4820-4AFD-AD17-194C8998EAFB}']
   function Get_TiersPayeur : IBOTiersPart3; safecall;
   procedure Set_TiersPayeur(const pTiers:IBOTiersPart3); safecall;
   function Get_CT_Encours : Double; safecall;
   procedure Set_CT_Encours(const pVal:Double); safecall;
   function Get_CategorieCompta : IBICategorieCompta; safecall;
   procedure Set_CategorieCompta(const pCategorieCompta:IBICategorieCompta); safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pDepot:IBODepot3); safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pCompteA:IBOCompteA3); safecall;
   function Get_CT_Coface : WideString; safecall;
   procedure Set_CT_Coface(const pVal:WideString); safecall;
   function Get_CT_Surveillance : WordBool; safecall;
   procedure Set_CT_Surveillance(const pVal:WordBool); safecall;
   function Get_CT_SvDateCreate : TDateTime; safecall;
   function Get_CT_SvFormeJuri : WideString; safecall;
   function Get_CT_SvEffectif : WideString; safecall;
   function Get_CT_SvCA : Double; safecall;
   function Get_CT_SvResultat : Double; safecall;
   function Get_CT_SvIncident : Smallint; safecall;
   function Get_CT_SvDateIncid : TDateTime; safecall;
   function Get_CT_SvPrivil : Smallint; safecall;
   function Get_CT_SvRegul : WideString; safecall;
   function Get_CT_SvCotation : WideString; safecall;
   function Get_CT_SvDateMaj : TDateTime; safecall;
   function Get_CT_SvObjetMaj : WideString; safecall;
   function Get_CT_SvDateBilan : TDateTime; safecall;
   function Get_CT_SvNbMoisBilan : Smallint; safecall;
    // CA_HTBrut : methode CA_HTBrut 
   function CA_HTBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // CA_HTNet : methode CA_HTNet 
   function CA_HTNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // CA_TTC : methode CA_TTC 
   function CA_TTC(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalPrixRevient : methode TotalPrixRevient 
   function TotalPrixRevient(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalQtes : methode TotalQtes 
   function TotalQtes(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalQtesColises : methode TotalQtesColises 
   function TotalQtesColises(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalPoidsNet : methode TotalPoidsNet 
   function TotalPoidsNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TotalPoidsBrut : methode TotalPoidsBrut 
   function TotalPoidsBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // TauxRemiseMoyen : methode TauxRemiseMoyen 
   function TauxRemiseMoyen(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
    // SoldeEchus1 : methode SoldeEchus1 
   function SoldeEchus1:Double;safecall;
    // SoldeEchus2 : methode SoldeEchus2 
   function SoldeEchus2:Double;safecall;
    // SoldeEchus3 : methode SoldeEchus3 
   function SoldeEchus3:Double;safecall;
    // SoldeNonEchus : methode SoldeNonEchus 
   function SoldeNonEchus:Double;safecall;
    // DepassementEncours : methode DepassementEncours 
   function DepassementEncours:Double;safecall;
    // DepassementEncours2 : methode DepassementEncours2 
   function DepassementEncours2:Double;safecall;
    // Portefeuille : methode Portefeuille 
   function Portefeuille:Double;safecall;
    // PortefeuilleCommande : methode PortefeuilleCommande 
   function PortefeuilleCommande:Double;safecall;
    // TotalReglement : methode TotalReglement 
   function TotalReglement:Double;safecall;
    // DerniereFacture : methode DerniereFacture 
   function DerniereFacture:TDateTime;safecall;
    // DernierReglement : methode DernierReglement 
   function DernierReglement:TDateTime;safecall;
   function Get_TauxRemise : Double; safecall;
   procedure Set_TauxRemise(const pVal:Double); safecall;
   function Get_TauxEscompte : Double; safecall;
   procedure Set_TauxEscompte(const pVal:Double); safecall;
   function Get_TauxReleve : Double; safecall;
   procedure Set_TauxReleve(const pVal:Double); safecall;
   function Get_TauxRFA : Double; safecall;
   procedure Set_TauxRFA(const pVal:Double); safecall;
   function Get_CT_DateFermetureDebut : TDateTime; safecall;
   procedure Set_CT_DateFermetureDebut(const pVal:TDateTime); safecall;
   function Get_CT_DateFermetureFin : TDateTime; safecall;
   procedure Set_CT_DateFermetureFin(const pVal:TDateTime); safecall;
   function Get_Representant : IBOCollaborateur; safecall;
   procedure Set_Representant(const pCollaborateur:IBOCollaborateur); safecall;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 read Get_TiersPayeur write Set_TiersPayeur;
    // CT_Encours : property CT_Encours 
   property CT_Encours:Double read Get_CT_Encours write Set_CT_Encours;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // CT_Coface : property CT_Coface 
   property CT_Coface:WideString read Get_CT_Coface write Set_CT_Coface;
    // CT_Surveillance : property CT_Surveillance 
   property CT_Surveillance:WordBool read Get_CT_Surveillance write Set_CT_Surveillance;
    // CT_SvDateCreate : property CT_SvDateCreate 
   property CT_SvDateCreate:TDateTime read Get_CT_SvDateCreate;
    // CT_SvFormeJuri : property CT_SvFormeJuri 
   property CT_SvFormeJuri:WideString read Get_CT_SvFormeJuri;
    // CT_SvEffectif : property CT_SvEffectif 
   property CT_SvEffectif:WideString read Get_CT_SvEffectif;
    // CT_SvCA : property CT_SvCA 
   property CT_SvCA:Double read Get_CT_SvCA;
    // CT_SvResultat : property CT_SvResultat 
   property CT_SvResultat:Double read Get_CT_SvResultat;
    // CT_SvIncident : property CT_SvIncident 
   property CT_SvIncident:Smallint read Get_CT_SvIncident;
    // CT_SvDateIncid : property CT_SvDateIncid 
   property CT_SvDateIncid:TDateTime read Get_CT_SvDateIncid;
    // CT_SvPrivil : property CT_SvPrivil 
   property CT_SvPrivil:Smallint read Get_CT_SvPrivil;
    // CT_SvRegul : property CT_SvRegul 
   property CT_SvRegul:WideString read Get_CT_SvRegul;
    // CT_SvCotation : property CT_SvCotation 
   property CT_SvCotation:WideString read Get_CT_SvCotation;
    // CT_SvDateMaj : property CT_SvDateMaj 
   property CT_SvDateMaj:TDateTime read Get_CT_SvDateMaj;
    // CT_SvObjetMaj : property CT_SvObjetMaj 
   property CT_SvObjetMaj:WideString read Get_CT_SvObjetMaj;
    // CT_SvDateBilan : property CT_SvDateBilan 
   property CT_SvDateBilan:TDateTime read Get_CT_SvDateBilan;
    // CT_SvNbMoisBilan : property CT_SvNbMoisBilan 
   property CT_SvNbMoisBilan:Smallint read Get_CT_SvNbMoisBilan;
    // TauxRemise : property TauxRemise 
   property TauxRemise:Double read Get_TauxRemise write Set_TauxRemise;
    // TauxEscompte : property TauxEscompte 
   property TauxEscompte:Double read Get_TauxEscompte write Set_TauxEscompte;
    // TauxReleve : property TauxReleve 
   property TauxReleve:Double read Get_TauxReleve write Set_TauxReleve;
    // TauxRFA : property TauxRFA 
   property TauxRFA:Double read Get_TauxRFA write Set_TauxRFA;
    // CT_DateFermetureDebut : property CT_DateFermetureDebut 
   property CT_DateFermetureDebut:TDateTime read Get_CT_DateFermetureDebut write Set_CT_DateFermetureDebut;
    // CT_DateFermetureFin : property CT_DateFermetureFin 
   property CT_DateFermetureFin:TDateTime read Get_CT_DateFermetureFin write Set_CT_DateFermetureFin;
    // Representant : property Representant 
   property Representant:IBOCollaborateur read Get_Representant write Set_Representant;
  end;

// IBOTiersPart3 : IBOTiersPart3 Interface

 IBOTiersPart3Disp = dispinterface
   ['{F5C77FD4-4820-4AFD-AD17-194C8998EAFB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // MvtDebit : methode MvtDebit 
   function MvtDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 143;
    // MvtCredit : methode MvtCredit 
   function MvtCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 144;
    // MvtSolde : methode MvtSolde 
   function MvtSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 145;
    // MvtDevDebit : methode MvtDevDebit 
   function MvtDevDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 146;
    // MvtDevCredit : methode MvtDevCredit 
   function MvtDevCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 147;
    // MvtDevSolde : methode MvtDevSolde 
   function MvtDevSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 148;
    // Solde : methode Solde 
   function Solde:Double;dispid 149;
    // CleanPersonalData : methode CleanPersonalData 
   procedure CleanPersonalData;dispid 159;
    // CA_HTBrut : methode CA_HTBrut 
   function CA_HTBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 220;
    // CA_HTNet : methode CA_HTNet 
   function CA_HTNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 221;
    // CA_TTC : methode CA_TTC 
   function CA_TTC(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 222;
    // TotalPrixRevient : methode TotalPrixRevient 
   function TotalPrixRevient(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 223;
    // TotalQtes : methode TotalQtes 
   function TotalQtes(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 224;
    // TotalQtesColises : methode TotalQtesColises 
   function TotalQtesColises(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 225;
    // TotalPoidsNet : methode TotalPoidsNet 
   function TotalPoidsNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 226;
    // TotalPoidsBrut : methode TotalPoidsBrut 
   function TotalPoidsBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 227;
    // TauxRemiseMoyen : methode TauxRemiseMoyen 
   function TauxRemiseMoyen(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 229;
    // SoldeEchus1 : methode SoldeEchus1 
   function SoldeEchus1:Double;dispid 230;
    // SoldeEchus2 : methode SoldeEchus2 
   function SoldeEchus2:Double;dispid 231;
    // SoldeEchus3 : methode SoldeEchus3 
   function SoldeEchus3:Double;dispid 232;
    // SoldeNonEchus : methode SoldeNonEchus 
   function SoldeNonEchus:Double;dispid 233;
    // DepassementEncours : methode DepassementEncours 
   function DepassementEncours:Double;dispid 234;
    // DepassementEncours2 : methode DepassementEncours2 
   function DepassementEncours2:Double;dispid 235;
    // Portefeuille : methode Portefeuille 
   function Portefeuille:Double;dispid 236;
    // PortefeuilleCommande : methode PortefeuilleCommande 
   function PortefeuilleCommande:Double;dispid 237;
    // TotalReglement : methode TotalReglement 
   function TotalReglement:Double;dispid 238;
    // DerniereFacture : methode DerniereFacture 
   function DerniereFacture:TDateTime;dispid 239;
    // DernierReglement : methode DernierReglement 
   function DernierReglement:TDateTime;dispid 240;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3  readonly dispid 100;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory  readonly dispid 101;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory  readonly dispid 102;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory  readonly dispid 103;
    // FactoryTiersCompteG : property FactoryTiersCompteG 
   property FactoryTiersCompteG:IBOTiersCompteGFactory3  readonly dispid 104;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory  readonly dispid 105;
    // CT_Num : property CT_Num 
   property CT_Num:WideString dispid 106;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString dispid 107;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType  readonly dispid 108;
    // CompteGPrinc : property CompteGPrinc 
   property CompteGPrinc:IBOCompteG3 dispid 109;
    // CT_Qualite : property CT_Qualite 
   property CT_Qualite:WideString dispid 110;
    // CT_Classement : property CT_Classement 
   property CT_Classement:WideString dispid 111;
    // CT_Contact : property CT_Contact 
   property CT_Contact:WideString dispid 112;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 113;
    // CT_Raccourci : property CT_Raccourci 
   property CT_Raccourci:WideString dispid 119;
    // BanquePrincipale : property BanquePrincipale 
   property BanquePrincipale:IBOTiersBanque3 dispid 120;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 121;
    // CT_Ape : property CT_Ape 
   property CT_Ape:WideString dispid 122;
    // CT_Identifiant : property CT_Identifiant 
   property CT_Identifiant:WideString dispid 123;
    // CT_Siret : property CT_Siret 
   property CT_Siret:WideString dispid 124;
    // CT_Stat : property CT_Stat 
   property CT_Stat[sElt:Smallint]:WideString dispid 125;
    // CT_Commentaire : property CT_Commentaire 
   property CT_Commentaire:WideString dispid 126;
    // CT_Langue : property CT_Langue 
   property CT_Langue:LangueType dispid 128;
    // CT_DateCreate : property CT_DateCreate 
   property CT_DateCreate:TDateTime  readonly dispid 132;
    // CT_SautLigne : property CT_SautLigne 
   property CT_SautLigne:Smallint dispid 133;
    // CT_SautPage : property CT_SautPage 
   property CT_SautPage:WordBool dispid 134;
    // CT_Lettrage : property CT_Lettrage 
   property CT_Lettrage:WordBool dispid 135;
    // CT_ValidEch : property CT_ValidEch 
   property CT_ValidEch:WordBool dispid 136;
    // CT_Sommeil : property CT_Sommeil 
   property CT_Sommeil:WordBool dispid 137;
    // CT_NotRappel : property CT_NotRappel 
   property CT_NotRappel:WordBool dispid 138;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 139;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 150;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 151;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement dispid 152;
    // CT_EdiCodeType : property CT_EdiCodeType 
   property CT_EdiCodeType:EdiCodeType dispid 153;
    // CT_EdiCode : property CT_EdiCode 
   property CT_EdiCode:WideString dispid 154;
    // CT_Facebook : property CT_Facebook 
   property CT_Facebook:WideString dispid 155;
    // CT_LinkedIn : property CT_LinkedIn 
   property CT_LinkedIn:WideString dispid 156;
    // ExclureMarketing : property ExclureMarketing 
   property ExclureMarketing:WordBool dispid 157;
    // ActivateGDPR : property ActivateGDPR 
   property ActivateGDPR:WordBool  readonly dispid 158;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 241;
    // CT_Encours : property CT_Encours 
   property CT_Encours:Double dispid 200;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 201;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 202;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 203;
    // CT_Coface : property CT_Coface 
   property CT_Coface:WideString dispid 204;
    // CT_Surveillance : property CT_Surveillance 
   property CT_Surveillance:WordBool dispid 205;
    // CT_SvDateCreate : property CT_SvDateCreate 
   property CT_SvDateCreate:TDateTime  readonly dispid 206;
    // CT_SvFormeJuri : property CT_SvFormeJuri 
   property CT_SvFormeJuri:WideString  readonly dispid 207;
    // CT_SvEffectif : property CT_SvEffectif 
   property CT_SvEffectif:WideString  readonly dispid 208;
    // CT_SvCA : property CT_SvCA 
   property CT_SvCA:Double  readonly dispid 209;
    // CT_SvResultat : property CT_SvResultat 
   property CT_SvResultat:Double  readonly dispid 210;
    // CT_SvIncident : property CT_SvIncident 
   property CT_SvIncident:Smallint  readonly dispid 211;
    // CT_SvDateIncid : property CT_SvDateIncid 
   property CT_SvDateIncid:TDateTime  readonly dispid 212;
    // CT_SvPrivil : property CT_SvPrivil 
   property CT_SvPrivil:Smallint  readonly dispid 213;
    // CT_SvRegul : property CT_SvRegul 
   property CT_SvRegul:WideString  readonly dispid 214;
    // CT_SvCotation : property CT_SvCotation 
   property CT_SvCotation:WideString  readonly dispid 215;
    // CT_SvDateMaj : property CT_SvDateMaj 
   property CT_SvDateMaj:TDateTime  readonly dispid 216;
    // CT_SvObjetMaj : property CT_SvObjetMaj 
   property CT_SvObjetMaj:WideString  readonly dispid 217;
    // CT_SvDateBilan : property CT_SvDateBilan 
   property CT_SvDateBilan:TDateTime  readonly dispid 218;
    // CT_SvNbMoisBilan : property CT_SvNbMoisBilan 
   property CT_SvNbMoisBilan:Smallint  readonly dispid 219;
    // TauxRemise : property TauxRemise 
   property TauxRemise:Double dispid 242;
    // TauxEscompte : property TauxEscompte 
   property TauxEscompte:Double dispid 243;
    // TauxReleve : property TauxReleve 
   property TauxReleve:Double dispid 244;
    // TauxRFA : property TauxRFA 
   property TauxRFA:Double dispid 245;
    // CT_DateFermetureDebut : property CT_DateFermetureDebut 
   property CT_DateFermetureDebut:TDateTime dispid 246;
    // CT_DateFermetureFin : property CT_DateFermetureFin 
   property CT_DateFermetureFin:TDateTime dispid 247;
    // Representant : property Representant 
   property Representant:IBOCollaborateur dispid 304;
  end;


// IBOFournisseur3 : IBOFournisseur3 Interface

 IBOFournisseur3 = interface(IBOTiersPart3)
   ['{3429256D-78D7-477B-9E0F-1DEC316C490D}']
   function Get_FactoryFournisseur : IBOFournisseurFactory3; safecall;
   function Get_FactoryFournisseurTarif : IBOFournisseurTarifFactory3; safecall;
   function Get_Expedition : IBPExpedition3; safecall;
   procedure Set_Expedition(const pExpedition:IBPExpedition3); safecall;
   function Get_ConditionLivraison : IBPConditionLivraison; safecall;
   procedure Set_ConditionLivraison(const pConditionLivraison:IBPConditionLivraison); safecall;
   function Get_FactoryFournisseurTarifFamille : IBOFournisseurTarifFamilleFactory; safecall;
   function Get_CT_DelaiAppro : Smallint; safecall;
   procedure Set_CT_DelaiAppro(const pVal:Smallint); safecall;
    // FactoryFournisseur : property FactoryFournisseur 
   property FactoryFournisseur:IBOFournisseurFactory3 read Get_FactoryFournisseur;
    // FactoryFournisseurTarif : property FactoryFournisseurTarif 
   property FactoryFournisseurTarif:IBOFournisseurTarifFactory3 read Get_FactoryFournisseurTarif;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 read Get_Expedition write Set_Expedition;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison read Get_ConditionLivraison write Set_ConditionLivraison;
    // FactoryFournisseurTarifFamille : property FactoryFournisseurTarifFamille 
   property FactoryFournisseurTarifFamille:IBOFournisseurTarifFamilleFactory read Get_FactoryFournisseurTarifFamille;
    // CT_DelaiAppro : property CT_DelaiAppro 
   property CT_DelaiAppro:Smallint read Get_CT_DelaiAppro write Set_CT_DelaiAppro;
  end;

// IBOFournisseur3 : IBOFournisseur3 Interface

 IBOFournisseur3Disp = dispinterface
   ['{3429256D-78D7-477B-9E0F-1DEC316C490D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // MvtDebit : methode MvtDebit 
   function MvtDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 143;
    // MvtCredit : methode MvtCredit 
   function MvtCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 144;
    // MvtSolde : methode MvtSolde 
   function MvtSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 145;
    // MvtDevDebit : methode MvtDevDebit 
   function MvtDevDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 146;
    // MvtDevCredit : methode MvtDevCredit 
   function MvtDevCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 147;
    // MvtDevSolde : methode MvtDevSolde 
   function MvtDevSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 148;
    // Solde : methode Solde 
   function Solde:Double;dispid 149;
    // CleanPersonalData : methode CleanPersonalData 
   procedure CleanPersonalData;dispid 159;
    // CA_HTBrut : methode CA_HTBrut 
   function CA_HTBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 220;
    // CA_HTNet : methode CA_HTNet 
   function CA_HTNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 221;
    // CA_TTC : methode CA_TTC 
   function CA_TTC(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 222;
    // TotalPrixRevient : methode TotalPrixRevient 
   function TotalPrixRevient(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 223;
    // TotalQtes : methode TotalQtes 
   function TotalQtes(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 224;
    // TotalQtesColises : methode TotalQtesColises 
   function TotalQtesColises(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 225;
    // TotalPoidsNet : methode TotalPoidsNet 
   function TotalPoidsNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 226;
    // TotalPoidsBrut : methode TotalPoidsBrut 
   function TotalPoidsBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 227;
    // TauxRemiseMoyen : methode TauxRemiseMoyen 
   function TauxRemiseMoyen(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 229;
    // SoldeEchus1 : methode SoldeEchus1 
   function SoldeEchus1:Double;dispid 230;
    // SoldeEchus2 : methode SoldeEchus2 
   function SoldeEchus2:Double;dispid 231;
    // SoldeEchus3 : methode SoldeEchus3 
   function SoldeEchus3:Double;dispid 232;
    // SoldeNonEchus : methode SoldeNonEchus 
   function SoldeNonEchus:Double;dispid 233;
    // DepassementEncours : methode DepassementEncours 
   function DepassementEncours:Double;dispid 234;
    // DepassementEncours2 : methode DepassementEncours2 
   function DepassementEncours2:Double;dispid 235;
    // Portefeuille : methode Portefeuille 
   function Portefeuille:Double;dispid 236;
    // PortefeuilleCommande : methode PortefeuilleCommande 
   function PortefeuilleCommande:Double;dispid 237;
    // TotalReglement : methode TotalReglement 
   function TotalReglement:Double;dispid 238;
    // DerniereFacture : methode DerniereFacture 
   function DerniereFacture:TDateTime;dispid 239;
    // DernierReglement : methode DernierReglement 
   function DernierReglement:TDateTime;dispid 240;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3  readonly dispid 100;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory  readonly dispid 101;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory  readonly dispid 102;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory  readonly dispid 103;
    // FactoryTiersCompteG : property FactoryTiersCompteG 
   property FactoryTiersCompteG:IBOTiersCompteGFactory3  readonly dispid 104;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory  readonly dispid 105;
    // CT_Num : property CT_Num 
   property CT_Num:WideString dispid 106;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString dispid 107;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType  readonly dispid 108;
    // CompteGPrinc : property CompteGPrinc 
   property CompteGPrinc:IBOCompteG3 dispid 109;
    // CT_Qualite : property CT_Qualite 
   property CT_Qualite:WideString dispid 110;
    // CT_Classement : property CT_Classement 
   property CT_Classement:WideString dispid 111;
    // CT_Contact : property CT_Contact 
   property CT_Contact:WideString dispid 112;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 113;
    // CT_Raccourci : property CT_Raccourci 
   property CT_Raccourci:WideString dispid 119;
    // BanquePrincipale : property BanquePrincipale 
   property BanquePrincipale:IBOTiersBanque3 dispid 120;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 121;
    // CT_Ape : property CT_Ape 
   property CT_Ape:WideString dispid 122;
    // CT_Identifiant : property CT_Identifiant 
   property CT_Identifiant:WideString dispid 123;
    // CT_Siret : property CT_Siret 
   property CT_Siret:WideString dispid 124;
    // CT_Stat : property CT_Stat 
   property CT_Stat[sElt:Smallint]:WideString dispid 125;
    // CT_Commentaire : property CT_Commentaire 
   property CT_Commentaire:WideString dispid 126;
    // CT_Langue : property CT_Langue 
   property CT_Langue:LangueType dispid 128;
    // CT_DateCreate : property CT_DateCreate 
   property CT_DateCreate:TDateTime  readonly dispid 132;
    // CT_SautLigne : property CT_SautLigne 
   property CT_SautLigne:Smallint dispid 133;
    // CT_SautPage : property CT_SautPage 
   property CT_SautPage:WordBool dispid 134;
    // CT_Lettrage : property CT_Lettrage 
   property CT_Lettrage:WordBool dispid 135;
    // CT_ValidEch : property CT_ValidEch 
   property CT_ValidEch:WordBool dispid 136;
    // CT_Sommeil : property CT_Sommeil 
   property CT_Sommeil:WordBool dispid 137;
    // CT_NotRappel : property CT_NotRappel 
   property CT_NotRappel:WordBool dispid 138;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 139;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 150;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 151;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement dispid 152;
    // CT_EdiCodeType : property CT_EdiCodeType 
   property CT_EdiCodeType:EdiCodeType dispid 153;
    // CT_EdiCode : property CT_EdiCode 
   property CT_EdiCode:WideString dispid 154;
    // CT_Facebook : property CT_Facebook 
   property CT_Facebook:WideString dispid 155;
    // CT_LinkedIn : property CT_LinkedIn 
   property CT_LinkedIn:WideString dispid 156;
    // ExclureMarketing : property ExclureMarketing 
   property ExclureMarketing:WordBool dispid 157;
    // ActivateGDPR : property ActivateGDPR 
   property ActivateGDPR:WordBool  readonly dispid 158;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 241;
    // CT_Encours : property CT_Encours 
   property CT_Encours:Double dispid 200;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 201;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 202;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 203;
    // CT_Coface : property CT_Coface 
   property CT_Coface:WideString dispid 204;
    // CT_Surveillance : property CT_Surveillance 
   property CT_Surveillance:WordBool dispid 205;
    // CT_SvDateCreate : property CT_SvDateCreate 
   property CT_SvDateCreate:TDateTime  readonly dispid 206;
    // CT_SvFormeJuri : property CT_SvFormeJuri 
   property CT_SvFormeJuri:WideString  readonly dispid 207;
    // CT_SvEffectif : property CT_SvEffectif 
   property CT_SvEffectif:WideString  readonly dispid 208;
    // CT_SvCA : property CT_SvCA 
   property CT_SvCA:Double  readonly dispid 209;
    // CT_SvResultat : property CT_SvResultat 
   property CT_SvResultat:Double  readonly dispid 210;
    // CT_SvIncident : property CT_SvIncident 
   property CT_SvIncident:Smallint  readonly dispid 211;
    // CT_SvDateIncid : property CT_SvDateIncid 
   property CT_SvDateIncid:TDateTime  readonly dispid 212;
    // CT_SvPrivil : property CT_SvPrivil 
   property CT_SvPrivil:Smallint  readonly dispid 213;
    // CT_SvRegul : property CT_SvRegul 
   property CT_SvRegul:WideString  readonly dispid 214;
    // CT_SvCotation : property CT_SvCotation 
   property CT_SvCotation:WideString  readonly dispid 215;
    // CT_SvDateMaj : property CT_SvDateMaj 
   property CT_SvDateMaj:TDateTime  readonly dispid 216;
    // CT_SvObjetMaj : property CT_SvObjetMaj 
   property CT_SvObjetMaj:WideString  readonly dispid 217;
    // CT_SvDateBilan : property CT_SvDateBilan 
   property CT_SvDateBilan:TDateTime  readonly dispid 218;
    // CT_SvNbMoisBilan : property CT_SvNbMoisBilan 
   property CT_SvNbMoisBilan:Smallint  readonly dispid 219;
    // TauxRemise : property TauxRemise 
   property TauxRemise:Double dispid 242;
    // TauxEscompte : property TauxEscompte 
   property TauxEscompte:Double dispid 243;
    // TauxReleve : property TauxReleve 
   property TauxReleve:Double dispid 244;
    // TauxRFA : property TauxRFA 
   property TauxRFA:Double dispid 245;
    // CT_DateFermetureDebut : property CT_DateFermetureDebut 
   property CT_DateFermetureDebut:TDateTime dispid 246;
    // CT_DateFermetureFin : property CT_DateFermetureFin 
   property CT_DateFermetureFin:TDateTime dispid 247;
    // Representant : property Representant 
   property Representant:IBOCollaborateur dispid 304;
    // FactoryFournisseur : property FactoryFournisseur 
   property FactoryFournisseur:IBOFournisseurFactory3  readonly dispid 299;
    // FactoryFournisseurTarif : property FactoryFournisseurTarif 
   property FactoryFournisseurTarif:IBOFournisseurTarifFactory3  readonly dispid 300;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 dispid 301;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison dispid 302;
    // FactoryFournisseurTarifFamille : property FactoryFournisseurTarifFamille 
   property FactoryFournisseurTarifFamille:IBOFournisseurTarifFamilleFactory  readonly dispid 303;
    // CT_DelaiAppro : property CT_DelaiAppro 
   property CT_DelaiAppro:Smallint dispid 305;
  end;


// IBOTiersFactory3 : IBOTiersFactory3 Interface

 IBOTiersFactory3 = interface(IBITypeObjectFactory)
   ['{87FE686C-A20E-4716-AB17-41691E470227}']
   function Get_ListOrderNumero : IBICollection; safecall;
   function Get_ListOrderClassement : IBICollection; safecall;
   function Get_ListOrderType : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOTiers3;safecall;
    // QueryActifOrderNumero : methode QueryActifOrderNumero 
   function QueryActifOrderNumero:IBICollection;safecall;
    // QueryTypeNumeroOrderNumero : methode QueryTypeNumeroOrderNumero 
   function QueryTypeNumeroOrderNumero(sType:TiersType;sNumDe:WideString;sNumA:WideString):IBICollection;safecall;
    // QueryReplicate : methode QueryReplicate 
   function QueryReplicate(lIndice:Integer):IBICollection;safecall;
    // QueryMouvementeOrderNumero : methode QueryMouvementeOrderNumero 
   function QueryMouvementeOrderNumero:IBICollection;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
    // QueryCollaborateur : methode QueryCollaborateur 
   function QueryCollaborateur(pObj:IBOCollaborateur):IBICollection;safecall;
    // ListOrderNumero : property ListOrderNumero 
   property ListOrderNumero:IBICollection read Get_ListOrderNumero;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection read Get_ListOrderClassement;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection read Get_ListOrderType;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBOTiersFactory3 : IBOTiersFactory3 Interface

 IBOTiersFactory3Disp = dispinterface
   ['{87FE686C-A20E-4716-AB17-41691E470227}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 13;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOTiers3;dispid 14;
    // QueryActifOrderNumero : methode QueryActifOrderNumero 
   function QueryActifOrderNumero:IBICollection;dispid 15;
    // QueryTypeNumeroOrderNumero : methode QueryTypeNumeroOrderNumero 
   function QueryTypeNumeroOrderNumero(sType:TiersType;sNumDe:WideString;sNumA:WideString):IBICollection;dispid 17;
    // QueryReplicate : methode QueryReplicate 
   function QueryReplicate(lIndice:Integer):IBICollection;dispid 18;
    // QueryMouvementeOrderNumero : methode QueryMouvementeOrderNumero 
   function QueryMouvementeOrderNumero:IBICollection;dispid 19;
    // QueryCollaborateur : methode QueryCollaborateur 
   function QueryCollaborateur(pObj:IBOCollaborateur):IBICollection;dispid 21;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderNumero : property ListOrderNumero 
   property ListOrderNumero:IBICollection  readonly dispid 10;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection  readonly dispid 11;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection  readonly dispid 12;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 20;
  end;


// IBOTiersCompteGFactory3 : IBOTiersCompteGFactory3 Interface

 IBOTiersCompteGFactory3 = interface(IBITypeObjectFactory)
   ['{0636206A-E39C-4B75-AB57-1B821E65E957}']
    // AddCompteG : methode AddCompteG 
   procedure AddCompteG(pCompteG:IBOCompteG3);safecall;
  end;


// IBOTiersCompteGFactory3 : IBOTiersCompteGFactory3 Interface

 IBOTiersCompteGFactory3Disp = dispinterface
   ['{0636206A-E39C-4B75-AB57-1B821E65E957}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // AddCompteG : methode AddCompteG 
   procedure AddCompteG(pCompteG:IBOCompteG3);dispid 10;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOCompteG3 : IBOCompteG3 Interface

 IBOCompteG3 = interface(IBIPersistObject)
   ['{BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}']
   function Get_FactoryCompteG : IBOCompteGFactory3; safecall;
   function Get_FactoryCompteGTiers : IBOCompteGTiersFactory3; safecall;
   function Get_CG_Num : WideString; safecall;
   procedure Set_CG_Num(const pVal:WideString); safecall;
   function Get_CG_Intitule : WideString; safecall;
   procedure Set_CG_Intitule(const pVal:WideString); safecall;
   function Get_CG_Type : CompteGType; safecall;
   procedure Set_CG_Type(const pVal:CompteGType); safecall;
   function Get_CG_Classement : WideString; safecall;
   procedure Set_CG_Classement(const pVal:WideString); safecall;
   function Get_CG_Report : CompteGReportType; safecall;
   procedure Set_CG_Report(const pVal:CompteGReportType); safecall;
   function Get_CG_Raccourci : WideString; safecall;
   procedure Set_CG_Raccourci(const pVal:WideString); safecall;
   function Get_CG_SautLigne : Smallint; safecall;
   procedure Set_CG_SautLigne(const pVal:Smallint); safecall;
   function Get_CG_SautPage : WordBool; safecall;
   procedure Set_CG_SautPage(const pVal:WordBool); safecall;
   function Get_CG_Regroup : WordBool; safecall;
   procedure Set_CG_Regroup(const pVal:WordBool); safecall;
   function Get_CG_Analytique : WordBool; safecall;
   procedure Set_CG_Analytique(const pVal:WordBool); safecall;
   function Get_CG_Echeance : WordBool; safecall;
   procedure Set_CG_Echeance(const pVal:WordBool); safecall;
   function Get_CG_Quantite : WordBool; safecall;
   procedure Set_CG_Quantite(const pVal:WordBool); safecall;
   function Get_CG_Lettrage : WordBool; safecall;
   procedure Set_CG_Lettrage(const pVal:WordBool); safecall;
   function Get_CG_Tiers : WordBool; safecall;
   procedure Set_CG_Tiers(const pVal:WordBool); safecall;
   function Get_CG_DateCreate : TDateTime; safecall;
   function Get_CG_Devise : WordBool; safecall;
   procedure Set_CG_Devise(const pVal:WordBool); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_Taxe : IBOTaxe3; safecall;
   procedure Set_Taxe(const pTaxe:IBOTaxe3); safecall;
   function Get_InfoLibre : IBIValues; safecall;
   function Get_CG_Sommeil : WordBool; safecall;
   procedure Set_CG_Sommeil(const pVal:WordBool); safecall;
   function Get_NatureCompte : IBPNatureCompte; safecall;
   procedure Set_NatureCompte(const pNatureCompte:IBPNatureCompte); safecall;
   function Get_CompteR : IBOCompteR; safecall;
   procedure Set_CompteR(const pCompteR:IBOCompteR); safecall;
   function Get_CG_LettrageSaisie : WordBool; safecall;
   procedure Set_CG_LettrageSaisie(const pVal:WordBool); safecall;
    // FactoryCompteG : property FactoryCompteG 
   property FactoryCompteG:IBOCompteGFactory3 read Get_FactoryCompteG;
    // FactoryCompteGTiers : property FactoryCompteGTiers 
   property FactoryCompteGTiers:IBOCompteGTiersFactory3 read Get_FactoryCompteGTiers;
    // CG_Num : property CG_Num 
   property CG_Num:WideString read Get_CG_Num write Set_CG_Num;
    // CG_Intitule : property CG_Intitule 
   property CG_Intitule:WideString read Get_CG_Intitule write Set_CG_Intitule;
    // CG_Type : property CG_Type 
   property CG_Type:CompteGType read Get_CG_Type write Set_CG_Type;
    // CG_Classement : property CG_Classement 
   property CG_Classement:WideString read Get_CG_Classement write Set_CG_Classement;
    // CG_Report : property CG_Report 
   property CG_Report:CompteGReportType read Get_CG_Report write Set_CG_Report;
    // CG_Raccourci : property CG_Raccourci 
   property CG_Raccourci:WideString read Get_CG_Raccourci write Set_CG_Raccourci;
    // CG_SautLigne : property CG_SautLigne 
   property CG_SautLigne:Smallint read Get_CG_SautLigne write Set_CG_SautLigne;
    // CG_SautPage : property CG_SautPage 
   property CG_SautPage:WordBool read Get_CG_SautPage write Set_CG_SautPage;
    // CG_Regroup : property CG_Regroup 
   property CG_Regroup:WordBool read Get_CG_Regroup write Set_CG_Regroup;
    // CG_Analytique : property CG_Analytique 
   property CG_Analytique:WordBool read Get_CG_Analytique write Set_CG_Analytique;
    // CG_Echeance : property CG_Echeance 
   property CG_Echeance:WordBool read Get_CG_Echeance write Set_CG_Echeance;
    // CG_Quantite : property CG_Quantite 
   property CG_Quantite:WordBool read Get_CG_Quantite write Set_CG_Quantite;
    // CG_Lettrage : property CG_Lettrage 
   property CG_Lettrage:WordBool read Get_CG_Lettrage write Set_CG_Lettrage;
    // CG_Tiers : property CG_Tiers 
   property CG_Tiers:WordBool read Get_CG_Tiers write Set_CG_Tiers;
    // CG_DateCreate : property CG_DateCreate 
   property CG_DateCreate:TDateTime read Get_CG_DateCreate;
    // CG_Devise : property CG_Devise 
   property CG_Devise:WordBool read Get_CG_Devise write Set_CG_Devise;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // Taxe : property Taxe 
   property Taxe:IBOTaxe3 read Get_Taxe write Set_Taxe;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // CG_Sommeil : property CG_Sommeil 
   property CG_Sommeil:WordBool read Get_CG_Sommeil write Set_CG_Sommeil;
    // NatureCompte : property NatureCompte 
   property NatureCompte:IBPNatureCompte read Get_NatureCompte write Set_NatureCompte;
    // CompteR : property CompteR 
   property CompteR:IBOCompteR read Get_CompteR write Set_CompteR;
    // CG_LettrageSaisie : property CG_LettrageSaisie 
   property CG_LettrageSaisie:WordBool read Get_CG_LettrageSaisie write Set_CG_LettrageSaisie;
  end;


// IBOCompteG3 : IBOCompteG3 Interface

 IBOCompteG3Disp = dispinterface
   ['{BD1D89D6-795E-4FCC-BA51-85EFC0BC9B7A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryCompteG : property FactoryCompteG 
   property FactoryCompteG:IBOCompteGFactory3  readonly dispid 100;
    // FactoryCompteGTiers : property FactoryCompteGTiers 
   property FactoryCompteGTiers:IBOCompteGTiersFactory3  readonly dispid 101;
    // CG_Num : property CG_Num 
   property CG_Num:WideString dispid 102;
    // CG_Intitule : property CG_Intitule 
   property CG_Intitule:WideString dispid 103;
    // CG_Type : property CG_Type 
   property CG_Type:CompteGType dispid 104;
    // CG_Classement : property CG_Classement 
   property CG_Classement:WideString dispid 105;
    // CG_Report : property CG_Report 
   property CG_Report:CompteGReportType dispid 106;
    // CG_Raccourci : property CG_Raccourci 
   property CG_Raccourci:WideString dispid 107;
    // CG_SautLigne : property CG_SautLigne 
   property CG_SautLigne:Smallint dispid 108;
    // CG_SautPage : property CG_SautPage 
   property CG_SautPage:WordBool dispid 109;
    // CG_Regroup : property CG_Regroup 
   property CG_Regroup:WordBool dispid 110;
    // CG_Analytique : property CG_Analytique 
   property CG_Analytique:WordBool dispid 111;
    // CG_Echeance : property CG_Echeance 
   property CG_Echeance:WordBool dispid 112;
    // CG_Quantite : property CG_Quantite 
   property CG_Quantite:WordBool dispid 113;
    // CG_Lettrage : property CG_Lettrage 
   property CG_Lettrage:WordBool dispid 114;
    // CG_Tiers : property CG_Tiers 
   property CG_Tiers:WordBool dispid 115;
    // CG_DateCreate : property CG_DateCreate 
   property CG_DateCreate:TDateTime  readonly dispid 116;
    // CG_Devise : property CG_Devise 
   property CG_Devise:WordBool dispid 117;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 118;
    // Taxe : property Taxe 
   property Taxe:IBOTaxe3 dispid 119;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 120;
    // CG_Sommeil : property CG_Sommeil 
   property CG_Sommeil:WordBool dispid 121;
    // NatureCompte : property NatureCompte 
   property NatureCompte:IBPNatureCompte dispid 122;
    // CompteR : property CompteR 
   property CompteR:IBOCompteR dispid 123;
    // CG_LettrageSaisie : property CG_LettrageSaisie 
   property CG_LettrageSaisie:WordBool dispid 124;
  end;


// IBOCompteGFactory3 : IBOCompteGFactory3 Interface

 IBOCompteGFactory3 = interface(IBITypeObjectFactory)
   ['{766FC622-F25F-45E3-8D10-8EAF2154174B}']
   function Get_ListOrderClassement : IBICollection; safecall;
   function Get_ListOrderType : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOCompteG3;safecall;
    // QueryTypeNumeroOrderNumero : methode QueryTypeNumeroOrderNumero 
   function QueryTypeNumeroOrderNumero(sType:CompteGType;sNumDe:WideString;sNumA:WideString):IBICollection;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
    // QueryActifOrderNumero : methode Listes des comptes généraux triés par numéro en ignorant les comptes mis en sommeil 
   function QueryActifOrderNumero:IBICollection;safecall;
    // QueryActifOrderType : methode Listes des comptes généraux triés par type en ignorant les comptes mis en sommeil 
   function QueryActifOrderType:IBICollection;safecall;
    // QueryActifOrderClassement : methode Listes des comptes généraux triés par classement en ignorant les comptes mis en sommeil 
   function QueryActifOrderClassement:IBICollection;safecall;
    // QueryCompteR : methode QueryCompteR 
   function QueryCompteR(CompteR:IBOCompteR):IBICollection;safecall;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection read Get_ListOrderClassement;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection read Get_ListOrderType;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBOCompteGFactory3 : IBOCompteGFactory3 Interface

 IBOCompteGFactory3Disp = dispinterface
   ['{766FC622-F25F-45E3-8D10-8EAF2154174B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 12;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOCompteG3;dispid 13;
    // QueryTypeNumeroOrderNumero : methode QueryTypeNumeroOrderNumero 
   function QueryTypeNumeroOrderNumero(sType:CompteGType;sNumDe:WideString;sNumA:WideString):IBICollection;dispid 14;
    // QueryActifOrderNumero : methode Listes des comptes généraux triés par numéro en ignorant les comptes mis en sommeil 
   function QueryActifOrderNumero:IBICollection;dispid 16;
    // QueryActifOrderType : methode Listes des comptes généraux triés par type en ignorant les comptes mis en sommeil 
   function QueryActifOrderType:IBICollection;dispid 17;
    // QueryActifOrderClassement : methode Listes des comptes généraux triés par classement en ignorant les comptes mis en sommeil 
   function QueryActifOrderClassement:IBICollection;dispid 18;
    // QueryCompteR : methode QueryCompteR 
   function QueryCompteR(CompteR:IBOCompteR):IBICollection;dispid 19;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection  readonly dispid 10;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection  readonly dispid 11;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 15;
  end;


// IBOCompteR : IBOCompteR Interface

 IBOCompteR = interface(IBIPersistObject)
   ['{34254DB0-A71C-4B9E-99A3-6E6B38582609}']
   function Get_CR_Num : WideString; safecall;
   procedure Set_CR_Num(const pVal:WideString); safecall;
   function Get_CR_Intitule : WideString; safecall;
   procedure Set_CR_Intitule(const pVal:WideString); safecall;
   function Get_CR_Type : CompteRType; safecall;
   procedure Set_CR_Type(const pVal:CompteRType); safecall;
   function Get_CR_Classement : WideString; safecall;
   procedure Set_CR_Classement(const pVal:WideString); safecall;
   function Get_CR_SautLigne : Smallint; safecall;
   procedure Set_CR_SautLigne(const pVal:Smallint); safecall;
   function Get_CR_SautPage : WordBool; safecall;
   procedure Set_CR_SautPage(const pVal:WordBool); safecall;
    // CR_Num : property CR_Num 
   property CR_Num:WideString read Get_CR_Num write Set_CR_Num;
    // CR_Intitule : property CR_Intitule 
   property CR_Intitule:WideString read Get_CR_Intitule write Set_CR_Intitule;
    // CR_Type : property CR_Type 
   property CR_Type:CompteRType read Get_CR_Type write Set_CR_Type;
    // CR_Classement : property CR_Classement 
   property CR_Classement:WideString read Get_CR_Classement write Set_CR_Classement;
    // CR_SautLigne : property CR_SautLigne 
   property CR_SautLigne:Smallint read Get_CR_SautLigne write Set_CR_SautLigne;
    // CR_SautPage : property CR_SautPage 
   property CR_SautPage:WordBool read Get_CR_SautPage write Set_CR_SautPage;
  end;


// IBOCompteR : IBOCompteR Interface

 IBOCompteRDisp = dispinterface
   ['{34254DB0-A71C-4B9E-99A3-6E6B38582609}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // CR_Num : property CR_Num 
   property CR_Num:WideString dispid 102;
    // CR_Intitule : property CR_Intitule 
   property CR_Intitule:WideString dispid 103;
    // CR_Type : property CR_Type 
   property CR_Type:CompteRType dispid 104;
    // CR_Classement : property CR_Classement 
   property CR_Classement:WideString dispid 105;
    // CR_SautLigne : property CR_SautLigne 
   property CR_SautLigne:Smallint dispid 108;
    // CR_SautPage : property CR_SautPage 
   property CR_SautPage:WordBool dispid 109;
  end;


// IBOCompteGTiersFactory3 : IBOCompteGTiersFactory3 Interface

 IBOCompteGTiersFactory3 = interface(IBITypeObjectFactory)
   ['{84334E10-A439-46CC-9F65-9A01E9642D77}']
    // AddTiers : methode AddTiers 
   procedure AddTiers(pTiers:IBOTiers3);safecall;
  end;


// IBOCompteGTiersFactory3 : IBOCompteGTiersFactory3 Interface

 IBOCompteGTiersFactory3Disp = dispinterface
   ['{84334E10-A439-46CC-9F65-9A01E9642D77}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // AddTiers : methode AddTiers 
   procedure AddTiers(pTiers:IBOTiers3);dispid 10;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOTaxe3 : IBOTaxe3 Interface

 IBOTaxe3 = interface(IBIPersistObject)
   ['{99035D0A-F5E5-466E-A919-8174DE96725B}']
   function Get_FactoryTaxe : IBOTaxeFactory3; safecall;
   function Get_TA_Intitule : WideString; safecall;
   procedure Set_TA_Intitule(const pVal:WideString); safecall;
   function Get_TA_TTaux : TaxeTauxType; safecall;
   procedure Set_TA_TTaux(const pVal:TaxeTauxType); safecall;
   function Get_TA_Taux : Double; safecall;
   procedure Set_TA_Taux(const pVal:Double); safecall;
   function Get_TA_Type : TaxeType; safecall;
   procedure Set_TA_Type(const pVal:TaxeType); safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pCompteG:IBOCompteG3); safecall;
   function Get_TA_Code : WideString; safecall;
   procedure Set_TA_Code(const pVal:WideString); safecall;
   function Get_TA_NP : WordBool; safecall;
   procedure Set_TA_NP(const pVal:WordBool); safecall;
   function Get_TA_Sens : TaxeSensType; safecall;
   procedure Set_TA_Sens(const pVal:TaxeSensType); safecall;
   function Get_TA_Provenance : TaxeProvenanceType; safecall;
   procedure Set_TA_Provenance(const pVal:TaxeProvenanceType); safecall;
   function Get_TA_Regroup : WideString; safecall;
   procedure Set_TA_Regroup(const pVal:WideString); safecall;
   function Get_TA_Assujet : Double; safecall;
   procedure Set_TA_Assujet(const pVal:Double); safecall;
   function Get_TA_GrilleBase : WideString; safecall;
   procedure Set_TA_GrilleBase(const pVal:WideString); safecall;
   function Get_TA_GrilleTaxe : WideString; safecall;
   procedure Set_TA_GrilleTaxe(const pVal:WideString); safecall;
    // FactoryTaxe : property FactoryTaxe 
   property FactoryTaxe:IBOTaxeFactory3 read Get_FactoryTaxe;
    // TA_Intitule : property TA_Intitule 
   property TA_Intitule:WideString read Get_TA_Intitule write Set_TA_Intitule;
    // TA_TTaux : property TA_TTaux 
   property TA_TTaux:TaxeTauxType read Get_TA_TTaux write Set_TA_TTaux;
    // TA_Taux : property TA_Taux 
   property TA_Taux:Double read Get_TA_Taux write Set_TA_Taux;
    // TA_Type : property TA_Type 
   property TA_Type:TaxeType read Get_TA_Type write Set_TA_Type;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // TA_Code : property TA_Code 
   property TA_Code:WideString read Get_TA_Code write Set_TA_Code;
    // TA_NP : property TA_NP 
   property TA_NP:WordBool read Get_TA_NP write Set_TA_NP;
    // TA_Sens : property TA_Sens 
   property TA_Sens:TaxeSensType read Get_TA_Sens write Set_TA_Sens;
    // TA_Provenance : property TA_Provenance 
   property TA_Provenance:TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    // TA_Regroup : property TA_Regroup 
   property TA_Regroup:WideString read Get_TA_Regroup write Set_TA_Regroup;
    // TA_Assujet : property TA_Assujet 
   property TA_Assujet:Double read Get_TA_Assujet write Set_TA_Assujet;
    // TA_GrilleBase : property TA_GrilleBase 
   property TA_GrilleBase:WideString read Get_TA_GrilleBase write Set_TA_GrilleBase;
    // TA_GrilleTaxe : property TA_GrilleTaxe 
   property TA_GrilleTaxe:WideString read Get_TA_GrilleTaxe write Set_TA_GrilleTaxe;
  end;


// IBOTaxe3 : IBOTaxe3 Interface

 IBOTaxe3Disp = dispinterface
   ['{99035D0A-F5E5-466E-A919-8174DE96725B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTaxe : property FactoryTaxe 
   property FactoryTaxe:IBOTaxeFactory3  readonly dispid 100;
    // TA_Intitule : property TA_Intitule 
   property TA_Intitule:WideString dispid 101;
    // TA_TTaux : property TA_TTaux 
   property TA_TTaux:TaxeTauxType dispid 102;
    // TA_Taux : property TA_Taux 
   property TA_Taux:Double dispid 103;
    // TA_Type : property TA_Type 
   property TA_Type:TaxeType dispid 104;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 105;
    // TA_Code : property TA_Code 
   property TA_Code:WideString dispid 106;
    // TA_NP : property TA_NP 
   property TA_NP:WordBool dispid 107;
    // TA_Sens : property TA_Sens 
   property TA_Sens:TaxeSensType dispid 108;
    // TA_Provenance : property TA_Provenance 
   property TA_Provenance:TaxeProvenanceType dispid 109;
    // TA_Regroup : property TA_Regroup 
   property TA_Regroup:WideString dispid 110;
    // TA_Assujet : property TA_Assujet 
   property TA_Assujet:Double dispid 111;
    // TA_GrilleBase : property TA_GrilleBase 
   property TA_GrilleBase:WideString dispid 112;
    // TA_GrilleTaxe : property TA_GrilleTaxe 
   property TA_GrilleTaxe:WideString dispid 113;
  end;


// IBOTaxeFactory3 : IBOTaxeFactory3 Interface

 IBOTaxeFactory3 = interface(IBITypeObjectFactory)
   ['{7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}']
    // ExistCode : methode ExistCode 
   function ExistCode(sNum:WideString):WordBool;safecall;
    // ReadCode : methode ReadCode 
   function ReadCode(sNum:WideString):IBOTaxe3;safecall;
  end;


// IBOTaxeFactory3 : IBOTaxeFactory3 Interface

 IBOTaxeFactory3Disp = dispinterface
   ['{7DFE3CA8-2D3C-4DF1-9B8F-7F28AD2B5439}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistCode : methode ExistCode 
   function ExistCode(sNum:WideString):WordBool;dispid 10;
    // ReadCode : methode ReadCode 
   function ReadCode(sNum:WideString):IBOTaxe3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPNatureCompte : IBPNatureCompteDet Interface : Une fourchette de nature de compte

 IBPNatureCompte = interface(IBIPersistObject)
   ['{838ED02B-7688-430E-BDAC-C659E326FE95}']
   function Get_FactoryNatureCompte : IBPNatureCompteFactory; safecall;
   function Get_FactoryNatureCompteDet : IBPNatureCompteDetFactory; safecall;
   function Get_NatureCompteType : NatureCompteType; safecall;
   function Get_Intitule : WideString; safecall;
    // FactoryNatureCompte : property FactoryNatureCompte 
   property FactoryNatureCompte:IBPNatureCompteFactory read Get_FactoryNatureCompte;
    // FactoryNatureCompteDet : property FactoryNatureCompteDet 
   property FactoryNatureCompteDet:IBPNatureCompteDetFactory read Get_FactoryNatureCompteDet;
    // NatureCompteType : property NatureCompteType 
   property NatureCompteType:NatureCompteType read Get_NatureCompteType;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule;
  end;


// IBPNatureCompte : IBPNatureCompteDet Interface : Une fourchette de nature de compte

 IBPNatureCompteDisp = dispinterface
   ['{838ED02B-7688-430E-BDAC-C659E326FE95}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryNatureCompte : property FactoryNatureCompte 
   property FactoryNatureCompte:IBPNatureCompteFactory  readonly dispid 100;
    // FactoryNatureCompteDet : property FactoryNatureCompteDet 
   property FactoryNatureCompteDet:IBPNatureCompteDetFactory  readonly dispid 101;
    // NatureCompteType : property NatureCompteType 
   property NatureCompteType:NatureCompteType  readonly dispid 102;
    // Intitule : property Intitule 
   property Intitule:WideString  readonly dispid 103;
  end;


// IBPNatureCompteFactory : Collection de IBPNatureCompteFactory

 IBPNatureCompteFactory = interface(IBITypeObjectFactory)
   ['{B6942D0F-D5E1-41F7-8B80-674F0FD31172}']
    // ReadNature : methode ReadNature 
   function ReadNature(sNature:NatureCompteType):IBPNatureCompte;safecall;
    // FindNatureProche : methode FindNatureProche 
   function FindNatureProche(sRacine:WideString):IBPNatureCompteDet;safecall;
  end;


// IBPNatureCompteFactory : Collection de IBPNatureCompteFactory

 IBPNatureCompteFactoryDisp = dispinterface
   ['{B6942D0F-D5E1-41F7-8B80-674F0FD31172}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ReadNature : methode ReadNature 
   function ReadNature(sNature:NatureCompteType):IBPNatureCompte;dispid 11;
    // FindNatureProche : methode FindNatureProche 
   function FindNatureProche(sRacine:WideString):IBPNatureCompteDet;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPNatureCompteDet : IBPNatureCompteDet Interface : Une fourchette de nature de compte

 IBPNatureCompteDet = interface(IBIPersistObject)
   ['{2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}']
   function Get_FactoryNatureCompteDet : IBPNatureCompteDetFactory; safecall;
   function Get_FourchetteDebut : WideString; safecall;
   procedure Set_FourchetteDebut(const pVal:WideString); safecall;
   function Get_FourchetteFin : WideString; safecall;
   procedure Set_FourchetteFin(const pVal:WideString); safecall;
   function Get_CG_Regroup : WordBool; safecall;
   procedure Set_CG_Regroup(const pVal:WordBool); safecall;
   function Get_CG_Analytique : WordBool; safecall;
   procedure Set_CG_Analytique(const pVal:WordBool); safecall;
   function Get_CG_Devise : WordBool; safecall;
   procedure Set_CG_Devise(const pVal:WordBool); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_CG_Echeance : WordBool; safecall;
   procedure Set_CG_Echeance(const pVal:WordBool); safecall;
   function Get_CG_Quantite : WordBool; safecall;
   procedure Set_CG_Quantite(const pVal:WordBool); safecall;
   function Get_CG_Lettrage : WordBool; safecall;
   procedure Set_CG_Lettrage(const pVal:WordBool); safecall;
   function Get_CG_Tiers : WordBool; safecall;
   procedure Set_CG_Tiers(const pVal:WordBool); safecall;
   function Get_CG_Report : CompteGReportType; safecall;
   procedure Set_CG_Report(const pVal:CompteGReportType); safecall;
    // FactoryNatureCompteDet : property FactoryNatureCompte 
   property FactoryNatureCompteDet:IBPNatureCompteDetFactory read Get_FactoryNatureCompteDet;
    // FourchetteDebut : property FourchetteDebut 
   property FourchetteDebut:WideString read Get_FourchetteDebut write Set_FourchetteDebut;
    // FourchetteFin : property FourchetteFin 
   property FourchetteFin:WideString read Get_FourchetteFin write Set_FourchetteFin;
    // CG_Regroup : property CG_Regroup 
   property CG_Regroup:WordBool read Get_CG_Regroup write Set_CG_Regroup;
    // CG_Analytique : property CG_Analytique 
   property CG_Analytique:WordBool read Get_CG_Analytique write Set_CG_Analytique;
    // CG_Devise : property CG_Devise 
   property CG_Devise:WordBool read Get_CG_Devise write Set_CG_Devise;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // CG_Echeance : property CG_Echeance 
   property CG_Echeance:WordBool read Get_CG_Echeance write Set_CG_Echeance;
    // CG_Quantite : property CG_Quantite 
   property CG_Quantite:WordBool read Get_CG_Quantite write Set_CG_Quantite;
    // CG_Lettrage : property CG_Lettrage 
   property CG_Lettrage:WordBool read Get_CG_Lettrage write Set_CG_Lettrage;
    // CG_Tiers : property CG_Tiers 
   property CG_Tiers:WordBool read Get_CG_Tiers write Set_CG_Tiers;
    // CG_Report : property CG_Report 
   property CG_Report:CompteGReportType read Get_CG_Report write Set_CG_Report;
  end;


// IBPNatureCompteDet : IBPNatureCompteDet Interface : Une fourchette de nature de compte

 IBPNatureCompteDetDisp = dispinterface
   ['{2D4C8625-1C83-4E1C-9B25-67E86ED2CD7E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryNatureCompteDet : property FactoryNatureCompte 
   property FactoryNatureCompteDet:IBPNatureCompteDetFactory  readonly dispid 100;
    // FourchetteDebut : property FourchetteDebut 
   property FourchetteDebut:WideString dispid 101;
    // FourchetteFin : property FourchetteFin 
   property FourchetteFin:WideString dispid 102;
    // CG_Regroup : property CG_Regroup 
   property CG_Regroup:WordBool dispid 103;
    // CG_Analytique : property CG_Analytique 
   property CG_Analytique:WordBool dispid 104;
    // CG_Devise : property CG_Devise 
   property CG_Devise:WordBool dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // CG_Echeance : property CG_Echeance 
   property CG_Echeance:WordBool dispid 107;
    // CG_Quantite : property CG_Quantite 
   property CG_Quantite:WordBool dispid 108;
    // CG_Lettrage : property CG_Lettrage 
   property CG_Lettrage:WordBool dispid 109;
    // CG_Tiers : property CG_Tiers 
   property CG_Tiers:WordBool dispid 110;
    // CG_Report : property CG_Report 
   property CG_Report:CompteGReportType dispid 111;
  end;


// IBPNatureCompteDetFactory : IBPNatureCompteDetFactory Interface

 IBPNatureCompteDetFactory = interface(IBITypeObjectFactory)
   ['{FC127295-7674-4D27-B7D6-DE8CE60AC5EA}']
    // FindNatureProche : methode FindNatureProche 
   function FindNatureProche(sRacine:WideString):IBPNatureCompteDet;safecall;
  end;


// IBPNatureCompteDetFactory : IBPNatureCompteDetFactory Interface

 IBPNatureCompteDetFactoryDisp = dispinterface
   ['{FC127295-7674-4D27-B7D6-DE8CE60AC5EA}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // FindNatureProche : methode FindNatureProche 
   function FindNatureProche(sRacine:WideString):IBPNatureCompteDet;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOTiersBanque3 : IBOTiersBanque3 Interface

 IBOTiersBanque3 = interface(IBIPersistObject)
   ['{3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}']
   function Get_FactoryTiersBanque : IBITypeObjectFactory; safecall;
   function Get_Tiers : IBOTiers3; safecall;
   function Get_BT_Intitule : WideString; safecall;
   procedure Set_BT_Intitule(const pVal:WideString); safecall;
   function Get_BT_Banque : WideString; safecall;
   procedure Set_BT_Banque(const pVal:WideString); safecall;
   function Get_BT_Guichet : WideString; safecall;
   procedure Set_BT_Guichet(const pVal:WideString); safecall;
   function Get_BT_Compte : WideString; safecall;
   procedure Set_BT_Compte(const pVal:WideString); safecall;
   function Get_BT_Cle : WideString; safecall;
   procedure Set_BT_Cle(const pVal:WideString); safecall;
   function Get_BT_Commentaire : WideString; safecall;
   procedure Set_BT_Commentaire(const pVal:WideString); safecall;
   function Get_BT_Struct : RibType; safecall;
   procedure Set_BT_Struct(const pVal:RibType); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pVal:IBPDevise2); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_BT_Bic : WideString; safecall;
   procedure Set_BT_Bic(const pVal:WideString); safecall;
   function Get_BT_IBAN : WideString; safecall;
   procedure Set_BT_IBAN(const pVal:WideString); safecall;
   function Get_BT_CalculIBAN : WordBool; safecall;
   procedure Set_BT_CalculIBAN(const pVal:WordBool); safecall;
   function Get_BT_MandatRef : WideString; safecall;
   procedure Set_BT_MandatRef(const pVal:WideString); safecall;
   function Get_BT_MandatDate : TDateTime; safecall;
   procedure Set_BT_MandatDate(const pVal:TDateTime); safecall;
   function Get_BT_NomAgence : WideString; safecall;
   procedure Set_BT_NomAgence(const pVal:WideString); safecall;
   function Get_BT_PaysAgence : WideString; safecall;
   procedure Set_BT_PaysAgence(const pVal:WideString); safecall;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory read Get_FactoryTiersBanque;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3 read Get_Tiers;
    // BT_Intitule : property BT_Intitule 
   property BT_Intitule:WideString read Get_BT_Intitule write Set_BT_Intitule;
    // BT_Banque : property BT_Banque 
   property BT_Banque:WideString read Get_BT_Banque write Set_BT_Banque;
    // BT_Guichet : property BT_Guichet 
   property BT_Guichet:WideString read Get_BT_Guichet write Set_BT_Guichet;
    // BT_Compte : property BT_Compte 
   property BT_Compte:WideString read Get_BT_Compte write Set_BT_Compte;
    // BT_Cle : property BT_Cle 
   property BT_Cle:WideString read Get_BT_Cle write Set_BT_Cle;
    // BT_Commentaire : property BT_Commentaire 
   property BT_Commentaire:WideString read Get_BT_Commentaire write Set_BT_Commentaire;
    // BT_Struct : property BT_Struct 
   property BT_Struct:RibType read Get_BT_Struct write Set_BT_Struct;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // BT_Bic : property BT_Bic 
   property BT_Bic:WideString read Get_BT_Bic write Set_BT_Bic;
    // BT_IBAN : property BT_IBAN 
   property BT_IBAN:WideString read Get_BT_IBAN write Set_BT_IBAN;
    // BT_CalculIBAN : property BT_CalculIBAN 
   property BT_CalculIBAN:WordBool read Get_BT_CalculIBAN write Set_BT_CalculIBAN;
    // BT_MandatRef : property BT_MandatRef 
   property BT_MandatRef:WideString read Get_BT_MandatRef write Set_BT_MandatRef;
    // BT_MandatDate : property BT_MandatDate 
   property BT_MandatDate:TDateTime read Get_BT_MandatDate write Set_BT_MandatDate;
    // BT_NomAgence : property BT_NomAgence 
   property BT_NomAgence:WideString read Get_BT_NomAgence write Set_BT_NomAgence;
    // BT_PaysAgence : property BT_PaysAgence 
   property BT_PaysAgence:WideString read Get_BT_PaysAgence write Set_BT_PaysAgence;
  end;


// IBOTiersBanque3 : IBOTiersBanque3 Interface

 IBOTiersBanque3Disp = dispinterface
   ['{3AA5D2A8-7452-47AC-B0EF-D73BE63B757F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory  readonly dispid 100;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3  readonly dispid 101;
    // BT_Intitule : property BT_Intitule 
   property BT_Intitule:WideString dispid 102;
    // BT_Banque : property BT_Banque 
   property BT_Banque:WideString dispid 103;
    // BT_Guichet : property BT_Guichet 
   property BT_Guichet:WideString dispid 104;
    // BT_Compte : property BT_Compte 
   property BT_Compte:WideString dispid 105;
    // BT_Cle : property BT_Cle 
   property BT_Cle:WideString dispid 106;
    // BT_Commentaire : property BT_Commentaire 
   property BT_Commentaire:WideString dispid 107;
    // BT_Struct : property BT_Struct 
   property BT_Struct:RibType dispid 108;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 109;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 113;
    // BT_Bic : property BT_Bic 
   property BT_Bic:WideString dispid 115;
    // BT_IBAN : property BT_IBAN 
   property BT_IBAN:WideString dispid 116;
    // BT_CalculIBAN : property BT_CalculIBAN 
   property BT_CalculIBAN:WordBool dispid 117;
    // BT_MandatRef : property BT_MandatRef 
   property BT_MandatRef:WideString dispid 118;
    // BT_MandatDate : property BT_MandatDate 
   property BT_MandatDate:TDateTime dispid 119;
    // BT_NomAgence : property BT_NomAgence 
   property BT_NomAgence:WideString dispid 120;
    // BT_PaysAgence : property BT_PaysAgence 
   property BT_PaysAgence:WideString dispid 121;
  end;


// IBOJournal3 : IBOJournal3 Interface

 IBOJournal3 = interface(IBIPersistObject)
   ['{1837F306-0725-455A-8C15-1EC716483DDC}']
   function Get_FactoryJournal : IBOJournalFactory3; safecall;
   function Get_JO_Num : WideString; safecall;
   procedure Set_JO_Num(const pVal:WideString); safecall;
   function Get_JO_Intitule : WideString; safecall;
   procedure Set_JO_Intitule(const pVal:WideString); safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pCompteG:IBOCompteG3); safecall;
   function Get_JO_Type : JournalType; safecall;
   procedure Set_JO_Type(const pVal:JournalType); safecall;
   function Get_JO_NumPiece : JournalNumPieceType; safecall;
   procedure Set_JO_NumPiece(const pVal:JournalNumPieceType); safecall;
   function Get_JO_Contrepartie : WordBool; safecall;
   procedure Set_JO_Contrepartie(const pVal:WordBool); safecall;
   function Get_JO_SaisAnal : WordBool; safecall;
   procedure Set_JO_SaisAnal(const pVal:WordBool); safecall;
   function Get_JO_NotCalcTot : WordBool; safecall;
   procedure Set_JO_NotCalcTot(const pVal:WordBool); safecall;
   function Get_JO_Rappro : JournalRapproType; safecall;
   procedure Set_JO_Rappro(const pVal:JournalRapproType); safecall;
   function Get_JO_Sommeil : WordBool; safecall;
   procedure Set_JO_Sommeil(const pVal:WordBool); safecall;
   function Get_JO_IFRS : WordBool; safecall;
   procedure Set_JO_IFRS(const pVal:WordBool); safecall;
   function Get_JO_Reglement : WordBool; safecall;
   procedure Set_JO_Reglement(const pVal:WordBool); safecall;
   function Get_NextEC_Piece(DatePeriode:TDateTime) : WideString; safecall;
   function Get_TypePeriodCloture(DatePeriode:TDateTime) : PeriodClotureType; safecall;
   function Get_JO_LettrageSaisie : WordBool; safecall;
   procedure Set_JO_LettrageSaisie(const pVal:WordBool); safecall;
    // FactoryJournal : property FactoryJournal 
   property FactoryJournal:IBOJournalFactory3 read Get_FactoryJournal;
    // JO_Num : property JO_Num 
   property JO_Num:WideString read Get_JO_Num write Set_JO_Num;
    // JO_Intitule : property JO_Intitule 
   property JO_Intitule:WideString read Get_JO_Intitule write Set_JO_Intitule;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // JO_Type : property JO_Type 
   property JO_Type:JournalType read Get_JO_Type write Set_JO_Type;
    // JO_NumPiece : property JO_NumPiece 
   property JO_NumPiece:JournalNumPieceType read Get_JO_NumPiece write Set_JO_NumPiece;
    // JO_Contrepartie : property JO_Contrepartie 
   property JO_Contrepartie:WordBool read Get_JO_Contrepartie write Set_JO_Contrepartie;
    // JO_SaisAnal : property JO_SaisAnal 
   property JO_SaisAnal:WordBool read Get_JO_SaisAnal write Set_JO_SaisAnal;
    // JO_NotCalcTot : property JO_NotCalcTot 
   property JO_NotCalcTot:WordBool read Get_JO_NotCalcTot write Set_JO_NotCalcTot;
    // JO_Rappro : property JO_Rappro 
   property JO_Rappro:JournalRapproType read Get_JO_Rappro write Set_JO_Rappro;
    // JO_Sommeil : property JO_Sommeil 
   property JO_Sommeil:WordBool read Get_JO_Sommeil write Set_JO_Sommeil;
    // JO_IFRS : property JO_IFRS 
   property JO_IFRS:WordBool read Get_JO_IFRS write Set_JO_IFRS;
    // JO_Reglement : property JO_Reglement 
   property JO_Reglement:WordBool read Get_JO_Reglement write Set_JO_Reglement;
    // NextEC_Piece : property NextEC_Piece 
   property NextEC_Piece[DatePeriode:TDateTime]:WideString read Get_NextEC_Piece;
    // TypePeriodCloture : property TypePeriodCloture 
   property TypePeriodCloture[DatePeriode:TDateTime]:PeriodClotureType read Get_TypePeriodCloture;
    // JO_LettrageSaisie : property JO_LettrageSaisie 
   property JO_LettrageSaisie:WordBool read Get_JO_LettrageSaisie write Set_JO_LettrageSaisie;
  end;


// IBOJournal3 : IBOJournal3 Interface

 IBOJournal3Disp = dispinterface
   ['{1837F306-0725-455A-8C15-1EC716483DDC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryJournal : property FactoryJournal 
   property FactoryJournal:IBOJournalFactory3  readonly dispid 100;
    // JO_Num : property JO_Num 
   property JO_Num:WideString dispid 101;
    // JO_Intitule : property JO_Intitule 
   property JO_Intitule:WideString dispid 102;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 103;
    // JO_Type : property JO_Type 
   property JO_Type:JournalType dispid 104;
    // JO_NumPiece : property JO_NumPiece 
   property JO_NumPiece:JournalNumPieceType dispid 105;
    // JO_Contrepartie : property JO_Contrepartie 
   property JO_Contrepartie:WordBool dispid 106;
    // JO_SaisAnal : property JO_SaisAnal 
   property JO_SaisAnal:WordBool dispid 107;
    // JO_NotCalcTot : property JO_NotCalcTot 
   property JO_NotCalcTot:WordBool dispid 108;
    // JO_Rappro : property JO_Rappro 
   property JO_Rappro:JournalRapproType dispid 109;
    // JO_Sommeil : property JO_Sommeil 
   property JO_Sommeil:WordBool dispid 110;
    // JO_IFRS : property JO_IFRS 
   property JO_IFRS:WordBool dispid 111;
    // JO_Reglement : property JO_Reglement 
   property JO_Reglement:WordBool dispid 112;
    // NextEC_Piece : property NextEC_Piece 
   property NextEC_Piece[DatePeriode:TDateTime]:WideString  readonly dispid 113;
    // TypePeriodCloture : property TypePeriodCloture 
   property TypePeriodCloture[DatePeriode:TDateTime]:PeriodClotureType  readonly dispid 114;
    // JO_LettrageSaisie : property JO_LettrageSaisie 
   property JO_LettrageSaisie:WordBool dispid 115;
  end;


// IBOJournalFactory3 : IBOJournalFactory3 Interface

 IBOJournalFactory3 = interface(IBITypeObjectFactory)
   ['{D117B205-3ECD-47C6-BDEB-FBA2CA55B484}']
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOJournal3;safecall;
  end;


// IBOJournalFactory3 : IBOJournalFactory3 Interface

 IBOJournalFactory3Disp = dispinterface
   ['{D117B205-3ECD-47C6-BDEB-FBA2CA55B484}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 10;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOJournal3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOModeleReglement : IBOModeleReglement Interface

 IBOModeleReglement = interface(IBIPersistObject)
   ['{CE004984-85E4-4CFF-9C59-94F7A2F64DB1}']
   function Get_FactoryModeleReglement : IBOModeleReglementFactory; safecall;
   function Get_FactoryModeleReglementLigne : IBITypeObjectFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
    // FactoryModeleReglement : property FactoryModeleReglement 
   property FactoryModeleReglement:IBOModeleReglementFactory read Get_FactoryModeleReglement;
    // FactoryModeleReglementLigne : property FactoryModeleReglementLigne 
   property FactoryModeleReglementLigne:IBITypeObjectFactory read Get_FactoryModeleReglementLigne;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
  end;


// IBOModeleReglement : IBOModeleReglement Interface

 IBOModeleReglementDisp = dispinterface
   ['{CE004984-85E4-4CFF-9C59-94F7A2F64DB1}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModeleReglement : property FactoryModeleReglement 
   property FactoryModeleReglement:IBOModeleReglementFactory  readonly dispid 100;
    // FactoryModeleReglementLigne : property FactoryModeleReglementLigne 
   property FactoryModeleReglementLigne:IBITypeObjectFactory  readonly dispid 101;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 102;
  end;


// IBOModeleReglementFactory : IBOModeleReglementFactory Interface

 IBOModeleReglementFactory = interface(IBITypeObjectFactory)
   ['{FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBOModeleReglement;safecall;
  end;


// IBOModeleReglementFactory : IBOModeleReglementFactory Interface

 IBOModeleReglementFactoryDisp = dispinterface
   ['{FEC25A08-6DB9-4A35-B6AC-3B8A385B7EAC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBOModeleReglement;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOFournisseurFactory3 : IBOFournisseurFactory3 Interface

 IBOFournisseurFactory3 = interface(IBITypeObjectFactory)
   ['{DCA2B175-C276-4507-B8C8-957D9C926ECA}']
   function Get_ListOrderClassement : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOFournisseur3;safecall;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection read Get_ListOrderClassement;
  end;


// IBOFournisseurFactory3 : IBOFournisseurFactory3 Interface

 IBOFournisseurFactory3Disp = dispinterface
   ['{DCA2B175-C276-4507-B8C8-957D9C926ECA}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 11;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOFournisseur3;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection  readonly dispid 10;
  end;


// IBOFournisseurTarifFactory3 : IBOFournisseurTarifFactory3 Interface

 IBOFournisseurTarifFactory3 = interface(IBITypeObjectFactory)
   ['{A215FD6B-A2D8-47D1-AE4F-40607DC18914}']
    // ExistArticle : methode ExistArticle 
   function ExistArticle(pArticle:IBOArticle3):WordBool;safecall;
    // ReadArticle : methode ReadArticle 
   function ReadArticle(pArticle:IBOArticle3):IBOArticleTarifFournisseur3;safecall;
  end;


// IBOFournisseurTarifFactory3 : IBOFournisseurTarifFactory3 Interface

 IBOFournisseurTarifFactory3Disp = dispinterface
   ['{A215FD6B-A2D8-47D1-AE4F-40607DC18914}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistArticle : methode ExistArticle 
   function ExistArticle(pArticle:IBOArticle3):WordBool;dispid 10;
    // ReadArticle : methode ReadArticle 
   function ReadArticle(pArticle:IBOArticle3):IBOArticleTarifFournisseur3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIArticleTarif3 : IBIArticleTarif3 Interface

 IBIArticleTarif3 = interface(IBIPersistObject)
   ['{C83AA501-A86D-4013-9604-DB7A80CFC893}']
   function Get_FactoryArticleTarifGamme : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleTarifQte : IBITypeObjectFactory; safecall;
   function Get_Article : IBOArticle3; safecall;
   procedure Set_Article(const pObject:IBOArticle3); safecall;
   function Get_Prix : Double; safecall;
   procedure Set_Prix(const pVal:Double); safecall;
   function Get_GammeRemise : IBPGamme; safecall;
   procedure Set_GammeRemise(const pObject:IBPGamme); safecall;
   function Get_PrixDevise : Double; safecall;
   procedure Set_PrixDevise(const pVal:Double); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pObject:IBPDevise2); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
   function Get_IsHorsRemise : WordBool; safecall;
   procedure Set_IsHorsRemise(const pVal:WordBool); safecall;
    // FactoryArticleTarifGamme : property FactoryArticleTarifGamme 
   property FactoryArticleTarifGamme:IBITypeObjectFactory read Get_FactoryArticleTarifGamme;
    // FactoryArticleTarifQte : property FactoryArticleTarifQte 
   property FactoryArticleTarifQte:IBITypeObjectFactory read Get_FactoryArticleTarifQte;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article write Set_Article;
    // Prix : property Prix 
   property Prix:Double read Get_Prix write Set_Prix;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme read Get_GammeRemise write Set_GammeRemise;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double read Get_PrixDevise write Set_PrixDevise;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool read Get_IsHorsRemise write Set_IsHorsRemise;
  end;


// IBIArticleTarif3 : IBIArticleTarif3 Interface

 IBIArticleTarif3Disp = dispinterface
   ['{C83AA501-A86D-4013-9604-DB7A80CFC893}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleTarifGamme : property FactoryArticleTarifGamme 
   property FactoryArticleTarifGamme:IBITypeObjectFactory  readonly dispid 100;
    // FactoryArticleTarifQte : property FactoryArticleTarifQte 
   property FactoryArticleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Article : property Article 
   property Article:IBOArticle3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
  end;


// IBOArticleTarifFournisseur3 : IBOArticleTarifFournisseur3 Interface

 IBOArticleTarifFournisseur3 = interface(IBIArticleTarif3)
   ['{0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}']
   function Get_Fournisseur : IBOFournisseur3; safecall;
   procedure Set_Fournisseur(const pFournisseur:IBOFournisseur3); safecall;
   function Get_Unite : IBPUnite; safecall;
   procedure Set_Unite(const pUnite:IBPUnite); safecall;
   function Get_AF_Conversion : Double; safecall;
   procedure Set_AF_Conversion(const pVal:Double); safecall;
   function Get_AF_DelaiAppro : Smallint; safecall;
   procedure Set_AF_DelaiAppro(const pVal:Smallint); safecall;
   function Get_AF_Garantie : Smallint; safecall;
   procedure Set_AF_Garantie(const pVal:Smallint); safecall;
   function Get_AF_Colisage : Double; safecall;
   procedure Set_AF_Colisage(const pVal:Double); safecall;
   function Get_AF_QteMini : Double; safecall;
   procedure Set_AF_QteMini(const pVal:Double); safecall;
   function Get_AF_ConvDiv : Double; safecall;
   procedure Set_AF_ConvDiv(const pVal:Double); safecall;
   function Get_AF_CodeBarre : WideString; safecall;
   procedure Set_AF_CodeBarre(const pVal:WideString); safecall;
   function Get_Reference : WideString; safecall;
   procedure Set_Reference(const pVal:WideString); safecall;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
    // Unite : property Unite 
   property Unite:IBPUnite read Get_Unite write Set_Unite;
    // AF_Conversion : property AF_Conversion 
   property AF_Conversion:Double read Get_AF_Conversion write Set_AF_Conversion;
    // AF_DelaiAppro : property AF_DelaiAppro 
   property AF_DelaiAppro:Smallint read Get_AF_DelaiAppro write Set_AF_DelaiAppro;
    // AF_Garantie : property AF_Garantie 
   property AF_Garantie:Smallint read Get_AF_Garantie write Set_AF_Garantie;
    // AF_Colisage : property AF_Colisage 
   property AF_Colisage:Double read Get_AF_Colisage write Set_AF_Colisage;
    // AF_QteMini : property AF_QteMini 
   property AF_QteMini:Double read Get_AF_QteMini write Set_AF_QteMini;
    // AF_ConvDiv : property AF_ConvDiv 
   property AF_ConvDiv:Double read Get_AF_ConvDiv write Set_AF_ConvDiv;
    // AF_CodeBarre : property AF_CodeBarre 
   property AF_CodeBarre:WideString read Get_AF_CodeBarre write Set_AF_CodeBarre;
    // Reference : property Reference 
   property Reference:WideString read Get_Reference write Set_Reference;
  end;

// IBOArticleTarifFournisseur3 : IBOArticleTarifFournisseur3 Interface

 IBOArticleTarifFournisseur3Disp = dispinterface
   ['{0717F9A2-9759-4C9E-9F7B-1B4F14DEDCD9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleTarifGamme : property FactoryArticleTarifGamme 
   property FactoryArticleTarifGamme:IBITypeObjectFactory  readonly dispid 100;
    // FactoryArticleTarifQte : property FactoryArticleTarifQte 
   property FactoryArticleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Article : property Article 
   property Article:IBOArticle3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 dispid 121;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 122;
    // AF_Conversion : property AF_Conversion 
   property AF_Conversion:Double dispid 123;
    // AF_DelaiAppro : property AF_DelaiAppro 
   property AF_DelaiAppro:Smallint dispid 124;
    // AF_Garantie : property AF_Garantie 
   property AF_Garantie:Smallint dispid 125;
    // AF_Colisage : property AF_Colisage 
   property AF_Colisage:Double dispid 126;
    // AF_QteMini : property AF_QteMini 
   property AF_QteMini:Double dispid 127;
    // AF_ConvDiv : property AF_ConvDiv 
   property AF_ConvDiv:Double dispid 128;
    // AF_CodeBarre : property AF_CodeBarre 
   property AF_CodeBarre:WideString dispid 129;
    // Reference : property Reference 
   property Reference:WideString dispid 130;
  end;


// IBPGamme : IBPGamme Interface

 IBPGamme = interface(IBIPersistObject)
   ['{A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}']
   function Get_FactoryGamme : IBPGammeFactory; safecall;
   function Get_G_Intitule : WideString; safecall;
   procedure Set_G_Intitule(const pVal:WideString); safecall;
   function Get_G_Type : GammeType; safecall;
   procedure Set_G_Type(const pVal:GammeType); safecall;
   function Get_Enums : IBIValuesInsertable; safecall;
    // FactoryGamme : property FactoryGamme 
   property FactoryGamme:IBPGammeFactory read Get_FactoryGamme;
    // G_Intitule : property G_Intitule 
   property G_Intitule:WideString read Get_G_Intitule write Set_G_Intitule;
    // G_Type : property G_Type 
   property G_Type:GammeType read Get_G_Type write Set_G_Type;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable read Get_Enums;
  end;


// IBPGamme : IBPGamme Interface

 IBPGammeDisp = dispinterface
   ['{A8D210EC-F571-4A8E-A8EA-3321FC63CEA4}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryGamme : property FactoryGamme 
   property FactoryGamme:IBPGammeFactory  readonly dispid 100;
    // G_Intitule : property G_Intitule 
   property G_Intitule:WideString dispid 101;
    // G_Type : property G_Type 
   property G_Type:GammeType dispid 102;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable  readonly dispid 103;
  end;


// IBPGammeFactory : IBPGammeFactory Interface

 IBPGammeFactory = interface(IBITypeObjectFactory)
   ['{9B668A94-4D86-4F0E-B090-78BEE0D375C6}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPGamme;safecall;
  end;


// IBPGammeFactory : IBPGammeFactory Interface

 IBPGammeFactoryDisp = dispinterface
   ['{9B668A94-4D86-4F0E-B090-78BEE0D375C6}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPGamme;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPExpedition3 : IBPExpedition3 Interface

 IBPExpedition3 = interface(IBIPersistObject)
   ['{24446917-6395-47E7-AB91-3AC9EAF0EBCB}']
   function Get_FactoryExpedition : IBPExpeditionFactory3; safecall;
   function Get_E_Intitule : WideString; safecall;
   procedure Set_E_Intitule(const pVal:WideString); safecall;
   function Get_E_Mode : WideString; safecall;
   procedure Set_E_Mode(const pVal:WideString); safecall;
   function Get_ArticleFraisExpedition : IBOArticle3; safecall;
   procedure Set_ArticleFraisExpedition(const pArticle:IBOArticle3); safecall;
   function Get_E_TypeFrais : DocumentFraisType; safecall;
   procedure Set_E_TypeFrais(const pVal:DocumentFraisType); safecall;
   function Get_E_ValFrais : Double; safecall;
   procedure Set_E_ValFrais(const pVal:Double); safecall;
   function Get_E_TypeFraisTTC : WordBool; safecall;
   procedure Set_E_TypeFraisTTC(const pVal:WordBool); safecall;
   function Get_E_TypeFranco : DocumentFraisType; safecall;
   procedure Set_E_TypeFranco(const pVal:DocumentFraisType); safecall;
   function Get_E_ValFranco : Double; safecall;
   procedure Set_E_ValFranco(const pVal:Double); safecall;
   function Get_E_TypeFrancoTTC : WordBool; safecall;
   procedure Set_E_TypeFrancoTTC(const pVal:WordBool); safecall;
    // FactoryExpedition : property FactoryExpedition 
   property FactoryExpedition:IBPExpeditionFactory3 read Get_FactoryExpedition;
    // E_Intitule : property E_Intitule 
   property E_Intitule:WideString read Get_E_Intitule write Set_E_Intitule;
    // E_Mode : property E_Mode 
   property E_Mode:WideString read Get_E_Mode write Set_E_Mode;
    // ArticleFraisExpedition : property ArticleFraisExpedition 
   property ArticleFraisExpedition:IBOArticle3 read Get_ArticleFraisExpedition write Set_ArticleFraisExpedition;
    // E_TypeFrais : property E_TypeFrais 
   property E_TypeFrais:DocumentFraisType read Get_E_TypeFrais write Set_E_TypeFrais;
    // E_ValFrais : property E_ValFrais 
   property E_ValFrais:Double read Get_E_ValFrais write Set_E_ValFrais;
    // E_TypeFraisTTC : property E_TypeFraisTTC 
   property E_TypeFraisTTC:WordBool read Get_E_TypeFraisTTC write Set_E_TypeFraisTTC;
    // E_TypeFranco : property E_TypeFranco 
   property E_TypeFranco:DocumentFraisType read Get_E_TypeFranco write Set_E_TypeFranco;
    // E_ValFranco : property E_ValFranco 
   property E_ValFranco:Double read Get_E_ValFranco write Set_E_ValFranco;
    // E_TypeFrancoTTC : property E_TypeFrancoTTC 
   property E_TypeFrancoTTC:WordBool read Get_E_TypeFrancoTTC write Set_E_TypeFrancoTTC;
  end;


// IBPExpedition3 : IBPExpedition3 Interface

 IBPExpedition3Disp = dispinterface
   ['{24446917-6395-47E7-AB91-3AC9EAF0EBCB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryExpedition : property FactoryExpedition 
   property FactoryExpedition:IBPExpeditionFactory3  readonly dispid 100;
    // E_Intitule : property E_Intitule 
   property E_Intitule:WideString dispid 101;
    // E_Mode : property E_Mode 
   property E_Mode:WideString dispid 102;
    // ArticleFraisExpedition : property ArticleFraisExpedition 
   property ArticleFraisExpedition:IBOArticle3 dispid 103;
    // E_TypeFrais : property E_TypeFrais 
   property E_TypeFrais:DocumentFraisType dispid 104;
    // E_ValFrais : property E_ValFrais 
   property E_ValFrais:Double dispid 105;
    // E_TypeFraisTTC : property E_TypeFraisTTC 
   property E_TypeFraisTTC:WordBool dispid 106;
    // E_TypeFranco : property E_TypeFranco 
   property E_TypeFranco:DocumentFraisType dispid 107;
    // E_ValFranco : property E_ValFranco 
   property E_ValFranco:Double dispid 108;
    // E_TypeFrancoTTC : property E_TypeFrancoTTC 
   property E_TypeFrancoTTC:WordBool dispid 109;
  end;


// IBPExpeditionFactory3 : IBPExpeditionFactory3 Interface

 IBPExpeditionFactory3 = interface(IBITypeObjectFactory)
   ['{06CAA04C-B790-4499-B2E6-D406B5436AC5}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPExpedition3;safecall;
  end;


// IBPExpeditionFactory3 : IBPExpeditionFactory3 Interface

 IBPExpeditionFactory3Disp = dispinterface
   ['{06CAA04C-B790-4499-B2E6-D406B5436AC5}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPExpedition3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPConditionLivraison : IBPConditionLivraison Interface

 IBPConditionLivraison = interface(IBIPersistObject)
   ['{1810CC00-BD69-4636-879F-6D8721659B26}']
   function Get_FactoryConditionLivraison : IBPConditionLivraisonFactory; safecall;
   function Get_C_Intitule : WideString; safecall;
   procedure Set_C_Intitule(const pVal:WideString); safecall;
   function Get_C_Mode : WideString; safecall;
   procedure Set_C_Mode(const pVal:WideString); safecall;
    // FactoryConditionLivraison : property FactoryConditionLivraison 
   property FactoryConditionLivraison:IBPConditionLivraisonFactory read Get_FactoryConditionLivraison;
    // C_Intitule : property C_Intitule 
   property C_Intitule:WideString read Get_C_Intitule write Set_C_Intitule;
    // C_Mode : property C_Mode 
   property C_Mode:WideString read Get_C_Mode write Set_C_Mode;
  end;


// IBPConditionLivraison : IBPConditionLivraison Interface

 IBPConditionLivraisonDisp = dispinterface
   ['{1810CC00-BD69-4636-879F-6D8721659B26}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryConditionLivraison : property FactoryConditionLivraison 
   property FactoryConditionLivraison:IBPConditionLivraisonFactory  readonly dispid 100;
    // C_Intitule : property C_Intitule 
   property C_Intitule:WideString dispid 101;
    // C_Mode : property C_Mode 
   property C_Mode:WideString dispid 102;
  end;


// IBPConditionLivraisonFactory : IBPConditionLivraisonFactory Interface

 IBPConditionLivraisonFactory = interface(IBITypeObjectFactory)
   ['{332BD75D-11D5-4EAC-97D0-317C5A870C92}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPConditionLivraison;safecall;
  end;


// IBPConditionLivraisonFactory : IBPConditionLivraisonFactory Interface

 IBPConditionLivraisonFactoryDisp = dispinterface
   ['{332BD75D-11D5-4EAC-97D0-317C5A870C92}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPConditionLivraison;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOFournisseurTarifFamilleFactory : IBOFournisseurTarifFamilleFactory Interface

 IBOFournisseurTarifFamilleFactory = interface(IBITypeObjectFactory)
   ['{E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}']
    // ExistFamille : methode ExistFamille 
   function ExistFamille(pFamille:IBOFamille3):WordBool;safecall;
    // ReadFamille : methode ReadFamille 
   function ReadFamille(pFamille:IBOFamille3):IBOFamilleTarifFournisseur;safecall;
  end;


// IBOFournisseurTarifFamilleFactory : IBOFournisseurTarifFamilleFactory Interface

 IBOFournisseurTarifFamilleFactoryDisp = dispinterface
   ['{E475E6B5-3557-4AC7-ABAD-08D18EE1C85F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistFamille : methode ExistFamille 
   function ExistFamille(pFamille:IBOFamille3):WordBool;dispid 10;
    // ReadFamille : methode ReadFamille 
   function ReadFamille(pFamille:IBOFamille3):IBOFamilleTarifFournisseur;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIFamilleTarif : IBIFamilleTarif Interface

 IBIFamilleTarif = interface(IBIPersistObject)
   ['{37E54430-C444-4A17-BE0A-33BB1D7501E4}']
   function Get_FactoryFamilleTarifQte : IBITypeObjectFactory; safecall;
   function Get_Famille : IBOFamille3; safecall;
   procedure Set_Famille(const pObject:IBOFamille3); safecall;
   function Get_GammeRemise : IBPGamme; safecall;
   procedure Set_GammeRemise(const pObject:IBPGamme); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pObject:IBPDevise2); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
   function Get_IsHorsRemise : WordBool; safecall;
   procedure Set_IsHorsRemise(const pVal:WordBool); safecall;
    // FactoryFamilleTarifQte : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQte:IBITypeObjectFactory read Get_FactoryFamilleTarifQte;
    // Famille : property Famille 
   property Famille:IBOFamille3 read Get_Famille write Set_Famille;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme read Get_GammeRemise write Set_GammeRemise;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool read Get_IsHorsRemise write Set_IsHorsRemise;
  end;


// IBIFamilleTarif : IBIFamilleTarif Interface

 IBIFamilleTarifDisp = dispinterface
   ['{37E54430-C444-4A17-BE0A-33BB1D7501E4}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryFamilleTarifQte : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Famille : property Famille 
   property Famille:IBOFamille3 dispid 102;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
  end;


// IBOFamilleTarifFournisseur : IBOFamilleTarifFournisseur Interface

 IBOFamilleTarifFournisseur = interface(IBIFamilleTarif)
   ['{21B9B379-C74C-43C1-94A1-CA84B97CFC85}']
   function Get_Fournisseur : IBOFournisseur3; safecall;
   procedure Set_Fournisseur(const pFournisseur:IBOFournisseur3); safecall;
   function Get_Unite : IBPUnite; safecall;
   procedure Set_Unite(const pUnite:IBPUnite); safecall;
   function Get_FF_Conversion : Double; safecall;
   procedure Set_FF_Conversion(const pVal:Double); safecall;
   function Get_FF_DelaiAppro : Smallint; safecall;
   procedure Set_FF_DelaiAppro(const pVal:Smallint); safecall;
   function Get_FF_Garantie : Smallint; safecall;
   procedure Set_FF_Garantie(const pVal:Smallint); safecall;
   function Get_FF_Colisage : Double; safecall;
   procedure Set_FF_Colisage(const pVal:Double); safecall;
   function Get_FF_QteMini : Double; safecall;
   procedure Set_FF_QteMini(const pVal:Double); safecall;
   function Get_FF_ConvDiv : Double; safecall;
   procedure Set_FF_ConvDiv(const pVal:Double); safecall;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
    // Unite : property Unite 
   property Unite:IBPUnite read Get_Unite write Set_Unite;
    // FF_Conversion : property FF_Conversion 
   property FF_Conversion:Double read Get_FF_Conversion write Set_FF_Conversion;
    // FF_DelaiAppro : property FF_DelaiAppro 
   property FF_DelaiAppro:Smallint read Get_FF_DelaiAppro write Set_FF_DelaiAppro;
    // FF_Garantie : property FF_Garantie 
   property FF_Garantie:Smallint read Get_FF_Garantie write Set_FF_Garantie;
    // FF_Colisage : property FF_Colisage 
   property FF_Colisage:Double read Get_FF_Colisage write Set_FF_Colisage;
    // FF_QteMini : property FF_QteMini 
   property FF_QteMini:Double read Get_FF_QteMini write Set_FF_QteMini;
    // FF_ConvDiv : property FF_ConvDiv 
   property FF_ConvDiv:Double read Get_FF_ConvDiv write Set_FF_ConvDiv;
  end;

// IBOFamilleTarifFournisseur : IBOFamilleTarifFournisseur Interface

 IBOFamilleTarifFournisseurDisp = dispinterface
   ['{21B9B379-C74C-43C1-94A1-CA84B97CFC85}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryFamilleTarifQte : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Famille : property Famille 
   property Famille:IBOFamille3 dispid 102;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 dispid 121;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 122;
    // FF_Conversion : property FF_Conversion 
   property FF_Conversion:Double dispid 123;
    // FF_DelaiAppro : property FF_DelaiAppro 
   property FF_DelaiAppro:Smallint dispid 124;
    // FF_Garantie : property FF_Garantie 
   property FF_Garantie:Smallint dispid 125;
    // FF_Colisage : property FF_Colisage 
   property FF_Colisage:Double dispid 126;
    // FF_QteMini : property FF_QteMini 
   property FF_QteMini:Double dispid 127;
    // FF_ConvDiv : property FF_ConvDiv 
   property FF_ConvDiv:Double dispid 128;
  end;


// IBOArticleGlossaireFactory2 : IBOArticleGlossaireFactory2 Interface

 IBOArticleGlossaireFactory2 = interface(IBITypeObjectFactory)
   ['{3D4D334C-0678-49C3-8387-C57A62BEAE19}']
    // AddGlossaire : methode AddGlossaire 
   procedure AddGlossaire(pGlossaire:IBOGlossaire2);safecall;
  end;


// IBOArticleGlossaireFactory2 : IBOArticleGlossaireFactory2 Interface

 IBOArticleGlossaireFactory2Disp = dispinterface
   ['{3D4D334C-0678-49C3-8387-C57A62BEAE19}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // AddGlossaire : methode AddGlossaire 
   procedure AddGlossaire(pGlossaire:IBOGlossaire2);dispid 10;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOGlossaire2 : IBOGlossaire2 Interface

 IBOGlossaire2 = interface(IBIPersistObject)
   ['{FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}']
   function Get_FactoryGlossaire : IBOGlossaireFactory; safecall;
   function Get_GL_Domaine : GlossaireDomaineType; safecall;
   procedure Set_GL_Domaine(const pVal:GlossaireDomaineType); safecall;
   function Get_GL_Intitule : WideString; safecall;
   procedure Set_GL_Intitule(const pVal:WideString); safecall;
   function Get_GL_Raccourci : WideString; safecall;
   procedure Set_GL_Raccourci(const pVal:WideString); safecall;
   function Get_GL_PeriodeDeb : TDateTime; safecall;
   procedure Set_GL_PeriodeDeb(const pVal:TDateTime); safecall;
   function Get_GL_PeriodeFin : TDateTime; safecall;
   procedure Set_GL_PeriodeFin(const pVal:TDateTime); safecall;
   function Get_GL_Text : WideString; safecall;
   procedure Set_GL_Text(const pVal:WideString); safecall;
   function Get_GL_Langue1 : WideString; safecall;
   procedure Set_GL_Langue1(const pVal:WideString); safecall;
   function Get_GL_Langue2 : WideString; safecall;
   procedure Set_GL_Langue2(const pVal:WideString); safecall;
    // FactoryGlossaire : property FactoryGlossaire 
   property FactoryGlossaire:IBOGlossaireFactory read Get_FactoryGlossaire;
    // GL_Domaine : property GL_Domaine 
   property GL_Domaine:GlossaireDomaineType read Get_GL_Domaine write Set_GL_Domaine;
    // GL_Intitule : property GL_Intitule 
   property GL_Intitule:WideString read Get_GL_Intitule write Set_GL_Intitule;
    // GL_Raccourci : property GL_Raccourci 
   property GL_Raccourci:WideString read Get_GL_Raccourci write Set_GL_Raccourci;
    // GL_PeriodeDeb : property GL_PeriodeDeb 
   property GL_PeriodeDeb:TDateTime read Get_GL_PeriodeDeb write Set_GL_PeriodeDeb;
    // GL_PeriodeFin : property GL_PeriodeFin 
   property GL_PeriodeFin:TDateTime read Get_GL_PeriodeFin write Set_GL_PeriodeFin;
    // GL_Text : property GL_Text 
   property GL_Text:WideString read Get_GL_Text write Set_GL_Text;
    // GL_Langue1 : property GL_Langue1 
   property GL_Langue1:WideString read Get_GL_Langue1 write Set_GL_Langue1;
    // GL_Langue2 : property GL_Langue2 
   property GL_Langue2:WideString read Get_GL_Langue2 write Set_GL_Langue2;
  end;


// IBOGlossaire2 : IBOGlossaire2 Interface

 IBOGlossaire2Disp = dispinterface
   ['{FF14BB30-6D4C-47D2-8580-1A4F453FB1B3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryGlossaire : property FactoryGlossaire 
   property FactoryGlossaire:IBOGlossaireFactory  readonly dispid 120;
    // GL_Domaine : property GL_Domaine 
   property GL_Domaine:GlossaireDomaineType dispid 121;
    // GL_Intitule : property GL_Intitule 
   property GL_Intitule:WideString dispid 122;
    // GL_Raccourci : property GL_Raccourci 
   property GL_Raccourci:WideString dispid 123;
    // GL_PeriodeDeb : property GL_PeriodeDeb 
   property GL_PeriodeDeb:TDateTime dispid 124;
    // GL_PeriodeFin : property GL_PeriodeFin 
   property GL_PeriodeFin:TDateTime dispid 125;
    // GL_Text : property GL_Text 
   property GL_Text:WideString dispid 126;
    // GL_Langue1 : property GL_Langue1 
   property GL_Langue1:WideString dispid 127;
    // GL_Langue2 : property GL_Langue2 
   property GL_Langue2:WideString dispid 128;
  end;


// IBOGlossaireFactory : IBOGlossaireFactory Interface

 IBOGlossaireFactory = interface(IBITypeObjectFactory)
   ['{D11C2E26-63C5-4C3E-A709-02C87420B297}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(GL_Domain:GlossaireDomaineType;sNum:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(GL_Domain:GlossaireDomaineType;sNum:WideString):IBOGlossaire2;safecall;
  end;


// IBOGlossaireFactory : IBOGlossaireFactory Interface

 IBOGlossaireFactoryDisp = dispinterface
   ['{D11C2E26-63C5-4C3E-A709-02C87420B297}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(GL_Domain:GlossaireDomaineType;sNum:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(GL_Domain:GlossaireDomaineType;sNum:WideString):IBOGlossaire2;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOArticleParamComptaFactory3 : IBOArticleParamComptaFactory3 Interface

 IBOArticleParamComptaFactory3 = interface(IBITypeObjectFactory)
   ['{A4EABB4A-6694-424D-841F-F835740942AF}']
    // QueryVente : methode QueryVente 
   function QueryVente:IBICollection;safecall;
    // QueryAchat : methode QueryAchat 
   function QueryAchat:IBICollection;safecall;
    // QueryStock : methode QueryStock 
   function QueryStock:IBICollection;safecall;
    // ExistCategorieCompta : methode ExistCategorieCompta 
   function ExistCategorieCompta(pCatCompta:IBICategorieCompta):WordBool;safecall;
    // ReadCategorieCompta : methode ReadCategorieCompta 
   function ReadCategorieCompta(pCatCompta:IBICategorieCompta):IBOArticleParamCompta3;safecall;
  end;


// IBOArticleParamComptaFactory3 : IBOArticleParamComptaFactory3 Interface

 IBOArticleParamComptaFactory3Disp = dispinterface
   ['{A4EABB4A-6694-424D-841F-F835740942AF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryVente : methode QueryVente 
   function QueryVente:IBICollection;dispid 10;
    // QueryAchat : methode QueryAchat 
   function QueryAchat:IBICollection;dispid 11;
    // QueryStock : methode QueryStock 
   function QueryStock:IBICollection;dispid 12;
    // ExistCategorieCompta : methode ExistCategorieCompta 
   function ExistCategorieCompta(pCatCompta:IBICategorieCompta):WordBool;dispid 13;
    // ReadCategorieCompta : methode ReadCategorieCompta 
   function ReadCategorieCompta(pCatCompta:IBICategorieCompta):IBOArticleParamCompta3;dispid 14;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIParamCompta3 : IBIParamCompta3 Interface

 IBIParamCompta3 = interface(IBIPersistObject)
   ['{265553D6-F316-44CF-9A43-B03A3FC11227}']
   function Get_CategorieCompta : IBICategorieCompta; safecall;
   procedure Set_CategorieCompta(const pObject:IBICategorieCompta); safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pObject:IBOCompteG3); safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pObject:IBOCompteA3); safecall;
   function Get_Taxe(sElt:Smallint) : IBOTaxe3; safecall;
   procedure Set_Taxe(const sElt:Smallint; const parTaxe:IBOTaxe3); safecall;
   function Get_OldTaxe(sElt:Smallint) : IBOTaxe3; safecall;
   procedure Set_OldTaxe(const sElt:Smallint; const parOldTaxe:IBOTaxe3); safecall;
   function Get_DateApplication(sElt:Smallint) : TDateTime; safecall;
   procedure Set_DateApplication(const sElt:Smallint; const parDateApplication:TDateTime); safecall;
   function Get_TaxeDateApplication(sElt:Smallint) : IBOTaxe3; safecall;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 read Get_Taxe write Set_Taxe;
    // OldTaxe : property OldTaxe 
   property OldTaxe[sElt:Smallint]:IBOTaxe3 read Get_OldTaxe write Set_OldTaxe;
    // DateApplication : property DateApplication 
   property DateApplication[sElt:Smallint]:TDateTime read Get_DateApplication write Set_DateApplication;
    // TaxeDateApplication : property TaxeDateApplication 
   property TaxeDateApplication[sElt:Smallint]:IBOTaxe3 read Get_TaxeDateApplication;
  end;


// IBIParamCompta3 : IBIParamCompta3 Interface

 IBIParamCompta3Disp = dispinterface
   ['{265553D6-F316-44CF-9A43-B03A3FC11227}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 100;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 101;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 102;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 103;
    // OldTaxe : property OldTaxe 
   property OldTaxe[sElt:Smallint]:IBOTaxe3 dispid 104;
    // DateApplication : property DateApplication 
   property DateApplication[sElt:Smallint]:TDateTime dispid 105;
    // TaxeDateApplication : property TaxeDateApplication 
   property TaxeDateApplication[sElt:Smallint]:IBOTaxe3  readonly dispid 106;
  end;


// IBOArticleParamCompta3 : IBOArticleParamCompta3 Interface

 IBOArticleParamCompta3 = interface(IBIParamCompta3)
   ['{AE8D2D0A-1E07-4E40-9C49-6749CE488E40}']
   function Get_FactoryArticleParamCompta : IBOArticleParamComptaFactory3; safecall;
   function Get_Article : IBOArticle3; safecall;
    // FactoryArticleParamCompta : property FactoryArticleParamCompta 
   property FactoryArticleParamCompta:IBOArticleParamComptaFactory3 read Get_FactoryArticleParamCompta;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
  end;

// IBOArticleParamCompta3 : IBOArticleParamCompta3 Interface

 IBOArticleParamCompta3Disp = dispinterface
   ['{AE8D2D0A-1E07-4E40-9C49-6749CE488E40}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 100;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 101;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 102;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 103;
    // OldTaxe : property OldTaxe 
   property OldTaxe[sElt:Smallint]:IBOTaxe3 dispid 104;
    // DateApplication : property DateApplication 
   property DateApplication[sElt:Smallint]:TDateTime dispid 105;
    // TaxeDateApplication : property TaxeDateApplication 
   property TaxeDateApplication[sElt:Smallint]:IBOTaxe3  readonly dispid 106;
    // FactoryArticleParamCompta : property FactoryArticleParamCompta 
   property FactoryArticleParamCompta:IBOArticleParamComptaFactory3  readonly dispid 110;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 111;
  end;


// IBOArticleDepotFactory : IBOArticleDepotFactory Interface

 IBOArticleDepotFactory = interface(IBITypeObjectFactory)
   ['{D3A62EEB-4AD8-405B-81B8-1E405B2A3388}']
    // ExistDepot : methode ExistDepot 
   function ExistDepot(pDepot:IBODepot3):WordBool;safecall;
    // ReadDepot : methode ReadDepot 
   function ReadDepot(pDepot:IBODepot3):IBOArticleDepot3;safecall;
  end;


// IBOArticleDepotFactory : IBOArticleDepotFactory Interface

 IBOArticleDepotFactoryDisp = dispinterface
   ['{D3A62EEB-4AD8-405B-81B8-1E405B2A3388}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistDepot : methode ExistDepot 
   function ExistDepot(pDepot:IBODepot3):WordBool;dispid 10;
    // ReadDepot : methode ReadDepot 
   function ReadDepot(pDepot:IBODepot3):IBOArticleDepot3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIArticleStock3 : IBIArticleStock3 Interface

 IBIArticleStock3 = interface(IBIPersistObject)
   ['{7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}']
   function Get_Article : IBOArticle3; safecall;
   function Get_Montant : Double; safecall;
    // StockValeur : methode StockValeur 
   function StockValeur(DateStock:TDateTime):Double;safecall;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;safecall;
    // StockReel : methode StockReel 
   function StockReel:Double;safecall;
    // StockCommande : methode StockCommande 
   function StockCommande:Double;safecall;
    // StockReserve : methode StockReserve 
   function StockReserve:Double;safecall;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;safecall;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;safecall;
    // StockReserveContremarque : methode StockReserveContremarque 
   function StockReserveContremarque:Double;safecall;
    // StockCommandeContremarque : methode StockCommandeContremarque 
   function StockCommandeContremarque:Double;safecall;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;safecall;
    // StockAControler : methode StockAControler 
   function StockAControler:Double;safecall;
   function Get_EmplacementPrincipal : IBODepotEmplacement; safecall;
   procedure Set_EmplacementPrincipal(const pObj:IBODepotEmplacement); safecall;
   function Get_EmplacementControle : IBODepotEmplacement; safecall;
   procedure Set_EmplacementControle(const pObj:IBODepotEmplacement); safecall;
   function Get_FactoryArticleStockEmpl : IBIArticleStockEmplFactory; safecall;
   function Get_CMUP : Double; safecall;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // Montant : property Montant 
   property Montant:Double read Get_Montant;
    // EmplacementPrincipal : property EmplacementPrincipal 
   property EmplacementPrincipal:IBODepotEmplacement read Get_EmplacementPrincipal write Set_EmplacementPrincipal;
    // EmplacementControle : property EmplacementControle 
   property EmplacementControle:IBODepotEmplacement read Get_EmplacementControle write Set_EmplacementControle;
    // FactoryArticleStockEmpl : property FactoryArticleStockEmpl 
   property FactoryArticleStockEmpl:IBIArticleStockEmplFactory read Get_FactoryArticleStockEmpl;
    // CMUP : property CMUP 
   property CMUP:Double read Get_CMUP;
  end;


// IBIArticleStock3 : IBIArticleStock3 Interface

 IBIArticleStock3Disp = dispinterface
   ['{7CE6D0E2-0CD6-4E2E-8FE7-6AC17BF6C22B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // StockValeur : methode StockValeur 
   function StockValeur(DateStock:TDateTime):Double;dispid 104;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;dispid 105;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 106;
    // StockCommande : methode StockCommande 
   function StockCommande:Double;dispid 107;
    // StockReserve : methode StockReserve 
   function StockReserve:Double;dispid 108;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 109;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;dispid 110;
    // StockReserveContremarque : methode StockReserveContremarque 
   function StockReserveContremarque:Double;dispid 111;
    // StockCommandeContremarque : methode StockCommandeContremarque 
   function StockCommandeContremarque:Double;dispid 112;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;dispid 113;
    // StockAControler : methode StockAControler 
   function StockAControler:Double;dispid 114;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // Montant : property Montant 
   property Montant:Double  readonly dispid 102;
    // EmplacementPrincipal : property EmplacementPrincipal 
   property EmplacementPrincipal:IBODepotEmplacement dispid 115;
    // EmplacementControle : property EmplacementControle 
   property EmplacementControle:IBODepotEmplacement dispid 116;
    // FactoryArticleStockEmpl : property FactoryArticleStockEmpl 
   property FactoryArticleStockEmpl:IBIArticleStockEmplFactory  readonly dispid 117;
    // CMUP : property CMUP 
   property CMUP:Double  readonly dispid 118;
  end;


// IBOArticleDepot3 : IBOArticleDepot3 Interface

 IBOArticleDepot3 = interface(IBIArticleStock3)
   ['{2F5884FD-3A5E-4729-B00D-E801A252F938}']
   function Get_FactoryArticleDepot : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleDepotGamme : IBOArticleDepotGammeFactory; safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pObject:IBODepot3); safecall;
   function Get_AS_QteMini : Double; safecall;
   procedure Set_AS_QteMini(const pVal:Double); safecall;
   function Get_AS_QteMaxi : Double; safecall;
   procedure Set_AS_QteMaxi(const pVal:Double); safecall;
   function Get_AS_Emplacement : WideString; safecall;
   procedure Set_AS_Emplacement(const pVal:WideString); safecall;
   function Get_FactoryArticleDepotLot : IBOArticleDepotLotFactory; safecall;
    // FactoryArticleDepot : property FactoryArticleDepot 
   property FactoryArticleDepot:IBITypeObjectFactory read Get_FactoryArticleDepot;
    // FactoryArticleDepotGamme : property FactoryArticleDepotGamme 
   property FactoryArticleDepotGamme:IBOArticleDepotGammeFactory read Get_FactoryArticleDepotGamme;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // AS_QteMini : property AS_QteMini 
   property AS_QteMini:Double read Get_AS_QteMini write Set_AS_QteMini;
    // AS_QteMaxi : property AS_QteMaxi 
   property AS_QteMaxi:Double read Get_AS_QteMaxi write Set_AS_QteMaxi;
    // AS_Emplacement : property AS_Emplacement 
   property AS_Emplacement:WideString read Get_AS_Emplacement write Set_AS_Emplacement;
    // FactoryArticleDepotLot : property FactoryArticleDepotLot 
   property FactoryArticleDepotLot:IBOArticleDepotLotFactory read Get_FactoryArticleDepotLot;
  end;

// IBOArticleDepot3 : IBOArticleDepot3 Interface

 IBOArticleDepot3Disp = dispinterface
   ['{2F5884FD-3A5E-4729-B00D-E801A252F938}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // StockValeur : methode StockValeur 
   function StockValeur(DateStock:TDateTime):Double;dispid 104;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;dispid 105;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 106;
    // StockCommande : methode StockCommande 
   function StockCommande:Double;dispid 107;
    // StockReserve : methode StockReserve 
   function StockReserve:Double;dispid 108;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 109;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;dispid 110;
    // StockReserveContremarque : methode StockReserveContremarque 
   function StockReserveContremarque:Double;dispid 111;
    // StockCommandeContremarque : methode StockCommandeContremarque 
   function StockCommandeContremarque:Double;dispid 112;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;dispid 113;
    // StockAControler : methode StockAControler 
   function StockAControler:Double;dispid 114;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // Montant : property Montant 
   property Montant:Double  readonly dispid 102;
    // EmplacementPrincipal : property EmplacementPrincipal 
   property EmplacementPrincipal:IBODepotEmplacement dispid 115;
    // EmplacementControle : property EmplacementControle 
   property EmplacementControle:IBODepotEmplacement dispid 116;
    // FactoryArticleStockEmpl : property FactoryArticleStockEmpl 
   property FactoryArticleStockEmpl:IBIArticleStockEmplFactory  readonly dispid 117;
    // CMUP : property CMUP 
   property CMUP:Double  readonly dispid 118;
    // FactoryArticleDepot : property FactoryArticleDepot 
   property FactoryArticleDepot:IBITypeObjectFactory  readonly dispid 120;
    // FactoryArticleDepotGamme : property FactoryArticleDepotGamme 
   property FactoryArticleDepotGamme:IBOArticleDepotGammeFactory  readonly dispid 121;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 122;
    // AS_QteMini : property AS_QteMini 
   property AS_QteMini:Double dispid 123;
    // AS_QteMaxi : property AS_QteMaxi 
   property AS_QteMaxi:Double dispid 124;
    // AS_Emplacement : property AS_Emplacement 
   property AS_Emplacement:WideString dispid 125;
    // FactoryArticleDepotLot : property FactoryArticleDepotLot 
   property FactoryArticleDepotLot:IBOArticleDepotLotFactory  readonly dispid 126;
  end;


// IBIArticleStockEmplFactory : IBIArticleStockEmplFactory Interface

 IBIArticleStockEmplFactory = interface(IBITypeObjectFactory)
   ['{15BEC968-6889-4E2D-99E7-6F16FCE810C2}']
    // ExistEmplacement : methode ExistEmplacement 
   function ExistEmplacement(pDepotEmpl:IBODepotEmplacement):WordBool;safecall;
    // ReadEmplacement : methode ReadEmplacmeent 
   function ReadEmplacement(pDepotEmpl:IBODepotEmplacement):IBIArticleStockEmpl;safecall;
  end;


// IBIArticleStockEmplFactory : IBIArticleStockEmplFactory Interface

 IBIArticleStockEmplFactoryDisp = dispinterface
   ['{15BEC968-6889-4E2D-99E7-6F16FCE810C2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistEmplacement : methode ExistEmplacement 
   function ExistEmplacement(pDepotEmpl:IBODepotEmplacement):WordBool;dispid 10;
    // ReadEmplacement : methode ReadEmplacmeent 
   function ReadEmplacement(pDepotEmpl:IBODepotEmplacement):IBIArticleStockEmpl;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIArticleStockEmpl : IBIArticleStockEmpl Interface

 IBIArticleStockEmpl = interface(IBIPersistObject)
   ['{CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}']
   function Get_ArticleStock : IBIArticleStock3; safecall;
   function Get_Emplacement : IBODepotEmplacement; safecall;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;safecall;
    // StockReel : methode StockReel 
   function StockReel:Double;safecall;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;safecall;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;safecall;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;safecall;
    // ArticleStock : property ArticleStock 
   property ArticleStock:IBIArticleStock3 read Get_ArticleStock;
    // Emplacement : property Emplacement 
   property Emplacement:IBODepotEmplacement read Get_Emplacement;
  end;


// IBIArticleStockEmpl : IBIArticleStockEmpl Interface

 IBIArticleStockEmplDisp = dispinterface
   ['{CC7A5597-5EBF-4F1E-9297-1AD17CEA6469}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;dispid 102;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 103;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 104;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;dispid 105;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;dispid 106;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ArticleStock : property ArticleStock 
   property ArticleStock:IBIArticleStock3  readonly dispid 100;
    // Emplacement : property Emplacement 
   property Emplacement:IBODepotEmplacement  readonly dispid 101;
  end;


// IBOArticleDepotGammeFactory : IBOArticleDepotGammeFactory Interface

 IBOArticleDepotGammeFactory = interface(IBITypeObjectFactory)
   ['{42612014-B818-4C79-8148-6B5865839427}']
    // ExistMonoGamme : methode ExistMonoGamme 
   function ExistMonoGamme(pEnum:IBOArticleGammeEnum3):WordBool;safecall;
    // ReadMonoGamme : methode ReadMonoGamme 
   function ReadMonoGamme(pEnum:IBOArticleGammeEnum3):IBOArticleDepotGamme3;safecall;
    // ExistDoubleGamme : methode ExistDoubleGamme 
   function ExistDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):WordBool;safecall;
    // ReadDoubleGamme : methode ReadDoubleGamme 
   function ReadDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):IBOArticleDepotGamme3;safecall;
  end;


// IBOArticleDepotGammeFactory : IBOArticleDepotGammeFactory Interface

 IBOArticleDepotGammeFactoryDisp = dispinterface
   ['{42612014-B818-4C79-8148-6B5865839427}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistMonoGamme : methode ExistMonoGamme 
   function ExistMonoGamme(pEnum:IBOArticleGammeEnum3):WordBool;dispid 10;
    // ReadMonoGamme : methode ReadMonoGamme 
   function ReadMonoGamme(pEnum:IBOArticleGammeEnum3):IBOArticleDepotGamme3;dispid 11;
    // ExistDoubleGamme : methode ExistDoubleGamme 
   function ExistDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):WordBool;dispid 12;
    // ReadDoubleGamme : methode ReadDoubleGamme 
   function ReadDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3):IBOArticleDepotGamme3;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOArticleGammeEnum3 : IBOArticleGammeEnum3 Interface

 IBOArticleGammeEnum3 = interface(IBIPersistObject)
   ['{7B4F4FD4-510E-41E2-AB40-8675514BD227}']
   function Get_FactoryArticleGammeEnum : IBITypeObjectFactory; safecall;
   function Get_FactoryArticleGammeEnumRef : IBITypeObjectFactory; safecall;
   function Get_Article : IBOArticle3; safecall;
   function Get_EG_Enumere : WideString; safecall;
   procedure Set_EG_Enumere(const pVal:WideString); safecall;
    // FactoryArticleGammeEnum : property FactoryArticleGammeEnum 
   property FactoryArticleGammeEnum:IBITypeObjectFactory read Get_FactoryArticleGammeEnum;
    // FactoryArticleGammeEnumRef : property FactoryArticleGammeEnumRef 
   property FactoryArticleGammeEnumRef:IBITypeObjectFactory read Get_FactoryArticleGammeEnumRef;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // EG_Enumere : property EG_Enumere 
   property EG_Enumere:WideString read Get_EG_Enumere write Set_EG_Enumere;
  end;


// IBOArticleGammeEnum3 : IBOArticleGammeEnum3 Interface

 IBOArticleGammeEnum3Disp = dispinterface
   ['{7B4F4FD4-510E-41E2-AB40-8675514BD227}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleGammeEnum : property FactoryArticleGammeEnum 
   property FactoryArticleGammeEnum:IBITypeObjectFactory  readonly dispid 100;
    // FactoryArticleGammeEnumRef : property FactoryArticleGammeEnumRef 
   property FactoryArticleGammeEnumRef:IBITypeObjectFactory  readonly dispid 101;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 102;
    // EG_Enumere : property EG_Enumere 
   property EG_Enumere:WideString dispid 103;
  end;


// IBOArticleDepotGamme3 : IBOArticleDepotGamme3 Interface

 IBOArticleDepotGamme3 = interface(IBIArticleStock3)
   ['{B45B336F-48B6-4667-BB61-4073BAB2396B}']
   function Get_FactoryArticleDepotGamme : IBITypeObjectFactory; safecall;
   function Get_ArticleDepot : IBOArticleDepot3; safecall;
   function Get_ArticleGammeEnum1 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleGammeEnum1(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_ArticleGammeEnum2 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleGammeEnum2(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_GS_QteMini : Double; safecall;
   procedure Set_GS_QteMini(const pVal:Double); safecall;
   function Get_GS_QteMaxi : Double; safecall;
   procedure Set_GS_QteMaxi(const pVal:Double); safecall;
   function Get_GS_Emplacement : WideString; safecall;
   procedure Set_GS_Emplacement(const pVal:WideString); safecall;
    // FactoryArticleDepotGamme : property FactoryArticleDepotGamme 
   property FactoryArticleDepotGamme:IBITypeObjectFactory read Get_FactoryArticleDepotGamme;
    // ArticleDepot : property ArticleDepot 
   property ArticleDepot:IBOArticleDepot3 read Get_ArticleDepot;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleGammeEnum1 write Set_ArticleGammeEnum1;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleGammeEnum2 write Set_ArticleGammeEnum2;
    // GS_QteMini : property GS_QteMini 
   property GS_QteMini:Double read Get_GS_QteMini write Set_GS_QteMini;
    // GS_QteMaxi : property GS_QteMaxi 
   property GS_QteMaxi:Double read Get_GS_QteMaxi write Set_GS_QteMaxi;
    // GS_Emplacement : property GS_Emplacement 
   property GS_Emplacement:WideString read Get_GS_Emplacement write Set_GS_Emplacement;
  end;


// IBOArticleDepotGamme3 : IBOArticleDepotGamme3 Interface

 IBOArticleDepotGamme3Disp = dispinterface
   ['{B45B336F-48B6-4667-BB61-4073BAB2396B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // StockValeur : methode StockValeur 
   function StockValeur(DateStock:TDateTime):Double;dispid 104;
    // StockQte : methode StockQte 
   function StockQte(DateStock:TDateTime):Double;dispid 105;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 106;
    // StockCommande : methode StockCommande 
   function StockCommande:Double;dispid 107;
    // StockReserve : methode StockReserve 
   function StockReserve:Double;dispid 108;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 109;
    // StockPrepare : methode StockPrepare 
   function StockPrepare:Double;dispid 110;
    // StockReserveContremarque : methode StockReserveContremarque 
   function StockReserveContremarque:Double;dispid 111;
    // StockCommandeContremarque : methode StockCommandeContremarque 
   function StockCommandeContremarque:Double;dispid 112;
    // StockDispo : methode StockDispo 
   function StockDispo:Double;dispid 113;
    // StockAControler : methode StockAControler 
   function StockAControler:Double;dispid 114;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // Montant : property Montant 
   property Montant:Double  readonly dispid 102;
    // EmplacementPrincipal : property EmplacementPrincipal 
   property EmplacementPrincipal:IBODepotEmplacement dispid 115;
    // EmplacementControle : property EmplacementControle 
   property EmplacementControle:IBODepotEmplacement dispid 116;
    // FactoryArticleStockEmpl : property FactoryArticleStockEmpl 
   property FactoryArticleStockEmpl:IBIArticleStockEmplFactory  readonly dispid 117;
    // CMUP : property CMUP 
   property CMUP:Double  readonly dispid 118;
    // FactoryArticleDepotGamme : property FactoryArticleDepotGamme 
   property FactoryArticleDepotGamme:IBITypeObjectFactory  readonly dispid 120;
    // ArticleDepot : property ArticleDepot 
   property ArticleDepot:IBOArticleDepot3  readonly dispid 121;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 dispid 122;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 dispid 123;
    // GS_QteMini : property GS_QteMini 
   property GS_QteMini:Double dispid 124;
    // GS_QteMaxi : property GS_QteMaxi 
   property GS_QteMaxi:Double dispid 125;
    // GS_Emplacement : property GS_Emplacement 
   property GS_Emplacement:WideString dispid 126;
  end;


// IBOArticleDepotLotFactory : IBOArticleDepotLotFactory Interface

 IBOArticleDepotLotFactory = interface(IBITypeObjectFactory)
   ['{7D19DF66-979C-4941-A44C-1781EF1169D6}']
    // ExistNoSerie : methode ExistNoSerie 
   function ExistNoSerie(sNoSerie:WideString):WordBool;safecall;
    // ReadNoSerie : methode ReadNoSerie 
   function ReadNoSerie(sNoSerie:WideString):IBOArticleDepotLot;safecall;
    // QueryNonEpuise : methode QueryNonEpuise 
   function QueryNonEpuise:IBICollection;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
   function Get_NextNoSerie(sNumSerie:WideString) : WideString; safecall;
    // ExistNoSerieEmpl : methode ExistNoSerieEmpl 
   function ExistNoSerieEmpl(sNoSerie:WideString;pEmpl:IBODepotEmplacement):WordBool;safecall;
    // ReadNoSerieEmpl : methode ReadNoSerieEmpl 
   function ReadNoSerieEmpl(sNoSerie:WideString;pEmpl:IBODepotEmplacement):IBOArticleDepotLot;safecall;
    // QueryNoSerie : methode QueryNoSerie 
   function QueryNoSerie(sNoSerie:WideString):IBICollection;safecall;
    // QueryNonEpuiseNoSerie : methode QueryNonEpuiseNoSerie 
   function QueryNonEpuiseNoSerie(sNoSerie:WideString):IBICollection;safecall;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
    // NextNoSerie : property NextNoSerie 
   property NextNoSerie[sNumSerie:WideString]:WideString read Get_NextNoSerie;
  end;


// IBOArticleDepotLotFactory : IBOArticleDepotLotFactory Interface

 IBOArticleDepotLotFactoryDisp = dispinterface
   ['{7D19DF66-979C-4941-A44C-1781EF1169D6}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNoSerie : methode ExistNoSerie 
   function ExistNoSerie(sNoSerie:WideString):WordBool;dispid 10;
    // ReadNoSerie : methode ReadNoSerie 
   function ReadNoSerie(sNoSerie:WideString):IBOArticleDepotLot;dispid 11;
    // QueryNonEpuise : methode QueryNonEpuise 
   function QueryNonEpuise:IBICollection;dispid 12;
    // ExistNoSerieEmpl : methode ExistNoSerieEmpl 
   function ExistNoSerieEmpl(sNoSerie:WideString;pEmpl:IBODepotEmplacement):WordBool;dispid 15;
    // ReadNoSerieEmpl : methode ReadNoSerieEmpl 
   function ReadNoSerieEmpl(sNoSerie:WideString;pEmpl:IBODepotEmplacement):IBOArticleDepotLot;dispid 16;
    // QueryNoSerie : methode QueryNoSerie 
   function QueryNoSerie(sNoSerie:WideString):IBICollection;dispid 17;
    // QueryNonEpuiseNoSerie : methode QueryNonEpuiseNoSerie 
   function QueryNonEpuiseNoSerie(sNoSerie:WideString):IBICollection;dispid 18;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 13;
    // NextNoSerie : property NextNoSerie 
   property NextNoSerie[sNumSerie:WideString]:WideString  readonly dispid 14;
  end;


// IBILot : IBILot Interface

 IBILot = interface(IBIPersistObject)
   ['{8F0A81DA-61F3-4E59-A517-711854C64094}']
   function Get_ArticleDepot : IBIArticleStock3; safecall;
    // StockReel : methode StockReel 
   function StockReel:Double;safecall;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;safecall;
   function Get_IsEpuised : WordBool; safecall;
   function Get_LigneEntree : IBODocumentLigne3; safecall;
   function Get_IsEntamed : WordBool; safecall;
    // ArticleDepot : property ArticleDepot 
   property ArticleDepot:IBIArticleStock3 read Get_ArticleDepot;
    // IsEpuised : property IsEpuised 
   property IsEpuised:WordBool read Get_IsEpuised;
    // LigneEntree : property LigneEntree 
   property LigneEntree:IBODocumentLigne3 read Get_LigneEntree;
    // IsEntamed : property IsEntamed 
   property IsEntamed:WordBool read Get_IsEntamed;
  end;


// IBILot : IBILot Interface

 IBILotDisp = dispinterface
   ['{8F0A81DA-61F3-4E59-A517-711854C64094}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 102;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 103;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ArticleDepot : property ArticleDepot 
   property ArticleDepot:IBIArticleStock3  readonly dispid 101;
    // IsEpuised : property IsEpuised 
   property IsEpuised:WordBool  readonly dispid 104;
    // LigneEntree : property LigneEntree 
   property LigneEntree:IBODocumentLigne3  readonly dispid 105;
    // IsEntamed : property IsEntamed 
   property IsEntamed:WordBool  readonly dispid 106;
  end;


// IBOArticleDepotLot : IBOArticleDepotLot Interface

 IBOArticleDepotLot = interface(IBILot)
   ['{0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}']
   function Get_FactoryArticleDepotLot : IBOArticleDepotLotFactory; safecall;
   function Get_QteReserved : Double; safecall;
   function Get_NoSerie : WideString; safecall;
   procedure Set_NoSerie(const pVal:WideString); safecall;
   function Get_DatePeremption : TDateTime; safecall;
   procedure Set_DatePeremption(const pVal:TDateTime); safecall;
   function Get_DateFabrication : TDateTime; safecall;
   procedure Set_DateFabrication(const pVal:TDateTime); safecall;
   function Get_Complement : WideString; safecall;
   procedure Set_Complement(const pVal:WideString); safecall;
   function Get_InfoLibre : IBIValues; safecall;
    // FactoryArticleDepotLot : property FactoryArticleDepotLot 
   property FactoryArticleDepotLot:IBOArticleDepotLotFactory read Get_FactoryArticleDepotLot;
    // QteReserved : property QteReserved 
   property QteReserved:Double read Get_QteReserved;
    // NoSerie : property NoSerie 
   property NoSerie:WideString read Get_NoSerie write Set_NoSerie;
    // DatePeremption : property DatePeremption 
   property DatePeremption:TDateTime read Get_DatePeremption write Set_DatePeremption;
    // DateFabrication : property DateFabrication 
   property DateFabrication:TDateTime read Get_DateFabrication write Set_DateFabrication;
    // Complement : property Complement 
   property Complement:WideString read Get_Complement write Set_Complement;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
  end;

// IBOArticleDepotLot : IBOArticleDepotLot Interface

 IBOArticleDepotLotDisp = dispinterface
   ['{0FBEB56F-ECB1-4620-9121-7A9A19E6CA66}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // StockReel : methode StockReel 
   function StockReel:Double;dispid 102;
    // StockATerme : methode StockATerme 
   function StockATerme:Double;dispid 103;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ArticleDepot : property ArticleDepot 
   property ArticleDepot:IBIArticleStock3  readonly dispid 101;
    // IsEpuised : property IsEpuised 
   property IsEpuised:WordBool  readonly dispid 104;
    // LigneEntree : property LigneEntree 
   property LigneEntree:IBODocumentLigne3  readonly dispid 105;
    // IsEntamed : property IsEntamed 
   property IsEntamed:WordBool  readonly dispid 106;
    // FactoryArticleDepotLot : property FactoryArticleDepotLot 
   property FactoryArticleDepotLot:IBOArticleDepotLotFactory  readonly dispid 150;
    // QteReserved : property QteReserved 
   property QteReserved:Double  readonly dispid 151;
    // NoSerie : property NoSerie 
   property NoSerie:WideString dispid 152;
    // DatePeremption : property DatePeremption 
   property DatePeremption:TDateTime dispid 153;
    // DateFabrication : property DateFabrication 
   property DateFabrication:TDateTime dispid 154;
    // Complement : property Complement 
   property Complement:WideString dispid 155;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 156;
  end;


// IBOArticleGammeEnumFactory : IBOArticleGammeEnumFactory Interface

 IBOArticleGammeEnumFactory = interface(IBITypeObjectFactory)
   ['{D6B92633-1367-4753-BFD4-EC95C08D985D}']
    // ExistEnumere : methode ExistEnumere 
   function ExistEnumere(sEnum:WideString):WordBool;safecall;
    // ReadEnumere : methode ReadEnumere 
   function ReadEnumere(sEnum:WideString):IBOArticleGammeEnum3;safecall;
  end;


// IBOArticleGammeEnumFactory : IBOArticleGammeEnumFactory Interface

 IBOArticleGammeEnumFactoryDisp = dispinterface
   ['{D6B92633-1367-4753-BFD4-EC95C08D985D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistEnumere : methode ExistEnumere 
   function ExistEnumere(sEnum:WideString):WordBool;dispid 10;
    // ReadEnumere : methode ReadEnumere 
   function ReadEnumere(sEnum:WideString):IBOArticleGammeEnum3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOArticleCondFactory : IBOArticleCondFactory Interface

 IBOArticleCondFactory = interface(IBITypeObjectFactory)
   ['{2A9626FB-6EB3-4F95-82BB-307CD430E9E9}']
    // ExistEnumere : methode ExistEnumere 
   function ExistEnumere(sEnum:WideString;dQte:Double):WordBool;safecall;
    // ReadEnumere : methode ReadEnumere 
   function ReadEnumere(sEnum:WideString;dQte:Double):IBOArticleCond3;safecall;
    // ExistReference : methode ExistReference 
   function ExistReference(sReference:WideString):WordBool;safecall;
    // ReadReference : methode ReadReference 
   function ReadReference(sReference:WideString):IBOArticleCond3;safecall;
    // ExistPrincipal : methode ExistPrincipal 
   function ExistPrincipal:WordBool;safecall;
    // ReadPrincipal : methode ReadPrincipal 
   function ReadPrincipal:IBOArticleCond3;safecall;
  end;


// IBOArticleCondFactory : IBOArticleCondFactory Interface

 IBOArticleCondFactoryDisp = dispinterface
   ['{2A9626FB-6EB3-4F95-82BB-307CD430E9E9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistEnumere : methode ExistEnumere 
   function ExistEnumere(sEnum:WideString;dQte:Double):WordBool;dispid 10;
    // ReadEnumere : methode ReadEnumere 
   function ReadEnumere(sEnum:WideString;dQte:Double):IBOArticleCond3;dispid 11;
    // ExistReference : methode ExistReference 
   function ExistReference(sReference:WideString):WordBool;dispid 12;
    // ReadReference : methode ReadReference 
   function ReadReference(sReference:WideString):IBOArticleCond3;dispid 13;
    // ExistPrincipal : methode ExistPrincipal 
   function ExistPrincipal:WordBool;dispid 14;
    // ReadPrincipal : methode ReadPrincipal 
   function ReadPrincipal:IBOArticleCond3;dispid 15;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOArticleCond3 : IBOArticleCond3 Interface

 IBOArticleCond3 = interface(IBIPersistObject)
   ['{35A9D616-54B7-4A6B-A996-0E49C819430C}']
   function Get_FactoryArticleCond : IBOArticleCondFactory; safecall;
   function Get_Article : IBOArticle3; safecall;
   function Get_EC_Enumere : WideString; safecall;
   procedure Set_EC_Enumere(const pVal:WideString); safecall;
   function Get_EC_Quantite : Double; safecall;
   procedure Set_EC_Quantite(const pVal:Double); safecall;
   function Get_CO_Ref : WideString; safecall;
   procedure Set_CO_Ref(const pVal:WideString); safecall;
   function Get_CO_CodeBarre : WideString; safecall;
   procedure Set_CO_CodeBarre(const pVal:WideString); safecall;
   function Get_CO_EdiCode : WideString; safecall;
   procedure Set_CO_EdiCode(const pVal:WideString); safecall;
    // FactoryArticleCond : property FactoryArticleCond 
   property FactoryArticleCond:IBOArticleCondFactory read Get_FactoryArticleCond;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // EC_Enumere : property EC_Enumere 
   property EC_Enumere:WideString read Get_EC_Enumere write Set_EC_Enumere;
    // EC_Quantite : property EC_Quantite 
   property EC_Quantite:Double read Get_EC_Quantite write Set_EC_Quantite;
    // CO_Ref : property CO_Ref 
   property CO_Ref:WideString read Get_CO_Ref write Set_CO_Ref;
    // CO_CodeBarre : property CO_CodeBarre 
   property CO_CodeBarre:WideString read Get_CO_CodeBarre write Set_CO_CodeBarre;
    // CO_EdiCode : property CO_EdiCode 
   property CO_EdiCode:WideString read Get_CO_EdiCode write Set_CO_EdiCode;
  end;


// IBOArticleCond3 : IBOArticleCond3 Interface

 IBOArticleCond3Disp = dispinterface
   ['{35A9D616-54B7-4A6B-A996-0E49C819430C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleCond : property FactoryArticleCond 
   property FactoryArticleCond:IBOArticleCondFactory  readonly dispid 100;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 101;
    // EC_Enumere : property EC_Enumere 
   property EC_Enumere:WideString dispid 102;
    // EC_Quantite : property EC_Quantite 
   property EC_Quantite:Double dispid 103;
    // CO_Ref : property CO_Ref 
   property CO_Ref:WideString dispid 104;
    // CO_CodeBarre : property CO_CodeBarre 
   property CO_CodeBarre:WideString dispid 105;
    // CO_EdiCode : property CO_EdiCode 
   property CO_EdiCode:WideString dispid 106;
  end;


// IBPConditionnement : IBPConditionnement Interface

 IBPConditionnement = interface(IBIPersistObject)
   ['{E88BF6B0-535D-4FF8-948C-31D1F061072D}']
   function Get_FactoryConditionnement : IBPConditionnementFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_FactoryConditionnementEnum : IBITypeObjectFactory; safecall;
    // FactoryConditionnement : property FactoryConditionnement 
   property FactoryConditionnement:IBPConditionnementFactory read Get_FactoryConditionnement;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // FactoryConditionnementEnum : property FactoryConditionnementEnum 
   property FactoryConditionnementEnum:IBITypeObjectFactory read Get_FactoryConditionnementEnum;
  end;


// IBPConditionnement : IBPConditionnement Interface

 IBPConditionnementDisp = dispinterface
   ['{E88BF6B0-535D-4FF8-948C-31D1F061072D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryConditionnement : property FactoryConditionnement 
   property FactoryConditionnement:IBPConditionnementFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // FactoryConditionnementEnum : property FactoryConditionnementEnum 
   property FactoryConditionnementEnum:IBITypeObjectFactory  readonly dispid 102;
  end;


// IBPConditionnementFactory : IBPConditionnementFactory Interface

 IBPConditionnementFactory = interface(IBITypeObjectFactory)
   ['{33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPConditionnement;safecall;
  end;


// IBPConditionnementFactory : IBPConditionnementFactory Interface

 IBPConditionnementFactoryDisp = dispinterface
   ['{33DE9AD6-4F3F-4781-84C6-9821A23A3D5E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPConditionnement;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPCategorieTarif : IBPCategorieTarif Interface

 IBPCategorieTarif = interface(IBIPersistObject)
   ['{6C6002FD-4AD8-46AF-A50E-4D177150BDDA}']
   function Get_FactoryCategorieTarif : IBPCategorieTarifFactory; safecall;
   function Get_CT_Intitule : WideString; safecall;
   procedure Set_CT_Intitule(const pVal:WideString); safecall;
   function Get_CT_PrixTTC : WordBool; safecall;
   procedure Set_CT_PrixTTC(const pVal:WordBool); safecall;
    // FactoryCategorieTarif : property FactoryCategorieTarif 
   property FactoryCategorieTarif:IBPCategorieTarifFactory read Get_FactoryCategorieTarif;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString read Get_CT_Intitule write Set_CT_Intitule;
    // CT_PrixTTC : property CT_PrixTTC 
   property CT_PrixTTC:WordBool read Get_CT_PrixTTC write Set_CT_PrixTTC;
  end;


// IBPCategorieTarif : IBPCategorieTarif Interface

 IBPCategorieTarifDisp = dispinterface
   ['{6C6002FD-4AD8-46AF-A50E-4D177150BDDA}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryCategorieTarif : property FactoryCategorieTarif 
   property FactoryCategorieTarif:IBPCategorieTarifFactory  readonly dispid 100;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString dispid 101;
    // CT_PrixTTC : property CT_PrixTTC 
   property CT_PrixTTC:WordBool dispid 102;
  end;


// IBPCategorieTarifFactory : IBPCategorieTarifFactory Interface

 IBPCategorieTarifFactory = interface(IBITypeObjectFactory)
   ['{F1EC90B6-225B-4702-9A4C-73F56F0E13A7}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieTarif;safecall;
  end;


// IBPCategorieTarifFactory : IBPCategorieTarifFactory Interface

 IBPCategorieTarifFactoryDisp = dispinterface
   ['{F1EC90B6-225B-4702-9A4C-73F56F0E13A7}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieTarif;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOClient3 : IBOClient3 Interface

 IBOClient3 = interface(IBOTiersPart3)
   ['{00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}']
   function Get_FactoryClient : IBOClientFactory3; safecall;
   function Get_FactoryClientTarif : IBOClientTarifFactory3; safecall;
   function Get_FactoryClientLivraison : IBITypeObjectFactory; safecall;
   function Get_CT_Assurance : Double; safecall;
   procedure Set_CT_Assurance(const pVal:Double); safecall;
   function Get_CodeRisque : IBPCodeRisque; safecall;
   procedure Set_CodeRisque(const pCodeRisque:IBPCodeRisque); safecall;
   function Get_CatTarif : IBPCategorieTarif; safecall;
   procedure Set_CatTarif(const pCategorieTarif:IBPCategorieTarif); safecall;
   function Get_Periodicite : IBPPeriodicite; safecall;
   procedure Set_Periodicite(const pPeriodicite:IBPPeriodicite); safecall;
   function Get_CT_Facture : Smallint; safecall;
   procedure Set_CT_Facture(const pVal:Smallint); safecall;
   function Get_CT_BLFact : WordBool; safecall;
   procedure Set_CT_BLFact(const pVal:WordBool); safecall;
   function Get_CT_ControlEnc : ClientEncoursCtrlType; safecall;
   procedure Set_CT_ControlEnc(const pVal:ClientEncoursCtrlType); safecall;
   function Get_LivraisonPrincipal : IBOClientLivraison3; safecall;
   procedure Set_LivraisonPrincipal(const pClientLivraison:IBOClientLivraison3); safecall;
    // RisqueReel : methode RisqueReel 
   function RisqueReel:Double;safecall;
   function Get_CT_PrioriteLivr : Smallint; safecall;
   procedure Set_CT_PrioriteLivr(const pVal:Smallint); safecall;
   function Get_CT_LivrPartielle : WordBool; safecall;
   procedure Set_CT_LivrPartielle(const pVal:WordBool); safecall;
    // TotalMarge : methode TotalMarge 
   function TotalMarge(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;safecall;
   function Get_CentraleAchat : IBOClient3; safecall;
   procedure Set_CentraleAchat(const pClient:IBOClient3); safecall;
   function Get_FactoryClientTarifFamille : IBOClientTarifFamilleFactory; safecall;
   function Get_CT_DelaiTransport : Smallint; safecall;
   procedure Set_CT_DelaiTransport(const pVal:Smallint); safecall;
    // FactoryClient : property FactoryClient 
   property FactoryClient:IBOClientFactory3 read Get_FactoryClient;
    // FactoryClientTarif : property FactoryClientTarif 
   property FactoryClientTarif:IBOClientTarifFactory3 read Get_FactoryClientTarif;
    // FactoryClientLivraison : property FactoryClientLivraison 
   property FactoryClientLivraison:IBITypeObjectFactory read Get_FactoryClientLivraison;
    // CT_Assurance : property CT_Assurance 
   property CT_Assurance:Double read Get_CT_Assurance write Set_CT_Assurance;
    // CodeRisque : property CodeRisque 
   property CodeRisque:IBPCodeRisque read Get_CodeRisque write Set_CodeRisque;
    // CatTarif : property CatTarif 
   property CatTarif:IBPCategorieTarif read Get_CatTarif write Set_CatTarif;
    // Periodicite : property Periodicite 
   property Periodicite:IBPPeriodicite read Get_Periodicite write Set_Periodicite;
    // CT_Facture : property CT_Facture 
   property CT_Facture:Smallint read Get_CT_Facture write Set_CT_Facture;
    // CT_BLFact : property CT_BLFact 
   property CT_BLFact:WordBool read Get_CT_BLFact write Set_CT_BLFact;
    // CT_ControlEnc : property CT_ControlEnc 
   property CT_ControlEnc:ClientEncoursCtrlType read Get_CT_ControlEnc write Set_CT_ControlEnc;
    // LivraisonPrincipal : property LivraisonPrincipal 
   property LivraisonPrincipal:IBOClientLivraison3 read Get_LivraisonPrincipal write Set_LivraisonPrincipal;
    // CT_PrioriteLivr : property CT_PrioriteLivr 
   property CT_PrioriteLivr:Smallint read Get_CT_PrioriteLivr write Set_CT_PrioriteLivr;
    // CT_LivrPartielle : property CT_LivrPartielle 
   property CT_LivrPartielle:WordBool read Get_CT_LivrPartielle write Set_CT_LivrPartielle;
    // CentraleAchat : property CentraleAchat 
   property CentraleAchat:IBOClient3 read Get_CentraleAchat write Set_CentraleAchat;
    // FactoryClientTarifFamille : property FactoryClientTarifFamille 
   property FactoryClientTarifFamille:IBOClientTarifFamilleFactory read Get_FactoryClientTarifFamille;
    // CT_DelaiTransport : property CT_DelaiTransport 
   property CT_DelaiTransport:Smallint read Get_CT_DelaiTransport write Set_CT_DelaiTransport;
  end;


// IBOClient3 : IBOClient3 Interface

 IBOClient3Disp = dispinterface
   ['{00BD75EA-A70E-4D59-AA1F-4B7ED4CD130B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // MvtDebit : methode MvtDebit 
   function MvtDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 143;
    // MvtCredit : methode MvtCredit 
   function MvtCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 144;
    // MvtSolde : methode MvtSolde 
   function MvtSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 145;
    // MvtDevDebit : methode MvtDevDebit 
   function MvtDevDebit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 146;
    // MvtDevCredit : methode MvtDevCredit 
   function MvtDevCredit(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 147;
    // MvtDevSolde : methode MvtDevSolde 
   function MvtDevSolde(pCompteG:IBOCompteG3;pJournal:IBOJournal3;dDebut:TDateTime;dFin:TDateTime):Double;dispid 148;
    // Solde : methode Solde 
   function Solde:Double;dispid 149;
    // CleanPersonalData : methode CleanPersonalData 
   procedure CleanPersonalData;dispid 159;
    // CA_HTBrut : methode CA_HTBrut 
   function CA_HTBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 220;
    // CA_HTNet : methode CA_HTNet 
   function CA_HTNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 221;
    // CA_TTC : methode CA_TTC 
   function CA_TTC(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 222;
    // TotalPrixRevient : methode TotalPrixRevient 
   function TotalPrixRevient(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 223;
    // TotalQtes : methode TotalQtes 
   function TotalQtes(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 224;
    // TotalQtesColises : methode TotalQtesColises 
   function TotalQtesColises(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 225;
    // TotalPoidsNet : methode TotalPoidsNet 
   function TotalPoidsNet(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 226;
    // TotalPoidsBrut : methode TotalPoidsBrut 
   function TotalPoidsBrut(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 227;
    // TauxRemiseMoyen : methode TauxRemiseMoyen 
   function TauxRemiseMoyen(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 229;
    // SoldeEchus1 : methode SoldeEchus1 
   function SoldeEchus1:Double;dispid 230;
    // SoldeEchus2 : methode SoldeEchus2 
   function SoldeEchus2:Double;dispid 231;
    // SoldeEchus3 : methode SoldeEchus3 
   function SoldeEchus3:Double;dispid 232;
    // SoldeNonEchus : methode SoldeNonEchus 
   function SoldeNonEchus:Double;dispid 233;
    // DepassementEncours : methode DepassementEncours 
   function DepassementEncours:Double;dispid 234;
    // DepassementEncours2 : methode DepassementEncours2 
   function DepassementEncours2:Double;dispid 235;
    // Portefeuille : methode Portefeuille 
   function Portefeuille:Double;dispid 236;
    // PortefeuilleCommande : methode PortefeuilleCommande 
   function PortefeuilleCommande:Double;dispid 237;
    // TotalReglement : methode TotalReglement 
   function TotalReglement:Double;dispid 238;
    // DerniereFacture : methode DerniereFacture 
   function DerniereFacture:TDateTime;dispid 239;
    // DernierReglement : methode DernierReglement 
   function DernierReglement:TDateTime;dispid 240;
    // RisqueReel : methode RisqueReel 
   function RisqueReel:Double;dispid 312;
    // TotalMarge : methode TotalMarge 
   function TotalMarge(dDebut:TDateTime;dFin:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):Double;dispid 228;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3  readonly dispid 100;
    // FactoryTiersBanque : property FactoryTiersBanque 
   property FactoryTiersBanque:IBITypeObjectFactory  readonly dispid 101;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory  readonly dispid 102;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory  readonly dispid 103;
    // FactoryTiersCompteG : property FactoryTiersCompteG 
   property FactoryTiersCompteG:IBOTiersCompteGFactory3  readonly dispid 104;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory  readonly dispid 105;
    // CT_Num : property CT_Num 
   property CT_Num:WideString dispid 106;
    // CT_Intitule : property CT_Intitule 
   property CT_Intitule:WideString dispid 107;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType  readonly dispid 108;
    // CompteGPrinc : property CompteGPrinc 
   property CompteGPrinc:IBOCompteG3 dispid 109;
    // CT_Qualite : property CT_Qualite 
   property CT_Qualite:WideString dispid 110;
    // CT_Classement : property CT_Classement 
   property CT_Classement:WideString dispid 111;
    // CT_Contact : property CT_Contact 
   property CT_Contact:WideString dispid 112;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 113;
    // CT_Raccourci : property CT_Raccourci 
   property CT_Raccourci:WideString dispid 119;
    // BanquePrincipale : property BanquePrincipale 
   property BanquePrincipale:IBOTiersBanque3 dispid 120;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 121;
    // CT_Ape : property CT_Ape 
   property CT_Ape:WideString dispid 122;
    // CT_Identifiant : property CT_Identifiant 
   property CT_Identifiant:WideString dispid 123;
    // CT_Siret : property CT_Siret 
   property CT_Siret:WideString dispid 124;
    // CT_Stat : property CT_Stat 
   property CT_Stat[sElt:Smallint]:WideString dispid 125;
    // CT_Commentaire : property CT_Commentaire 
   property CT_Commentaire:WideString dispid 126;
    // CT_Langue : property CT_Langue 
   property CT_Langue:LangueType dispid 128;
    // CT_DateCreate : property CT_DateCreate 
   property CT_DateCreate:TDateTime  readonly dispid 132;
    // CT_SautLigne : property CT_SautLigne 
   property CT_SautLigne:Smallint dispid 133;
    // CT_SautPage : property CT_SautPage 
   property CT_SautPage:WordBool dispid 134;
    // CT_Lettrage : property CT_Lettrage 
   property CT_Lettrage:WordBool dispid 135;
    // CT_ValidEch : property CT_ValidEch 
   property CT_ValidEch:WordBool dispid 136;
    // CT_Sommeil : property CT_Sommeil 
   property CT_Sommeil:WordBool dispid 137;
    // CT_NotRappel : property CT_NotRappel 
   property CT_NotRappel:WordBool dispid 138;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 139;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 150;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 151;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement dispid 152;
    // CT_EdiCodeType : property CT_EdiCodeType 
   property CT_EdiCodeType:EdiCodeType dispid 153;
    // CT_EdiCode : property CT_EdiCode 
   property CT_EdiCode:WideString dispid 154;
    // CT_Facebook : property CT_Facebook 
   property CT_Facebook:WideString dispid 155;
    // CT_LinkedIn : property CT_LinkedIn 
   property CT_LinkedIn:WideString dispid 156;
    // ExclureMarketing : property ExclureMarketing 
   property ExclureMarketing:WordBool dispid 157;
    // ActivateGDPR : property ActivateGDPR 
   property ActivateGDPR:WordBool  readonly dispid 158;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 241;
    // CT_Encours : property CT_Encours 
   property CT_Encours:Double dispid 200;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 201;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 202;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 203;
    // CT_Coface : property CT_Coface 
   property CT_Coface:WideString dispid 204;
    // CT_Surveillance : property CT_Surveillance 
   property CT_Surveillance:WordBool dispid 205;
    // CT_SvDateCreate : property CT_SvDateCreate 
   property CT_SvDateCreate:TDateTime  readonly dispid 206;
    // CT_SvFormeJuri : property CT_SvFormeJuri 
   property CT_SvFormeJuri:WideString  readonly dispid 207;
    // CT_SvEffectif : property CT_SvEffectif 
   property CT_SvEffectif:WideString  readonly dispid 208;
    // CT_SvCA : property CT_SvCA 
   property CT_SvCA:Double  readonly dispid 209;
    // CT_SvResultat : property CT_SvResultat 
   property CT_SvResultat:Double  readonly dispid 210;
    // CT_SvIncident : property CT_SvIncident 
   property CT_SvIncident:Smallint  readonly dispid 211;
    // CT_SvDateIncid : property CT_SvDateIncid 
   property CT_SvDateIncid:TDateTime  readonly dispid 212;
    // CT_SvPrivil : property CT_SvPrivil 
   property CT_SvPrivil:Smallint  readonly dispid 213;
    // CT_SvRegul : property CT_SvRegul 
   property CT_SvRegul:WideString  readonly dispid 214;
    // CT_SvCotation : property CT_SvCotation 
   property CT_SvCotation:WideString  readonly dispid 215;
    // CT_SvDateMaj : property CT_SvDateMaj 
   property CT_SvDateMaj:TDateTime  readonly dispid 216;
    // CT_SvObjetMaj : property CT_SvObjetMaj 
   property CT_SvObjetMaj:WideString  readonly dispid 217;
    // CT_SvDateBilan : property CT_SvDateBilan 
   property CT_SvDateBilan:TDateTime  readonly dispid 218;
    // CT_SvNbMoisBilan : property CT_SvNbMoisBilan 
   property CT_SvNbMoisBilan:Smallint  readonly dispid 219;
    // TauxRemise : property TauxRemise 
   property TauxRemise:Double dispid 242;
    // TauxEscompte : property TauxEscompte 
   property TauxEscompte:Double dispid 243;
    // TauxReleve : property TauxReleve 
   property TauxReleve:Double dispid 244;
    // TauxRFA : property TauxRFA 
   property TauxRFA:Double dispid 245;
    // CT_DateFermetureDebut : property CT_DateFermetureDebut 
   property CT_DateFermetureDebut:TDateTime dispid 246;
    // CT_DateFermetureFin : property CT_DateFermetureFin 
   property CT_DateFermetureFin:TDateTime dispid 247;
    // Representant : property Representant 
   property Representant:IBOCollaborateur dispid 304;
    // FactoryClient : property FactoryClient 
   property FactoryClient:IBOClientFactory3  readonly dispid 299;
    // FactoryClientTarif : property FactoryClientTarif 
   property FactoryClientTarif:IBOClientTarifFactory3  readonly dispid 300;
    // FactoryClientLivraison : property FactoryClientLivraison 
   property FactoryClientLivraison:IBITypeObjectFactory  readonly dispid 301;
    // CT_Assurance : property CT_Assurance 
   property CT_Assurance:Double dispid 302;
    // CodeRisque : property CodeRisque 
   property CodeRisque:IBPCodeRisque dispid 303;
    // CatTarif : property CatTarif 
   property CatTarif:IBPCategorieTarif dispid 305;
    // Periodicite : property Periodicite 
   property Periodicite:IBPPeriodicite dispid 307;
    // CT_Facture : property CT_Facture 
   property CT_Facture:Smallint dispid 308;
    // CT_BLFact : property CT_BLFact 
   property CT_BLFact:WordBool dispid 309;
    // CT_ControlEnc : property CT_ControlEnc 
   property CT_ControlEnc:ClientEncoursCtrlType dispid 310;
    // LivraisonPrincipal : property LivraisonPrincipal 
   property LivraisonPrincipal:IBOClientLivraison3 dispid 311;
    // CT_PrioriteLivr : property CT_PrioriteLivr 
   property CT_PrioriteLivr:Smallint dispid 313;
    // CT_LivrPartielle : property CT_LivrPartielle 
   property CT_LivrPartielle:WordBool dispid 314;
    // CentraleAchat : property CentraleAchat 
   property CentraleAchat:IBOClient3 dispid 315;
    // FactoryClientTarifFamille : property FactoryClientTarifFamille 
   property FactoryClientTarifFamille:IBOClientTarifFamilleFactory  readonly dispid 316;
    // CT_DelaiTransport : property CT_DelaiTransport 
   property CT_DelaiTransport:Smallint dispid 317;
  end;


// IBOClientFactory3 : IBOClientFactory3 Interface

 IBOClientFactory3 = interface(IBITypeObjectFactory)
   ['{6BB5E17E-287A-4B68-A365-EF1FAA811446}']
   function Get_ListOrderClassement : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOClient3;safecall;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection read Get_ListOrderClassement;
  end;


// IBOClientFactory3 : IBOClientFactory3 Interface

 IBOClientFactory3Disp = dispinterface
   ['{6BB5E17E-287A-4B68-A365-EF1FAA811446}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 11;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOClient3;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection  readonly dispid 10;
  end;


// IBOClientTarifFactory3 : IBOClientTarifFactory3 Interface

 IBOClientTarifFactory3 = interface(IBITypeObjectFactory)
   ['{FA817628-4F1D-4710-AA2E-47449BA5FED8}']
    // ExistArticle : methode ExistArticle 
   function ExistArticle(pArticle:IBOArticle3):WordBool;safecall;
    // ReadArticle : methode ReadArticle 
   function ReadArticle(pArticle:IBOArticle3):IBOArticleTarifClient3;safecall;
  end;


// IBOClientTarifFactory3 : IBOClientTarifFactory3 Interface

 IBOClientTarifFactory3Disp = dispinterface
   ['{FA817628-4F1D-4710-AA2E-47449BA5FED8}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistArticle : methode ExistArticle 
   function ExistArticle(pArticle:IBOArticle3):WordBool;dispid 10;
    // ReadArticle : methode ReadArticle 
   function ReadArticle(pArticle:IBOArticle3):IBOArticleTarifClient3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIArticleTarifVente3 : IBIArticleTarifVente3 Interface

 IBIArticleTarifVente3 = interface(IBIArticleTarif3)
   ['{C1B065CF-2E61-43EA-B73B-EF938F600ADC}']
   function Get_FactoryArticleTarifCond : IBITypeObjectFactory; safecall;
   function Get_Coefficient : Double; safecall;
   procedure Set_Coefficient(const pVal:Double); safecall;
   function Get_PrixTTC : WordBool; safecall;
   procedure Set_PrixTTC(const pVal:WordBool); safecall;
   function Get_Arrondi : IBPArrondi; safecall;
   procedure Set_Arrondi(const pObject:IBPArrondi); safecall;
   function Get_Calcul : WordBool; safecall;
   procedure Set_Calcul(const pVal:WordBool); safecall;
    // FactoryArticleTarifCond : property FactoryArticleTarifCond 
   property FactoryArticleTarifCond:IBITypeObjectFactory read Get_FactoryArticleTarifCond;
    // Coefficient : property Coefficient 
   property Coefficient:Double read Get_Coefficient write Set_Coefficient;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool read Get_PrixTTC write Set_PrixTTC;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi read Get_Arrondi write Set_Arrondi;
    // Calcul : property Calcul 
   property Calcul:WordBool read Get_Calcul write Set_Calcul;
  end;


// IBIArticleTarifVente3 : IBIArticleTarifVente3 Interface

 IBIArticleTarifVente3Disp = dispinterface
   ['{C1B065CF-2E61-43EA-B73B-EF938F600ADC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleTarifGamme : property FactoryArticleTarifGamme 
   property FactoryArticleTarifGamme:IBITypeObjectFactory  readonly dispid 100;
    // FactoryArticleTarifQte : property FactoryArticleTarifQte 
   property FactoryArticleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Article : property Article 
   property Article:IBOArticle3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // FactoryArticleTarifCond : property FactoryArticleTarifCond 
   property FactoryArticleTarifCond:IBITypeObjectFactory  readonly dispid 120;
    // Coefficient : property Coefficient 
   property Coefficient:Double dispid 121;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool dispid 122;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi dispid 123;
    // Calcul : property Calcul 
   property Calcul:WordBool dispid 124;
  end;


// IBOArticleTarifClient3 : IBOArticleTarifClient3 Interface

 IBOArticleTarifClient3 = interface(IBIArticleTarifVente3)
   ['{59A52885-1DC4-4C57-85CD-E141875617F7}']
   function Get_Client : IBOClient3; safecall;
   procedure Set_Client(const pClient:IBOClient3); safecall;
   function Get_Reference : WideString; safecall;
   procedure Set_Reference(const pVal:WideString); safecall;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client write Set_Client;
    // Reference : property Reference 
   property Reference:WideString read Get_Reference write Set_Reference;
  end;

// IBOArticleTarifClient3 : IBOArticleTarifClient3 Interface

 IBOArticleTarifClient3Disp = dispinterface
   ['{59A52885-1DC4-4C57-85CD-E141875617F7}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleTarifGamme : property FactoryArticleTarifGamme 
   property FactoryArticleTarifGamme:IBITypeObjectFactory  readonly dispid 100;
    // FactoryArticleTarifQte : property FactoryArticleTarifQte 
   property FactoryArticleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Article : property Article 
   property Article:IBOArticle3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // FactoryArticleTarifCond : property FactoryArticleTarifCond 
   property FactoryArticleTarifCond:IBITypeObjectFactory  readonly dispid 120;
    // Coefficient : property Coefficient 
   property Coefficient:Double dispid 121;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool dispid 122;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi dispid 123;
    // Calcul : property Calcul 
   property Calcul:WordBool dispid 124;
    // Client : property Client 
   property Client:IBOClient3 dispid 131;
    // Reference : property Reference 
   property Reference:WideString dispid 132;
  end;


// IBPArrondi : IBPArrondi Interface

 IBPArrondi = interface(IBIPersistObject)
   ['{DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}']
   function Get_FactoryArrondi : IBITypeObjectFactory; safecall;
   function Get_AR_Valeur : Double; safecall;
   procedure Set_AR_Valeur(const pVal:Double); safecall;
   function Get_AR_Type : ArrondiType; safecall;
   procedure Set_AR_Type(const pVal:ArrondiType); safecall;
    // Arrondir : methode Arrondir 
   function Arrondir(dVal:Double):Double;safecall;
    // FactoryArrondi : property FactoryArrondi 
   property FactoryArrondi:IBITypeObjectFactory read Get_FactoryArrondi;
    // AR_Valeur : property AR_Valeur 
   property AR_Valeur:Double read Get_AR_Valeur write Set_AR_Valeur;
    // AR_Type : property AR_Type 
   property AR_Type:ArrondiType read Get_AR_Type write Set_AR_Type;
  end;


// IBPArrondi : IBPArrondi Interface

 IBPArrondiDisp = dispinterface
   ['{DD4B3B8D-BF13-45B6-BC00-D9967EFE6436}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Arrondir : methode Arrondir 
   function Arrondir(dVal:Double):Double;dispid 103;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArrondi : property FactoryArrondi 
   property FactoryArrondi:IBITypeObjectFactory  readonly dispid 100;
    // AR_Valeur : property AR_Valeur 
   property AR_Valeur:Double dispid 101;
    // AR_Type : property AR_Type 
   property AR_Type:ArrondiType dispid 102;
  end;


// IBPCodeRisque : IBPCodeRisque Interface

 IBPCodeRisque = interface(IBIPersistObject)
   ['{909942C0-ED30-41EA-9978-84EA9C00ABC2}']
   function Get_FactoryCodeRisque : IBPCodeRisqueFactory; safecall;
   function Get_R_Intitule : WideString; safecall;
   procedure Set_R_Intitule(const pVal:WideString); safecall;
   function Get_R_Type : RisqueType; safecall;
   procedure Set_R_Type(const pVal:RisqueType); safecall;
   function Get_R_Min : Double; safecall;
   procedure Set_R_Min(const pVal:Double); safecall;
   function Get_R_Max : Double; safecall;
   procedure Set_R_Max(const pVal:Double); safecall;
    // FactoryCodeRisque : property FactoryCodeRisque 
   property FactoryCodeRisque:IBPCodeRisqueFactory read Get_FactoryCodeRisque;
    // R_Intitule : property R_Intitule 
   property R_Intitule:WideString read Get_R_Intitule write Set_R_Intitule;
    // R_Type : property R_Type 
   property R_Type:RisqueType read Get_R_Type write Set_R_Type;
    // R_Min : property R_Min 
   property R_Min:Double read Get_R_Min write Set_R_Min;
    // R_Max : property R_Max 
   property R_Max:Double read Get_R_Max write Set_R_Max;
  end;


// IBPCodeRisque : IBPCodeRisque Interface

 IBPCodeRisqueDisp = dispinterface
   ['{909942C0-ED30-41EA-9978-84EA9C00ABC2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryCodeRisque : property FactoryCodeRisque 
   property FactoryCodeRisque:IBPCodeRisqueFactory  readonly dispid 100;
    // R_Intitule : property R_Intitule 
   property R_Intitule:WideString dispid 101;
    // R_Type : property R_Type 
   property R_Type:RisqueType dispid 102;
    // R_Min : property R_Min 
   property R_Min:Double dispid 103;
    // R_Max : property R_Max 
   property R_Max:Double dispid 104;
  end;


// IBPCodeRisqueFactory : IBPCodeRisqueFactory Interface

 IBPCodeRisqueFactory = interface(IBITypeObjectFactory)
   ['{1E96E46F-32F3-4768-8858-69D5B15A4542}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCodeRisque;safecall;
  end;


// IBPCodeRisqueFactory : IBPCodeRisqueFactory Interface

 IBPCodeRisqueFactoryDisp = dispinterface
   ['{1E96E46F-32F3-4768-8858-69D5B15A4542}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCodeRisque;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPPeriodicite : IBPPeriodicite Interface

 IBPPeriodicite = interface(IBIPersistObject)
   ['{2C9D5C91-300E-43CD-ACAD-804B92F42A66}']
   function Get_FactoryPeriodicite : IBPPeriodiciteFactory; safecall;
   function Get_P_Intitule : WideString; safecall;
   procedure Set_P_Intitule(const pVal:WideString); safecall;
    // FactoryPeriodicite : property FactoryPeriodicite 
   property FactoryPeriodicite:IBPPeriodiciteFactory read Get_FactoryPeriodicite;
    // P_Intitule : property P_Intitule 
   property P_Intitule:WideString read Get_P_Intitule write Set_P_Intitule;
  end;


// IBPPeriodicite : IBPPeriodicite Interface

 IBPPeriodiciteDisp = dispinterface
   ['{2C9D5C91-300E-43CD-ACAD-804B92F42A66}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryPeriodicite : property FactoryPeriodicite 
   property FactoryPeriodicite:IBPPeriodiciteFactory  readonly dispid 100;
    // P_Intitule : property P_Intitule 
   property P_Intitule:WideString dispid 101;
  end;


// IBPPeriodiciteFactory : IBPPeriodiciteFactory Interface

 IBPPeriodiciteFactory = interface(IBITypeObjectFactory)
   ['{1AB0F29D-8A10-4039-98B6-7200B2298586}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPPeriodicite;safecall;
  end;


// IBPPeriodiciteFactory : IBPPeriodiciteFactory Interface

 IBPPeriodiciteFactoryDisp = dispinterface
   ['{1AB0F29D-8A10-4039-98B6-7200B2298586}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPPeriodicite;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOClientLivraison3 : IBOClientLivraison3 Interface

 IBOClientLivraison3 = interface(IBIPersistObject)
   ['{6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}']
   function Get_FactoryClientLivraison : IBITypeObjectFactory; safecall;
   function Get_Client : IBOClient3; safecall;
   function Get_LI_Intitule : WideString; safecall;
   procedure Set_LI_Intitule(const pVal:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_LI_Contact : WideString; safecall;
   procedure Set_LI_Contact(const pVal:WideString); safecall;
   function Get_Expedition : IBPExpedition3; safecall;
   procedure Set_Expedition(const pExpedition:IBPExpedition3); safecall;
   function Get_ConditionLivraison : IBPConditionLivraison; safecall;
   procedure Set_ConditionLivraison(const pConditionLivraison:IBPConditionLivraison); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
    // FactoryClientLivraison : property FactoryClientLivraison 
   property FactoryClientLivraison:IBITypeObjectFactory read Get_FactoryClientLivraison;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
    // LI_Intitule : property LI_Intitule 
   property LI_Intitule:WideString read Get_LI_Intitule write Set_LI_Intitule;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // LI_Contact : property LI_Contact 
   property LI_Contact:WideString read Get_LI_Contact write Set_LI_Contact;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 read Get_Expedition write Set_Expedition;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison read Get_ConditionLivraison write Set_ConditionLivraison;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
  end;


// IBOClientLivraison3 : IBOClientLivraison3 Interface

 IBOClientLivraison3Disp = dispinterface
   ['{6F9CCCB6-C31A-4AF4-9D3C-8EEAD54DB697}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryClientLivraison : property FactoryClientLivraison 
   property FactoryClientLivraison:IBITypeObjectFactory  readonly dispid 100;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 101;
    // LI_Intitule : property LI_Intitule 
   property LI_Intitule:WideString dispid 102;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 103;
    // LI_Contact : property LI_Contact 
   property LI_Contact:WideString dispid 109;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 dispid 110;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison dispid 111;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 112;
  end;


// IBOClientTarifFamilleFactory : IBOClientTarifFamilleFactory Interface

 IBOClientTarifFamilleFactory = interface(IBITypeObjectFactory)
   ['{BDD6E49E-B5B4-42A6-BE56-60A4291A968D}']
    // ExistFamille : methode ExistFamille 
   function ExistFamille(pFamille:IBOFamille3):WordBool;safecall;
    // ReadFamille : methode ReadFamille 
   function ReadFamille(pFamille:IBOFamille3):IBOFamilleTarifClient;safecall;
  end;


// IBOClientTarifFamilleFactory : IBOClientTarifFamilleFactory Interface

 IBOClientTarifFamilleFactoryDisp = dispinterface
   ['{BDD6E49E-B5B4-42A6-BE56-60A4291A968D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistFamille : methode ExistFamille 
   function ExistFamille(pFamille:IBOFamille3):WordBool;dispid 10;
    // ReadFamille : methode ReadFamille 
   function ReadFamille(pFamille:IBOFamille3):IBOFamilleTarifClient;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIFamilleTarifVente : IBIFamilleTarifVente Interface

 IBIFamilleTarifVente = interface(IBIFamilleTarif)
   ['{B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}']
   function Get_Coefficient : Double; safecall;
   procedure Set_Coefficient(const pVal:Double); safecall;
   function Get_PrixTTC : WordBool; safecall;
   procedure Set_PrixTTC(const pVal:WordBool); safecall;
   function Get_Arrondi : IBPArrondi; safecall;
   procedure Set_Arrondi(const pObject:IBPArrondi); safecall;
   function Get_Calcul : WordBool; safecall;
   procedure Set_Calcul(const pVal:WordBool); safecall;
    // Coefficient : property Coefficient 
   property Coefficient:Double read Get_Coefficient write Set_Coefficient;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool read Get_PrixTTC write Set_PrixTTC;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi read Get_Arrondi write Set_Arrondi;
    // Calcul : property Calcul 
   property Calcul:WordBool read Get_Calcul write Set_Calcul;
  end;


// IBIFamilleTarifVente : IBIFamilleTarifVente Interface

 IBIFamilleTarifVenteDisp = dispinterface
   ['{B7F0BEA4-EFDF-4B4B-A85E-0B8DE3287753}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryFamilleTarifQte : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Famille : property Famille 
   property Famille:IBOFamille3 dispid 102;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // Coefficient : property Coefficient 
   property Coefficient:Double dispid 121;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool dispid 122;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi dispid 123;
    // Calcul : property Calcul 
   property Calcul:WordBool dispid 124;
  end;


// IBOFamilleTarifClient : IBOFamilleTarifClient Interface

 IBOFamilleTarifClient = interface(IBIFamilleTarifVente)
   ['{431AE828-CED0-43E6-A464-69428A50272A}']
   function Get_Client : IBOClient3; safecall;
   procedure Set_Client(const pClient:IBOClient3); safecall;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client write Set_Client;
  end;

// IBOFamilleTarifClient : IBOFamilleTarifClient Interface

 IBOFamilleTarifClientDisp = dispinterface
   ['{431AE828-CED0-43E6-A464-69428A50272A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryFamilleTarifQte : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Famille : property Famille 
   property Famille:IBOFamille3 dispid 102;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // Coefficient : property Coefficient 
   property Coefficient:Double dispid 121;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool dispid 122;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi dispid 123;
    // Calcul : property Calcul 
   property Calcul:WordBool dispid 124;
    // Client : property Client 
   property Client:IBOClient3 dispid 131;
  end;


// IBIRessource : IBIRessource Interface

 IBIRessource = interface(IBIPersistObject)
   ['{ADAB67DA-15B9-41FC-A28E-9B9154D761F0}']
   function Get_FactoryRessourceBase : IBIRessourceFactory; safecall;
   function Get_FactoryRessourceArticle : IBIRessourceArticleFactory; safecall;
   function Get_FactoryRessourceRessource : IBIRessourceRessourceFactory; safecall;
   function Get_RP_TypeRess : RessourceType; safecall;
   function Get_RP_Code : WideString; safecall;
   procedure Set_RP_Code(const pVal:WideString); safecall;
   function Get_RP_Type : RessourceProdType; safecall;
   procedure Set_RP_Type(const pVal:RessourceProdType); safecall;
   function Get_RP_Intitule : WideString; safecall;
   procedure Set_RP_Intitule(const pVal:WideString); safecall;
   function Get_RP_Complement : WideString; safecall;
   procedure Set_RP_Complement(const pVal:WideString); safecall;
   function Get_RP_Commentaire : WideString; safecall;
   procedure Set_RP_Commentaire(const pVal:WideString); safecall;
   function Get_RessourceCentrale : IBIRessource; safecall;
   procedure Set_RessourceCentrale(const pVal:IBIRessource); safecall;
   function Get_RP_Visite : TDateTime; safecall;
   procedure Set_RP_Visite(const pVal:TDateTime); safecall;
   function Get_RP_Sommeil : WordBool; safecall;
   procedure Set_RP_Sommeil(const pVal:WordBool); safecall;
   function Get_RP_CoutStd : Double; safecall;
   procedure Set_RP_CoutStd(const pVal:Double); safecall;
   function Get_RP_DateCreation : TDateTime; safecall;
   function Get_RP_Capacite : Integer; safecall;
   procedure Set_RP_Capacite(const pVal:Integer); safecall;
   function Get_RP_Temps : Integer; safecall;
   procedure Set_RP_Temps(const pVal:Integer); safecall;
   function Get_ArticleDefault : IBOArticle3; safecall;
   procedure Set_ArticleDefault(const pVal:IBOArticle3); safecall;
   function Get_Unite : IBPUnite; safecall;
   procedure Set_Unite(const pUnite:IBPUnite); safecall;
   function Get_RP_Continue : WordBool; safecall;
   procedure Set_RP_Continue(const pVal:WordBool); safecall;
   function Get_Horaire1(iDayOfWeek:Smallint) : IDateTimePeriod; safecall;
   procedure Set_Horaire1(const iDayOfWeek:Smallint; const parHoraire1:IDateTimePeriod); safecall;
   function Get_Horaire2(iDayOfWeek:Smallint) : IDateTimePeriod; safecall;
   procedure Set_Horaire2(const iDayOfWeek:Smallint; const parHoraire2:IDateTimePeriod); safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pObject:IBODepot3); safecall;
   function Get_RP_Facebook : WideString; safecall;
   procedure Set_RP_Facebook(const pVal:WideString); safecall;
   function Get_RP_LinkedIn : WideString; safecall;
   procedure Set_RP_LinkedIn(const pVal:WideString); safecall;
   function Get_RP_Skype : WideString; safecall;
   procedure Set_RP_Skype(const pVal:WideString); safecall;
    // FactoryRessourceBase : property FactoryRessourceBase 
   property FactoryRessourceBase:IBIRessourceFactory read Get_FactoryRessourceBase;
    // FactoryRessourceArticle : Acces aux articles ratachés à la ressource 
   property FactoryRessourceArticle:IBIRessourceArticleFactory read Get_FactoryRessourceArticle;
    // FactoryRessourceRessource : Acces aux sous objets ressources (centre ou ressource selon le type de l'objet parent) 
   property FactoryRessourceRessource:IBIRessourceRessourceFactory read Get_FactoryRessourceRessource;
    // RP_TypeRess : property RP_TypeRess 
   property RP_TypeRess:RessourceType read Get_RP_TypeRess;
    // RP_Code : property RP_Code 
   property RP_Code:WideString read Get_RP_Code write Set_RP_Code;
    // RP_Type : property RP_Type 
   property RP_Type:RessourceProdType read Get_RP_Type write Set_RP_Type;
    // RP_Intitule : property RP_Intitule 
   property RP_Intitule:WideString read Get_RP_Intitule write Set_RP_Intitule;
    // RP_Complement : property RP_Complement 
   property RP_Complement:WideString read Get_RP_Complement write Set_RP_Complement;
    // RP_Commentaire : property RP_Commentaire 
   property RP_Commentaire:WideString read Get_RP_Commentaire write Set_RP_Commentaire;
    // RessourceCentrale : property RessourceCentrale 
   property RessourceCentrale:IBIRessource read Get_RessourceCentrale write Set_RessourceCentrale;
    // RP_Visite : property RP_Visite 
   property RP_Visite:TDateTime read Get_RP_Visite write Set_RP_Visite;
    // RP_Sommeil : property RP_Sommeil 
   property RP_Sommeil:WordBool read Get_RP_Sommeil write Set_RP_Sommeil;
    // RP_CoutStd : property RP_CoutStd 
   property RP_CoutStd:Double read Get_RP_CoutStd write Set_RP_CoutStd;
    // RP_DateCreation : property RP_DateCreation 
   property RP_DateCreation:TDateTime read Get_RP_DateCreation;
    // RP_Capacite : property RP_Capacite 
   property RP_Capacite:Integer read Get_RP_Capacite write Set_RP_Capacite;
    // RP_Temps : RP_Temps : Durée en nombre de secondes 
   property RP_Temps:Integer read Get_RP_Temps write Set_RP_Temps;
    // ArticleDefault : property ArticleDefault 
   property ArticleDefault:IBOArticle3 read Get_ArticleDefault write Set_ArticleDefault;
    // Unite : property Unite 
   property Unite:IBPUnite read Get_Unite write Set_Unite;
    // RP_Continue : property RP_Continue 
   property RP_Continue:WordBool read Get_RP_Continue write Set_RP_Continue;
    // Horaire1 : property Horaire1 
   property Horaire1[iDayOfWeek:Smallint]:IDateTimePeriod read Get_Horaire1 write Set_Horaire1;
    // Horaire2 : property Horaire2 
   property Horaire2[iDayOfWeek:Smallint]:IDateTimePeriod read Get_Horaire2 write Set_Horaire2;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // RP_Facebook : property RP_Facebook 
   property RP_Facebook:WideString read Get_RP_Facebook write Set_RP_Facebook;
    // RP_LinkedIn : property RP_LinkedIn 
   property RP_LinkedIn:WideString read Get_RP_LinkedIn write Set_RP_LinkedIn;
    // RP_Skype : property RP_Skype 
   property RP_Skype:WideString read Get_RP_Skype write Set_RP_Skype;
  end;


// IBIRessource : IBIRessource Interface

 IBIRessourceDisp = dispinterface
   ['{ADAB67DA-15B9-41FC-A28E-9B9154D761F0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryRessourceBase : property FactoryRessourceBase 
   property FactoryRessourceBase:IBIRessourceFactory  readonly dispid 100;
    // FactoryRessourceArticle : Acces aux articles ratachés à la ressource 
   property FactoryRessourceArticle:IBIRessourceArticleFactory  readonly dispid 101;
    // FactoryRessourceRessource : Acces aux sous objets ressources (centre ou ressource selon le type de l'objet parent) 
   property FactoryRessourceRessource:IBIRessourceRessourceFactory  readonly dispid 102;
    // RP_TypeRess : property RP_TypeRess 
   property RP_TypeRess:RessourceType  readonly dispid 103;
    // RP_Code : property RP_Code 
   property RP_Code:WideString dispid 104;
    // RP_Type : property RP_Type 
   property RP_Type:RessourceProdType dispid 105;
    // RP_Intitule : property RP_Intitule 
   property RP_Intitule:WideString dispid 106;
    // RP_Complement : property RP_Complement 
   property RP_Complement:WideString dispid 107;
    // RP_Commentaire : property RP_Commentaire 
   property RP_Commentaire:WideString dispid 108;
    // RessourceCentrale : property RessourceCentrale 
   property RessourceCentrale:IBIRessource dispid 109;
    // RP_Visite : property RP_Visite 
   property RP_Visite:TDateTime dispid 110;
    // RP_Sommeil : property RP_Sommeil 
   property RP_Sommeil:WordBool dispid 111;
    // RP_CoutStd : property RP_CoutStd 
   property RP_CoutStd:Double dispid 112;
    // RP_DateCreation : property RP_DateCreation 
   property RP_DateCreation:TDateTime  readonly dispid 113;
    // RP_Capacite : property RP_Capacite 
   property RP_Capacite:Integer dispid 114;
    // RP_Temps : RP_Temps : Durée en nombre de secondes 
   property RP_Temps:Integer dispid 115;
    // ArticleDefault : property ArticleDefault 
   property ArticleDefault:IBOArticle3 dispid 116;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 117;
    // RP_Continue : property RP_Continue 
   property RP_Continue:WordBool dispid 118;
    // Horaire1 : property Horaire1 
   property Horaire1[iDayOfWeek:Smallint]:IDateTimePeriod dispid 119;
    // Horaire2 : property Horaire2 
   property Horaire2[iDayOfWeek:Smallint]:IDateTimePeriod dispid 120;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 121;
    // RP_Facebook : property RP_Facebook 
   property RP_Facebook:WideString dispid 122;
    // RP_LinkedIn : property RP_LinkedIn 
   property RP_LinkedIn:WideString dispid 123;
    // RP_Skype : property RP_Skype 
   property RP_Skype:WideString dispid 124;
  end;


// IBIRessourceFactory : IBIRessourceFactory Interface

 IBIRessourceFactory = interface(IBITypeObjectFactory)
   ['{0BCE62DD-2E2C-42E1-80C3-077DBB162749}']
   function Get_ListOrderIntitule : IBICollection; safecall;
   function Get_ListOrderTypeRessource : IBICollection; safecall;
   function Get_ListOrderDepot : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBIRessource;safecall;
    // QueryTypeOrderCode : methode QueryTypeOrderCode 
   function QueryTypeOrderCode(sType:RessourceType):IBICollection;safecall;
    // QueryTypeOrderIntitule : methode QueryTypeOrderIntitule 
   function QueryTypeOrderIntitule(sType:RessourceType):IBICollection;safecall;
    // QueryTypeOrderTypeRessource : methode QueryTypeOrderTypeRessource 
   function QueryTypeOrderTypeRessource(sType:RessourceType):IBICollection;safecall;
    // QueryTypeOrderDepot : methode QueryTypeOrderDepot 
   function QueryTypeOrderDepot(sType:RessourceType):IBICollection;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
    // ListOrderIntitule : property ListOrderIntitule 
   property ListOrderIntitule:IBICollection read Get_ListOrderIntitule;
    // ListOrderTypeRessource : property ListOrderTypeRessource 
   property ListOrderTypeRessource:IBICollection read Get_ListOrderTypeRessource;
    // ListOrderDepot : property ListOrderDepot 
   property ListOrderDepot:IBICollection read Get_ListOrderDepot;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBIRessourceFactory : IBIRessourceFactory Interface

 IBIRessourceFactoryDisp = dispinterface
   ['{0BCE62DD-2E2C-42E1-80C3-077DBB162749}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 13;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBIRessource;dispid 14;
    // QueryTypeOrderCode : methode QueryTypeOrderCode 
   function QueryTypeOrderCode(sType:RessourceType):IBICollection;dispid 15;
    // QueryTypeOrderIntitule : methode QueryTypeOrderIntitule 
   function QueryTypeOrderIntitule(sType:RessourceType):IBICollection;dispid 16;
    // QueryTypeOrderTypeRessource : methode QueryTypeOrderTypeRessource 
   function QueryTypeOrderTypeRessource(sType:RessourceType):IBICollection;dispid 17;
    // QueryTypeOrderDepot : methode QueryTypeOrderDepot 
   function QueryTypeOrderDepot(sType:RessourceType):IBICollection;dispid 18;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderIntitule : property ListOrderIntitule 
   property ListOrderIntitule:IBICollection  readonly dispid 10;
    // ListOrderTypeRessource : property ListOrderTypeRessource 
   property ListOrderTypeRessource:IBICollection  readonly dispid 11;
    // ListOrderDepot : property ListOrderDepot 
   property ListOrderDepot:IBICollection  readonly dispid 12;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 19;
  end;


// IBIRessourceArticleFactory : IBIRessourceArticleFactory Interface

 IBIRessourceArticleFactory = interface(IBITypeObjectFactory)
   ['{8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}']
    // AddArticle : methode AddArticle 
   procedure AddArticle(pArticle:IBOArticle3);safecall;
    // RmvArticle : methode RmvArticle 
   procedure RmvArticle(pArticle:IBOArticle3);safecall;
  end;


// IBIRessourceArticleFactory : IBIRessourceArticleFactory Interface

 IBIRessourceArticleFactoryDisp = dispinterface
   ['{8BF73CA8-6C4E-4934-BF6D-DC63DD7FB254}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // AddArticle : methode AddArticle 
   procedure AddArticle(pArticle:IBOArticle3);dispid 10;
    // RmvArticle : methode RmvArticle 
   procedure RmvArticle(pArticle:IBOArticle3);dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIRessourceRessourceFactory : IBIRessourceRessourceFactory Interface

 IBIRessourceRessourceFactory = interface(IBITypeObjectFactory)
   ['{08ACED6A-5D87-4604-9C9A-30B316F9CB89}']
    // AddRessource : methode AddRessource 
   procedure AddRessource(pRessource:IBIRessource);safecall;
    // RmvRessource : methode RmvRessource 
   procedure RmvRessource(pRessource:IBIRessource);safecall;
  end;


// IBIRessourceRessourceFactory : IBIRessourceRessourceFactory Interface

 IBIRessourceRessourceFactoryDisp = dispinterface
   ['{08ACED6A-5D87-4604-9C9A-30B316F9CB89}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // AddRessource : methode AddRessource 
   procedure AddRessource(pRessource:IBIRessource);dispid 10;
    // RmvRessource : methode RmvRessource 
   procedure RmvRessource(pRessource:IBIRessource);dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IDateTimePeriod : IDateTimePeriod Interface

 IDateTimePeriod = interface(IDispatch)
   ['{4A394899-F9AD-47FF-96DB-590CC19411BB}']
   function Get_Start : TDateTime; safecall;
   procedure Set_Start(const pVal:TDateTime); safecall;
   function Get_End_ : TDateTime; safecall;
   procedure Set_End_(const pVal:TDateTime); safecall;
    // Start : property Start 
   property Start:TDateTime read Get_Start write Set_Start;
    // End : property End 
   property End_:TDateTime read Get_End_ write Set_End_;
  end;


// IDateTimePeriod : IDateTimePeriod Interface

 IDateTimePeriodDisp = dispinterface
   ['{4A394899-F9AD-47FF-96DB-590CC19411BB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Start : property Start 
   property Start:TDateTime dispid 10;
    // End : property End 
   property End_:TDateTime dispid 11;
  end;


// IBOArticleRessourceFactory : IBOArticleRessourceFactory Interface

 IBOArticleRessourceFactory = interface(IBITypeObjectFactory)
   ['{3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}']
    // AddRessource : methode AddRessource 
   procedure AddRessource(pRessource:IBIRessource);safecall;
    // RmvRessource : methode RmvRessource 
   procedure RmvRessource(pRessource:IBIRessource);safecall;
  end;


// IBOArticleRessourceFactory : IBOArticleRessourceFactory Interface

 IBOArticleRessourceFactoryDisp = dispinterface
   ['{3BE1AD20-A5F5-47E6-957D-9D4C78CF5CFC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // AddRessource : methode AddRessource 
   procedure AddRessource(pRessource:IBIRessource);dispid 10;
    // RmvRessource : methode RmvRessource 
   procedure RmvRessource(pRessource:IBIRessource);dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// ITransformationAchat : ITransformationAchat Interface

 ITransformationAchat = interface(IDispatch)
   ['{ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}']
    // CreateProcess_Commander : Transformation vers un bon de commande d'achat 
   function CreateProcess_Commander:IPMDocTransformer;safecall;
    // CreateProcess_Receptionner : Transformation vers un bon de livraison d'achat 
   function CreateProcess_Receptionner:IPMDocTransformer;safecall;
  end;


// ITransformationAchat : ITransformationAchat Interface

 ITransformationAchatDisp = dispinterface
   ['{ABA54143-C289-4EBD-AC4C-9CCBFF9DE305}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // CreateProcess_Commander : Transformation vers un bon de commande d'achat 
   function CreateProcess_Commander:IPMDocTransformer;dispid 10;
    // CreateProcess_Receptionner : Transformation vers un bon de livraison d'achat 
   function CreateProcess_Receptionner:IPMDocTransformer;dispid 11;
  end;


// IBIContact2 : IBIContact2 Interface

 IBIContact2 = interface(IBIPersistObject)
   ['{FAE14E25-D9B3-49D6-A51A-868E34BE6F50}']
   function Get_Nom : WideString; safecall;
   procedure Set_Nom(const pVal:WideString); safecall;
   function Get_Prenom : WideString; safecall;
   procedure Set_Prenom(const pVal:WideString); safecall;
   function Get_ServiceContact : IBPServiceContact; safecall;
   procedure Set_ServiceContact(const pObject:IBPServiceContact); safecall;
   function Get_Fonction : WideString; safecall;
   procedure Set_Fonction(const pVal:WideString); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
   function Get_Civilite : ContactCivilite; safecall;
   procedure Set_Civilite(const pVal:ContactCivilite); safecall;
   function Get_TypeContact : IBPContact; safecall;
   procedure Set_TypeContact(const pObject:IBPContact); safecall;
   function Get_Facebook : WideString; safecall;
   procedure Set_Facebook(const pVal:WideString); safecall;
   function Get_LinkedIn : WideString; safecall;
   procedure Set_LinkedIn(const pVal:WideString); safecall;
   function Get_Skype : WideString; safecall;
   procedure Set_Skype(const pVal:WideString); safecall;
    // Nom : property Nom 
   property Nom:WideString read Get_Nom write Set_Nom;
    // Prenom : property Prenom 
   property Prenom:WideString read Get_Prenom write Set_Prenom;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact read Get_ServiceContact write Set_ServiceContact;
    // Fonction : property Fonction 
   property Fonction:WideString read Get_Fonction write Set_Fonction;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite read Get_Civilite write Set_Civilite;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact read Get_TypeContact write Set_TypeContact;
    // Facebook : property Facebook 
   property Facebook:WideString read Get_Facebook write Set_Facebook;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString read Get_LinkedIn write Set_LinkedIn;
    // Skype : property Skype 
   property Skype:WideString read Get_Skype write Set_Skype;
  end;


// IBIContact2 : IBIContact2 Interface

 IBIContact2Disp = dispinterface
   ['{FAE14E25-D9B3-49D6-A51A-868E34BE6F50}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Nom : property Nom 
   property Nom:WideString dispid 100;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 101;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 104;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite dispid 108;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact dispid 109;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 122;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 123;
    // Skype : property Skype 
   property Skype:WideString dispid 124;
  end;


// IBPServiceContact : IBPServiceContact Interface

 IBPServiceContact = interface(IBIPersistObject)
   ['{58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}']
   function Get_FactoryServiceContact : IBPServiceContactFactory; safecall;
   function Get_S_Intitule : WideString; safecall;
   procedure Set_S_Intitule(const pVal:WideString); safecall;
   function Get_S_Abrege : WideString; safecall;
   procedure Set_S_Abrege(const pVal:WideString); safecall;
    // FactoryServiceContact : property FactoryServiceContact 
   property FactoryServiceContact:IBPServiceContactFactory read Get_FactoryServiceContact;
    // S_Intitule : property S_Intitule 
   property S_Intitule:WideString read Get_S_Intitule write Set_S_Intitule;
    // S_Abrege : property S_Abrege 
   property S_Abrege:WideString read Get_S_Abrege write Set_S_Abrege;
  end;


// IBPServiceContact : IBPServiceContact Interface

 IBPServiceContactDisp = dispinterface
   ['{58F758D4-A72D-4C48-9CBC-A82ADCF59AD3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryServiceContact : property FactoryServiceContact 
   property FactoryServiceContact:IBPServiceContactFactory  readonly dispid 100;
    // S_Intitule : property S_Intitule 
   property S_Intitule:WideString dispid 101;
    // S_Abrege : property S_Abrege 
   property S_Abrege:WideString dispid 102;
  end;


// IBPServiceContactFactory : IBPServiceContactFactory Interface

 IBPServiceContactFactory = interface(IBITypeObjectFactory)
   ['{C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPServiceContact;safecall;
  end;


// IBPServiceContactFactory : IBPServiceContactFactory Interface

 IBPServiceContactFactoryDisp = dispinterface
   ['{C38740BB-7FBD-4EF4-817F-C0DD006A3A6A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPServiceContact;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPContact : IBPContact Interface

 IBPContact = interface(IBIPersistObject)
   ['{B97C4265-FF1E-41C4-9799-2E8B8ECE855F}']
   function Get_FactoryTypeContacts : IBPContactFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
    // FactoryTypeContacts : property FactoryTypeContacts 
   property FactoryTypeContacts:IBPContactFactory read Get_FactoryTypeContacts;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
  end;


// IBPContact : IBPContact Interface

 IBPContactDisp = dispinterface
   ['{B97C4265-FF1E-41C4-9799-2E8B8ECE855F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTypeContacts : property FactoryTypeContacts 
   property FactoryTypeContacts:IBPContactFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
  end;


// IBPContactFactory : IBPContactFactory Interface

 IBPContactFactory = interface(IBITypeObjectFactory)
   ['{681E84FA-57F9-45D6-A209-D72BD027AFFD}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPContact;safecall;
  end;


// IBPContactFactory : IBPContactFactory Interface

 IBPContactFactoryDisp = dispinterface
   ['{681E84FA-57F9-45D6-A209-D72BD027AFFD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPContact;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIArticleTarifGamme3 : IBIArticleTarifGamme3 Interface

 IBIArticleTarifGamme3 = interface(IBIPersistObject)
   ['{F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}']
   function Get_Article : IBOArticle3; safecall;
   function Get_ArticleTarif : IBIArticleTarif3; safecall;
   function Get_ArticleGammeEnum1 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleGammeEnum1(const pObject:IBOArticleGammeEnum3); safecall;
   function Get_ArticleGammeEnum2 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleGammeEnum2(const pObject:IBOArticleGammeEnum3); safecall;
   function Get_Prix : Double; safecall;
   procedure Set_Prix(const pVal:Double); safecall;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3 read Get_ArticleTarif;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleGammeEnum1 write Set_ArticleGammeEnum1;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleGammeEnum2 write Set_ArticleGammeEnum2;
    // Prix : property Prix 
   property Prix:Double read Get_Prix write Set_Prix;
  end;


// IBIArticleTarifGamme3 : IBIArticleTarifGamme3 Interface

 IBIArticleTarifGamme3Disp = dispinterface
   ['{F78AAF69-F2DF-4563-B9F2-538B1F75A8BE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 dispid 102;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 dispid 103;
    // Prix : property Prix 
   property Prix:Double dispid 104;
  end;


// IBIArticleTarifQte3 : IBIArticleTarifQte3 Interface

 IBIArticleTarifQte3 = interface(IBIPersistObject)
   ['{3A83C2D4-7C03-4829-8B17-A35F3A6AA306}']
   function Get_Article : IBOArticle3; safecall;
   function Get_ArticleTarif : IBIArticleTarif3; safecall;
   function Get_BorneSup : Double; safecall;
   procedure Set_BorneSup(const pVal:Double); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
   function Get_PrixNet : Double; safecall;
   procedure Set_PrixNet(const pVal:Double); safecall;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3 read Get_ArticleTarif;
    // BorneSup : property BorneSup 
   property BorneSup:Double read Get_BorneSup write Set_BorneSup;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
    // PrixNet : property PrixNet 
   property PrixNet:Double read Get_PrixNet write Set_PrixNet;
  end;


// IBIArticleTarifQte3 : IBIArticleTarifQte3 Interface

 IBIArticleTarifQte3Disp = dispinterface
   ['{3A83C2D4-7C03-4829-8B17-A35F3A6AA306}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
    // PrixNet : property PrixNet 
   property PrixNet:Double dispid 104;
  end;


// IBIArticleTarifCond3 : IBIArticleTarifCond3 Interface

 IBIArticleTarifCond3 = interface(IBIPersistObject)
   ['{BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}']
   function Get_Article : IBOArticle3; safecall;
   function Get_ArticleTarif : IBIArticleTarif3; safecall;
   function Get_ArticleCond : IBOArticleCond3; safecall;
   procedure Set_ArticleCond(const pObject:IBOArticleCond3); safecall;
   function Get_Prix : Double; safecall;
   procedure Set_Prix(const pVal:Double); safecall;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3 read Get_ArticleTarif;
    // ArticleCond : property ArticleCond 
   property ArticleCond:IBOArticleCond3 read Get_ArticleCond write Set_ArticleCond;
    // Prix : property Prix 
   property Prix:Double read Get_Prix write Set_Prix;
  end;


// IBIArticleTarifCond3 : IBIArticleTarifCond3 Interface

 IBIArticleTarifCond3Disp = dispinterface
   ['{BC6D3A0F-C03E-46BC-968C-F6B61F8C0CF8}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleCond : property ArticleCond 
   property ArticleCond:IBOArticleCond3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
  end;


// IBIFamilleTarifQte : IBIFamilleTarifQte Interface

 IBIFamilleTarifQte = interface(IBIPersistObject)
   ['{423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}']
   function Get_Famille : IBOFamille3; safecall;
   function Get_FamilleTarif : IBIFamilleTarif; safecall;
   function Get_BorneSup : Double; safecall;
   procedure Set_BorneSup(const pVal:Double); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
    // Famille : property Famille 
   property Famille:IBOFamille3 read Get_Famille;
    // FamilleTarif : property FamilleTarif 
   property FamilleTarif:IBIFamilleTarif read Get_FamilleTarif;
    // BorneSup : property BorneSup 
   property BorneSup:Double read Get_BorneSup write Set_BorneSup;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
  end;


// IBIFamilleTarifQte : IBIFamilleTarifQte Interface

 IBIFamilleTarifQteDisp = dispinterface
   ['{423BBF33-D7A9-4E38-95F9-D11AAEA8D92B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Famille : property Famille 
   property Famille:IBOFamille3  readonly dispid 100;
    // FamilleTarif : property FamilleTarif 
   property FamilleTarif:IBIFamilleTarif  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
  end;


// IBIReglement : IBIReglement Interface

 IBIReglement = interface(IBIPersistObject)
   ['{B98A6894-49A1-4D62-AA03-4352DEE1556D}']
   function Get_Reglement : IBPReglement3; safecall;
   procedure Set_Reglement(const pReglement:IBPReglement3); safecall;
   function Get_Condition : ReglementConditionType; safecall;
   procedure Set_Condition(const pVal:ReglementConditionType); safecall;
   function Get_NbJour : Smallint; safecall;
   procedure Set_NbJour(const pVal:Smallint); safecall;
   function Get_JourTb(sElt:Smallint) : Smallint; safecall;
   procedure Set_JourTb(const sElt:Smallint; const parJourTb:Smallint); safecall;
   function Get_TRepart : ReglementRepartitionType; safecall;
   procedure Set_TRepart(const pVal:ReglementRepartitionType); safecall;
   function Get_VRepart : Double; safecall;
   procedure Set_VRepart(const pVal:Double); safecall;
    // Echeance : methode Echeance 
   function Echeance(dDate:TDateTime):TDateTime;safecall;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 read Get_Reglement write Set_Reglement;
    // Condition : property Condition 
   property Condition:ReglementConditionType read Get_Condition write Set_Condition;
    // NbJour : property NbJour 
   property NbJour:Smallint read Get_NbJour write Set_NbJour;
    // JourTb : property JourTb 
   property JourTb[sElt:Smallint]:Smallint read Get_JourTb write Set_JourTb;
    // TRepart : property TRepart 
   property TRepart:ReglementRepartitionType read Get_TRepart write Set_TRepart;
    // VRepart : property VRepart 
   property VRepart:Double read Get_VRepart write Set_VRepart;
  end;


// IBIReglement : IBIReglement Interface

 IBIReglementDisp = dispinterface
   ['{B98A6894-49A1-4D62-AA03-4352DEE1556D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Echeance : methode Echeance 
   function Echeance(dDate:TDateTime):TDateTime;dispid 106;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 100;
    // Condition : property Condition 
   property Condition:ReglementConditionType dispid 101;
    // NbJour : property NbJour 
   property NbJour:Smallint dispid 102;
    // JourTb : property JourTb 
   property JourTb[sElt:Smallint]:Smallint dispid 103;
    // TRepart : property TRepart 
   property TRepart:ReglementRepartitionType dispid 104;
    // VRepart : property VRepart 
   property VRepart:Double dispid 105;
  end;


// IBPReglement3 : IBPReglement3 Interface

 IBPReglement3 = interface(IBIPersistObject)
   ['{89BD76D6-0C06-4933-8010-9E694D32E23A}']
   function Get_FactoryReglement : IBPReglementFactory3; safecall;
   function Get_R_Intitule : WideString; safecall;
   procedure Set_R_Intitule(const pVal:WideString); safecall;
   function Get_R_Code : WideString; safecall;
   procedure Set_R_Code(const pVal:WideString); safecall;
   function Get_R_Type : ReglementType; safecall;
   procedure Set_R_Type(const pVal:ReglementType); safecall;
   function Get_JournalClient : IBOJournal3; safecall;
   procedure Set_JournalClient(const pJournal:IBOJournal3); safecall;
   function Get_JournalFournisseur : IBOJournal3; safecall;
   procedure Set_JournalFournisseur(const pJournal:IBOJournal3); safecall;
    // FactoryReglement : property FactoryReglement 
   property FactoryReglement:IBPReglementFactory3 read Get_FactoryReglement;
    // R_Intitule : property R_Intitule 
   property R_Intitule:WideString read Get_R_Intitule write Set_R_Intitule;
    // R_Code : property R_Code 
   property R_Code:WideString read Get_R_Code write Set_R_Code;
    // R_Type : property R_Type 
   property R_Type:ReglementType read Get_R_Type write Set_R_Type;
    // JournalClient : property JournalClient 
   property JournalClient:IBOJournal3 read Get_JournalClient write Set_JournalClient;
    // JournalFournisseur : property JournalFournisseur 
   property JournalFournisseur:IBOJournal3 read Get_JournalFournisseur write Set_JournalFournisseur;
  end;


// IBPReglement3 : IBPReglement3 Interface

 IBPReglement3Disp = dispinterface
   ['{89BD76D6-0C06-4933-8010-9E694D32E23A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryReglement : property FactoryReglement 
   property FactoryReglement:IBPReglementFactory3  readonly dispid 100;
    // R_Intitule : property R_Intitule 
   property R_Intitule:WideString dispid 101;
    // R_Code : property R_Code 
   property R_Code:WideString dispid 102;
    // R_Type : property R_Type 
   property R_Type:ReglementType dispid 103;
    // JournalClient : property JournalClient 
   property JournalClient:IBOJournal3 dispid 104;
    // JournalFournisseur : property JournalFournisseur 
   property JournalFournisseur:IBOJournal3 dispid 105;
  end;


// IBPReglementFactory3 : IBPReglementFactory2 Interface

 IBPReglementFactory3 = interface(IBITypeObjectFactory)
   ['{56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPReglement3;safecall;
  end;


// IBPReglementFactory3 : IBPReglementFactory2 Interface

 IBPReglementFactory3Disp = dispinterface
   ['{56E45C6A-A97E-48CA-8EE7-2B6D75D380DC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPReglement3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIParamDoc : IBIParamDoc Interface

 IBIParamDoc = interface(IBIPersistObject)
   ['{E145D57A-3141-4B3D-82BA-698E74C345CF}']
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Domaine : DomaineType; safecall;
   function Get_DO_Type : DocumentType; safecall;
   function Get_DO_Provenance : DocumentProvenanceType; safecall;
   function Get_Validation(sElt:Smallint) : WordBool; safecall;
   procedure Set_Validation(const sElt:Smallint; const parValidation:WordBool); safecall;
   function Get_DefaultSouche : IBISouche; safecall;
   procedure Set_DefaultSouche(const pObject:IBISouche); safecall;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(pSouche:IBISouche):WideString;safecall;
   function Get_ValidationStr(sElt:Smallint) : WideString; safecall;
   procedure Set_ValidationStr(const sElt:Smallint; const parValidationStr:WideString); safecall;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Domaine : property Domaine 
   property Domaine:DomaineType read Get_Domaine;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType read Get_DO_Type;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType read Get_DO_Provenance;
    // Validation : property Validation 
   property Validation[sElt:Smallint]:WordBool read Get_Validation write Set_Validation;
    // DefaultSouche : Souche par default 
   property DefaultSouche:IBISouche read Get_DefaultSouche write Set_DefaultSouche;
    // ValidationStr : property ValidationStr 
   property ValidationStr[sElt:Smallint]:WideString read Get_ValidationStr write Set_ValidationStr;
  end;


// IBIParamDoc : IBIParamDoc Interface

 IBIParamDocDisp = dispinterface
   ['{E145D57A-3141-4B3D-82BA-698E74C345CF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(pSouche:IBISouche):WideString;dispid 106;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 102;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType  readonly dispid 103;
    // Validation : property Validation 
   property Validation[sElt:Smallint]:WordBool dispid 104;
    // DefaultSouche : Souche par default 
   property DefaultSouche:IBISouche dispid 105;
    // ValidationStr : property ValidationStr 
   property ValidationStr[sElt:Smallint]:WideString dispid 107;
  end;


// IDossierExercice : IDossierExercice Interface

 IDossierExercice = interface(IDispatch)
   ['{13101937-F270-4381-8267-FF945752F147}']
   function Get_ReportANouveaux : IDossierExerciceReportANouveaux; safecall;
   function Get_ReportANouveauxIFRS : IDossierExerciceReportANouveauxIFRS; safecall;
    // ReportANouveaux : property ReportANouveaux 
   property ReportANouveaux:IDossierExerciceReportANouveaux read Get_ReportANouveaux;
    // ReportANouveauxIFRS : property ReportANouveauxIFRS 
   property ReportANouveauxIFRS:IDossierExerciceReportANouveauxIFRS read Get_ReportANouveauxIFRS;
  end;


// IDossierExercice : IDossierExercice Interface

 IDossierExerciceDisp = dispinterface
   ['{13101937-F270-4381-8267-FF945752F147}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // ReportANouveaux : property ReportANouveaux 
   property ReportANouveaux:IDossierExerciceReportANouveaux  readonly dispid 10;
    // ReportANouveauxIFRS : property ReportANouveauxIFRS 
   property ReportANouveauxIFRS:IDossierExerciceReportANouveauxIFRS  readonly dispid 11;
  end;


// IDossierExerciceReportANouveaux : IDossierExerciceReportANouveaux Interface

 IDossierExerciceReportANouveaux = interface(IDispatch)
   ['{0720550E-B038-4F30-94FE-2C36B38F1015}']
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pJournal:IBOJournal3); safecall;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
  end;


// IDossierExerciceReportANouveaux : IDossierExerciceReportANouveaux Interface

 IDossierExerciceReportANouveauxDisp = dispinterface
   ['{0720550E-B038-4F30-94FE-2C36B38F1015}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 10;
  end;


// IDossierExerciceReportANouveauxIFRS : IDossierExerciceReportANouveauxIFRS Interface

 IDossierExerciceReportANouveauxIFRS = interface(IDispatch)
   ['{F5B9C88D-6B51-4965-B923-ECC2BA1B9445}']
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pJournal:IBOJournal3); safecall;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
  end;


// IDossierExerciceReportANouveauxIFRS : IDossierExerciceReportANouveauxIFRS Interface

 IDossierExerciceReportANouveauxIFRSDisp = dispinterface
   ['{F5B9C88D-6B51-4965-B923-ECC2BA1B9445}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 10;
  end;


// IDossierTiers : IDossierTiers Interface

 IDossierTiers = interface(IDispatch)
   ['{0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}']
   function Get_EcheanceMax : Smallint; safecall;
   procedure Set_EcheanceMax(const pVal:Smallint); safecall;
    // EcheanceMax : property EcheanceMax 
   property EcheanceMax:Smallint read Get_EcheanceMax write Set_EcheanceMax;
  end;


// IDossierTiers : IDossierTiers Interface

 IDossierTiersDisp = dispinterface
   ['{0D1D5B2E-39DD-4F18-B6F9-8441CEC6FC71}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // EcheanceMax : property EcheanceMax 
   property EcheanceMax:Smallint dispid 10;
  end;


// IBOClientLivraisonAllFactory : IBOClientLivraisonAllFactory Interface

 IBOClientLivraisonAllFactory = interface(IBITypeObjectFactory)
   ['{E2089F5D-CF35-430C-B7AB-EEE33F63FC20}']
    // QueryClient : methode QueryClient 
   function QueryClient(pClient:IBOClient3):IBICollection;safecall;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
  end;


// IBOClientLivraisonAllFactory : IBOClientLivraisonAllFactory Interface

 IBOClientLivraisonAllFactoryDisp = dispinterface
   ['{E2089F5D-CF35-430C-B7AB-EEE33F63FC20}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryClient : methode QueryClient 
   function QueryClient(pClient:IBOClient3):IBICollection;dispid 10;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IRegistreRevision : IRegistreRevision Interface

 IRegistreRevision = interface(IDispatch)
   ['{9F944E43-9415-408E-9CE1-28BD57964581}']
   function Get_DateDebut : TDateTime; safecall;
   procedure Set_DateDebut(const pVal:TDateTime); safecall;
   function Get_DateFin : TDateTime; safecall;
   procedure Set_DateFin(const pVal:TDateTime); safecall;
   function Get_Reviseur : WideString; safecall;
   procedure Set_Reviseur(const pVal:WideString); safecall;
   function Get_Commentaire : WideString; safecall;
   procedure Set_Commentaire(const pVal:WideString); safecall;
   function Get_Controleur : WideString; safecall;
   procedure Set_Controleur(const pVal:WideString); safecall;
   function Get_DateRevision : TDateTime; safecall;
   procedure Set_DateRevision(const pVal:TDateTime); safecall;
   function Get_DateControle : TDateTime; safecall;
   procedure Set_DateControle(const pVal:TDateTime); safecall;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime read Get_DateDebut write Set_DateDebut;
    // DateFin : property DateFin 
   property DateFin:TDateTime read Get_DateFin write Set_DateFin;
    // Reviseur : property Reviseur 
   property Reviseur:WideString read Get_Reviseur write Set_Reviseur;
    // Commentaire : property Commentaire 
   property Commentaire:WideString read Get_Commentaire write Set_Commentaire;
    // Controleur : property Controleur 
   property Controleur:WideString read Get_Controleur write Set_Controleur;
    // DateRevision : property DateRevision 
   property DateRevision:TDateTime read Get_DateRevision write Set_DateRevision;
    // DateControle : property DateControle 
   property DateControle:TDateTime read Get_DateControle write Set_DateControle;
  end;


// IRegistreRevision : IRegistreRevision Interface

 IRegistreRevisionDisp = dispinterface
   ['{9F944E43-9415-408E-9CE1-28BD57964581}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime dispid 1;
    // DateFin : property DateFin 
   property DateFin:TDateTime dispid 2;
    // Reviseur : property Reviseur 
   property Reviseur:WideString dispid 3;
    // Commentaire : property Commentaire 
   property Commentaire:WideString dispid 4;
    // Controleur : property Controleur 
   property Controleur:WideString dispid 5;
    // DateRevision : property DateRevision 
   property DateRevision:TDateTime dispid 6;
    // DateControle : property DateControle 
   property DateControle:TDateTime dispid 7;
  end;


// IBSCPTAApplication3 : Interface fichier comptable

 IBSCPTAApplication3 = interface(IBIPersistStream)
   ['{B1746B73-A714-4275-8E61-BC4AB1B77BE0}']
   function Get_Licence : ILicence; safecall;
   function Get_Loggable : IBILoggable; safecall;
   function Get_Name : WideString; safecall;
   procedure Set_Name(const pName:WideString); safecall;
   function Get_FactoryTiers : IBOTiersFactory3; safecall;
   function Get_FactoryClient : IBOClientFactory3; safecall;
   function Get_FactoryFournisseur : IBOFournisseurFactory3; safecall;
   function Get_FactoryTiersAutre : IBOTiersAutreFactory2; safecall;
   function Get_FactoryTiersSalarie : IBOTiersSalarieFactory2; safecall;
   function Get_FactoryCompteG : IBOCompteGFactory3; safecall;
   function Get_FactoryCodeRisque : IBPCodeRisqueFactory; safecall;
   function Get_FactoryDevise : IBPDeviseFactory2; safecall;
   function Get_FactoryServiceContact : IBPServiceContactFactory; safecall;
   function Get_FactoryCompteA : IBOCompteAFactory3; safecall;
   function Get_FactoryReglement : IBPReglementFactory3; safecall;
   function Get_FactoryAnalyse : IBPAnalyseFactory; safecall;
   function Get_FactoryAnalytique : IBPAnalytiqueFactory3; safecall;
   function Get_FactoryEcriture : IBOEcritureFactory3; safecall;
   function Get_FactoryJournal : IBOJournalFactory3; safecall;
   function Get_FactoryTaxe : IBOTaxeFactory3; safecall;
   function Get_FactoryDossierContact : IBODossierContactFactory2; safecall;
   function Get_FactoryDossier : IBITypeObjectFactory; safecall;
   function Get_FactoryModeleEcriture : IBOModeleEcritureFactory2; safecall;
   function Get_FactoryRappel : IBPRappelFactory; safecall;
   function Get_FactoryTiersStat : IBPTiersStatFactory; safecall;
   function Get_FactoryModeleGrille : IBOModeleGrilleFactory; safecall;
   function Get_FactoryModeleReglement : IBOModeleReglementFactory; safecall;
   function Get_FactoryTiersType : IBPTiersFactory; safecall;
    // CreateProcess_Encoder : methode CreateProcess_Encoder 
   function CreateProcess_Encoder:IPMEncoder;safecall;
   function Get_FactoryCollaborateur : IBOCollaborateurFactory; safecall;
   function Get_FactoryTypeContacts : IBPContactFactory; safecall;
   function Get_FactoryBanque : IBOBanqueFactory; safecall;
   function Get_FactoryNatureCompte : IBPNatureCompteFactory; safecall;
   function Get_FactoryStructBanque : IBPStructBanqueFactory; safecall;
    // CreateProcess_Lettrer : methode CreateProcess_Lettrer 
   function CreateProcess_Lettrer:IPMLettrer;safecall;
   function Get_FactoryPays : IBOPaysFactory; safecall;
   function Get_FactoryCompteR : IBOCompteRFactory; safecall;
   function Get_FactoryEcritureA : IBOEcritureAAllFactory; safecall;
   function Get_FactoryJournalA : IBOJournalAFactory; safecall;
   function Get_FactoryEcritureOD : IBOEcritureODFactory; safecall;
   function Get_FactoryClientLivraison : IBOClientLivraisonAllFactory; safecall;
   function Get_FactoryTiersContact : IBITypeObjectFactory; safecall;
   function Get_FactoryLibelleCpta : IBITypeObjectFactory; safecall;
   function Get_Companies : ICompanies; safecall;
   function Get_CompanyServer : WideString; safecall;
   procedure Set_CompanyServer(const pName:WideString); safecall;
   function Get_CompanyDatabaseName : WideString; safecall;
   procedure Set_CompanyDatabaseName(const pName:WideString); safecall;
   function Get_CompanyName : WideString; safecall;
   procedure Set_CompanyName(const pName:WideString); safecall;
    // Licence : property Licence 
   property Licence:ILicence read Get_Licence;
    // Loggable : property Loggable 
   property Loggable:IBILoggable read Get_Loggable;
    // Name : Nom du fichier comptable 
   property Name:WideString read Get_Name write Set_Name;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3 read Get_FactoryTiers;
    // FactoryClient : property FactoryClient 
   property FactoryClient:IBOClientFactory3 read Get_FactoryClient;
    // FactoryFournisseur : property FactoryFournisseur 
   property FactoryFournisseur:IBOFournisseurFactory3 read Get_FactoryFournisseur;
    // FactoryTiersAutre : property FactoryTiersAutre 
   property FactoryTiersAutre:IBOTiersAutreFactory2 read Get_FactoryTiersAutre;
    // FactoryTiersSalarie : property FactoryTiersSalarie 
   property FactoryTiersSalarie:IBOTiersSalarieFactory2 read Get_FactoryTiersSalarie;
    // FactoryCompteG : property FactoryCompteG 
   property FactoryCompteG:IBOCompteGFactory3 read Get_FactoryCompteG;
    // FactoryCodeRisque : property FactoryCodeRisque 
   property FactoryCodeRisque:IBPCodeRisqueFactory read Get_FactoryCodeRisque;
    // FactoryDevise : property FactoryDevise 
   property FactoryDevise:IBPDeviseFactory2 read Get_FactoryDevise;
    // FactoryServiceContact : property FactoryServiceContact 
   property FactoryServiceContact:IBPServiceContactFactory read Get_FactoryServiceContact;
    // FactoryCompteA : property FactoryCompteA 
   property FactoryCompteA:IBOCompteAFactory3 read Get_FactoryCompteA;
    // FactoryReglement : property FactoryReglement 
   property FactoryReglement:IBPReglementFactory3 read Get_FactoryReglement;
    // FactoryAnalyse : property FactoryAnalyse 
   property FactoryAnalyse:IBPAnalyseFactory read Get_FactoryAnalyse;
    // FactoryAnalytique : property FactoryAnalytique 
   property FactoryAnalytique:IBPAnalytiqueFactory3 read Get_FactoryAnalytique;
    // FactoryEcriture : property FactoryEcriture 
   property FactoryEcriture:IBOEcritureFactory3 read Get_FactoryEcriture;
    // FactoryJournal : property FactoryJournal 
   property FactoryJournal:IBOJournalFactory3 read Get_FactoryJournal;
    // FactoryTaxe : property FactoryTaxe 
   property FactoryTaxe:IBOTaxeFactory3 read Get_FactoryTaxe;
    // FactoryDossierContact : property FactoryDossierContact 
   property FactoryDossierContact:IBODossierContactFactory2 read Get_FactoryDossierContact;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory read Get_FactoryDossier;
    // FactoryModeleEcriture : property FactoryModeleEcriture 
   property FactoryModeleEcriture:IBOModeleEcritureFactory2 read Get_FactoryModeleEcriture;
    // FactoryRappel : property FactoryRappel 
   property FactoryRappel:IBPRappelFactory read Get_FactoryRappel;
    // FactoryTiersStat : property FactoryTiersStat 
   property FactoryTiersStat:IBPTiersStatFactory read Get_FactoryTiersStat;
    // FactoryModeleGrille : property FactoryModeleGrille 
   property FactoryModeleGrille:IBOModeleGrilleFactory read Get_FactoryModeleGrille;
    // FactoryModeleReglement : property FactoryModeleReglement 
   property FactoryModeleReglement:IBOModeleReglementFactory read Get_FactoryModeleReglement;
    // FactoryTiersType : property FactoryTiersType 
   property FactoryTiersType:IBPTiersFactory read Get_FactoryTiersType;
    // FactoryCollaborateur : property FactoryCollaborateur 
   property FactoryCollaborateur:IBOCollaborateurFactory read Get_FactoryCollaborateur;
    // FactoryTypeContacts : property FactoryTypeContacts 
   property FactoryTypeContacts:IBPContactFactory read Get_FactoryTypeContacts;
    // FactoryBanque : property FactoryBanque 
   property FactoryBanque:IBOBanqueFactory read Get_FactoryBanque;
    // FactoryNatureCompte : property FactoryNatureCompte 
   property FactoryNatureCompte:IBPNatureCompteFactory read Get_FactoryNatureCompte;
    // FactoryStructBanque : property FactoryStructBanque 
   property FactoryStructBanque:IBPStructBanqueFactory read Get_FactoryStructBanque;
    // FactoryPays : property FactoryPays 
   property FactoryPays:IBOPaysFactory read Get_FactoryPays;
    // FactoryCompteR : property FactoryCompteR 
   property FactoryCompteR:IBOCompteRFactory read Get_FactoryCompteR;
    // FactoryEcritureA : property FactoryEcritureA 
   property FactoryEcritureA:IBOEcritureAAllFactory read Get_FactoryEcritureA;
    // FactoryJournalA : property FactoryJournalA 
   property FactoryJournalA:IBOJournalAFactory read Get_FactoryJournalA;
    // FactoryEcritureOD : property FactoryEcritureOD 
   property FactoryEcritureOD:IBOEcritureODFactory read Get_FactoryEcritureOD;
    // FactoryClientLivraison : property FactoryClientLivraison 
   property FactoryClientLivraison:IBOClientLivraisonAllFactory read Get_FactoryClientLivraison;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory read Get_FactoryTiersContact;
    // FactoryLibelleCpta : property FactoryLibelleCpta 
   property FactoryLibelleCpta:IBITypeObjectFactory read Get_FactoryLibelleCpta;
    // Companies : property Companies 
   property Companies:ICompanies read Get_Companies;
    // CompanyServer : property CompanyServer 
   property CompanyServer:WideString read Get_CompanyServer write Set_CompanyServer;
    // CompanyDatabaseName : property CompanyDatabaseName 
   property CompanyDatabaseName:WideString read Get_CompanyDatabaseName write Set_CompanyDatabaseName;
    // CompanyName : property CompanyName 
   property CompanyName:WideString read Get_CompanyName write Set_CompanyName;
  end;


// IBSCPTAApplication3 : Interface fichier comptable

 IBSCPTAApplication3Disp = dispinterface
   ['{B1746B73-A714-4275-8E61-BC4AB1B77BE0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Open : methode Open 
   procedure Open;dispid 2;
    // Close : methode Close 
   procedure Close;dispid 3;
    // Create : methode Create 
   procedure Create;dispid 4;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 7;
    // CreateProcess_Encoder : methode CreateProcess_Encoder 
   function CreateProcess_Encoder:IPMEncoder;dispid 100;
    // CreateProcess_Lettrer : methode CreateProcess_Lettrer 
   function CreateProcess_Lettrer:IPMLettrer;dispid 43;
    // IsOpen : property IsOpen 
   property IsOpen:WordBool  readonly dispid 1;
    // DatabaseInfo : property DatabaseInfo 
   property DatabaseInfo:IDatabaseInfo  readonly dispid 5;
    // Synchro : property Synchro 
   property Synchro:ISynchroStream  readonly dispid 6;
    // Licence : property Licence 
   property Licence:ILicence  readonly dispid 27;
    // Loggable : property Loggable 
   property Loggable:IBILoggable  readonly dispid 28;
    // Name : Nom du fichier comptable 
   property Name:WideString dispid 10;
    // FactoryTiers : property FactoryTiers 
   property FactoryTiers:IBOTiersFactory3  readonly dispid 11;
    // FactoryClient : property FactoryClient 
   property FactoryClient:IBOClientFactory3  readonly dispid 12;
    // FactoryFournisseur : property FactoryFournisseur 
   property FactoryFournisseur:IBOFournisseurFactory3  readonly dispid 13;
    // FactoryTiersAutre : property FactoryTiersAutre 
   property FactoryTiersAutre:IBOTiersAutreFactory2  readonly dispid 30;
    // FactoryTiersSalarie : property FactoryTiersSalarie 
   property FactoryTiersSalarie:IBOTiersSalarieFactory2  readonly dispid 31;
    // FactoryCompteG : property FactoryCompteG 
   property FactoryCompteG:IBOCompteGFactory3  readonly dispid 14;
    // FactoryCodeRisque : property FactoryCodeRisque 
   property FactoryCodeRisque:IBPCodeRisqueFactory  readonly dispid 15;
    // FactoryDevise : property FactoryDevise 
   property FactoryDevise:IBPDeviseFactory2  readonly dispid 16;
    // FactoryServiceContact : property FactoryServiceContact 
   property FactoryServiceContact:IBPServiceContactFactory  readonly dispid 17;
    // FactoryCompteA : property FactoryCompteA 
   property FactoryCompteA:IBOCompteAFactory3  readonly dispid 18;
    // FactoryReglement : property FactoryReglement 
   property FactoryReglement:IBPReglementFactory3  readonly dispid 19;
    // FactoryAnalyse : property FactoryAnalyse 
   property FactoryAnalyse:IBPAnalyseFactory  readonly dispid 20;
    // FactoryAnalytique : property FactoryAnalytique 
   property FactoryAnalytique:IBPAnalytiqueFactory3  readonly dispid 21;
    // FactoryEcriture : property FactoryEcriture 
   property FactoryEcriture:IBOEcritureFactory3  readonly dispid 22;
    // FactoryJournal : property FactoryJournal 
   property FactoryJournal:IBOJournalFactory3  readonly dispid 23;
    // FactoryTaxe : property FactoryTaxe 
   property FactoryTaxe:IBOTaxeFactory3  readonly dispid 24;
    // FactoryDossierContact : property FactoryDossierContact 
   property FactoryDossierContact:IBODossierContactFactory2  readonly dispid 25;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory  readonly dispid 26;
    // FactoryModeleEcriture : property FactoryModeleEcriture 
   property FactoryModeleEcriture:IBOModeleEcritureFactory2  readonly dispid 32;
    // FactoryRappel : property FactoryRappel 
   property FactoryRappel:IBPRappelFactory  readonly dispid 33;
    // FactoryTiersStat : property FactoryTiersStat 
   property FactoryTiersStat:IBPTiersStatFactory  readonly dispid 34;
    // FactoryModeleGrille : property FactoryModeleGrille 
   property FactoryModeleGrille:IBOModeleGrilleFactory  readonly dispid 35;
    // FactoryModeleReglement : property FactoryModeleReglement 
   property FactoryModeleReglement:IBOModeleReglementFactory  readonly dispid 36;
    // FactoryTiersType : property FactoryTiersType 
   property FactoryTiersType:IBPTiersFactory  readonly dispid 37;
    // FactoryCollaborateur : property FactoryCollaborateur 
   property FactoryCollaborateur:IBOCollaborateurFactory  readonly dispid 38;
    // FactoryTypeContacts : property FactoryTypeContacts 
   property FactoryTypeContacts:IBPContactFactory  readonly dispid 39;
    // FactoryBanque : property FactoryBanque 
   property FactoryBanque:IBOBanqueFactory  readonly dispid 40;
    // FactoryNatureCompte : property FactoryNatureCompte 
   property FactoryNatureCompte:IBPNatureCompteFactory  readonly dispid 41;
    // FactoryStructBanque : property FactoryStructBanque 
   property FactoryStructBanque:IBPStructBanqueFactory  readonly dispid 42;
    // FactoryPays : property FactoryPays 
   property FactoryPays:IBOPaysFactory  readonly dispid 44;
    // FactoryCompteR : property FactoryCompteR 
   property FactoryCompteR:IBOCompteRFactory  readonly dispid 45;
    // FactoryEcritureA : property FactoryEcritureA 
   property FactoryEcritureA:IBOEcritureAAllFactory  readonly dispid 46;
    // FactoryJournalA : property FactoryJournalA 
   property FactoryJournalA:IBOJournalAFactory  readonly dispid 47;
    // FactoryEcritureOD : property FactoryEcritureOD 
   property FactoryEcritureOD:IBOEcritureODFactory  readonly dispid 48;
    // FactoryClientLivraison : property FactoryClientLivraison 
   property FactoryClientLivraison:IBOClientLivraisonAllFactory  readonly dispid 49;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory  readonly dispid 50;
    // FactoryLibelleCpta : property FactoryLibelleCpta 
   property FactoryLibelleCpta:IBITypeObjectFactory  readonly dispid 51;
    // Companies : property Companies 
   property Companies:ICompanies  readonly dispid 52;
    // CompanyServer : property CompanyServer 
   property CompanyServer:WideString dispid 150;
    // CompanyDatabaseName : property CompanyDatabaseName 
   property CompanyDatabaseName:WideString dispid 151;
    // CompanyName : property CompanyName 
   property CompanyName:WideString dispid 152;
  end;


// ILicence : ILicence Interface

 ILicence = interface(IDispatch)
   ['{A3174C49-1613-4E29-8829-E9D73DD3085A}']
   function Get_IsValid : WordBool; safecall;
   procedure Set_Key(const Param1:WideString); safecall;
   function Get_Product : ILicenceProduct; safecall;
   function Get_Products : ILicenceProducts; safecall;
   procedure Set_Creator(const Param1:WideString); safecall;
   procedure Set_CreatorExtension(const Param1:WideString); safecall;
   procedure Set_WorkStationKey(const Param1:WideString); safecall;
   function Get_LicenceCount : Integer; safecall;
   procedure Set_LicenceCount(const pVal:Integer); safecall;
    // IsValid : property IsValid 
   property IsValid:WordBool read Get_IsValid;
    // Key : property Key 
   property Key:WideString write Set_Key;
    // Product : property Product 
   property Product:ILicenceProduct read Get_Product;
    // Products : property Products 
   property Products:ILicenceProducts read Get_Products;
    // Creator : property Creator : Usage interne 
   property Creator:WideString write Set_Creator;
    // CreatorExtension : property CreatorExtension : Usage interne 
   property CreatorExtension:WideString write Set_CreatorExtension;
    // WorkStationKey : property WorkStationKey : Usage interne 
   property WorkStationKey:WideString write Set_WorkStationKey;
    // LicenceCount : property LicenceCount : Usage interne 
   property LicenceCount:Integer read Get_LicenceCount write Set_LicenceCount;
  end;


// ILicence : ILicence Interface

 ILicenceDisp = dispinterface
   ['{A3174C49-1613-4E29-8829-E9D73DD3085A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // IsValid : property IsValid 
   property IsValid:WordBool  readonly dispid 1;
    // Key : property Key 
   property Key:WideString writeonly dispid 2;
    // Product : property Product 
   property Product:ILicenceProduct  readonly dispid 3;
    // Products : property Products 
   property Products:ILicenceProducts  readonly dispid 4;
    // Creator : property Creator : Usage interne 
   property Creator:WideString writeonly dispid 5;
    // CreatorExtension : property CreatorExtension : Usage interne 
   property CreatorExtension:WideString writeonly dispid 6;
    // WorkStationKey : property WorkStationKey : Usage interne 
   property WorkStationKey:WideString writeonly dispid 7;
    // LicenceCount : property LicenceCount : Usage interne 
   property LicenceCount:Integer dispid 8;
  end;


// ILicenceProduct : ILicenceProduct Interface

 ILicenceProduct = interface(IDispatch)
   ['{70453D27-A5E7-41FB-8673-F41ECE54DAE6}']
   function Get_SerialNumber : WideString; safecall;
   function Get_Name : WideString; safecall;
   function Get_UserInfo : ILicenceUserInfo; safecall;
    // SerialNumber : property SerialNumber 
   property SerialNumber:WideString read Get_SerialNumber;
    // Name : property Name 
   property Name:WideString read Get_Name;
    // UserInfo : property UserInfo 
   property UserInfo:ILicenceUserInfo read Get_UserInfo;
  end;


// ILicenceProduct : ILicenceProduct Interface

 ILicenceProductDisp = dispinterface
   ['{70453D27-A5E7-41FB-8673-F41ECE54DAE6}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // SerialNumber : property SerialNumber 
   property SerialNumber:WideString  readonly dispid 1;
    // Name : property Name 
   property Name:WideString  readonly dispid 2;
    // UserInfo : property UserInfo 
   property UserInfo:ILicenceUserInfo  readonly dispid 3;
  end;


// ILicenceUserInfo : ILicenceUserInfo Interface

 ILicenceUserInfo = interface(IDispatch)
   ['{DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}']
   function Get_RaisonSociale1 : WideString; safecall;
   function Get_RaisonSociale2 : WideString; safecall;
   function Get_Adresse1 : WideString; safecall;
   function Get_Adresse2 : WideString; safecall;
   function Get_CodePostal : WideString; safecall;
   function Get_Pays : WideString; safecall;
   function Get_Siret : WideString; safecall;
   function Get_NAF : WideString; safecall;
   function Get_Ville : WideString; safecall;
   function Get_Telephone : WideString; safecall;
   function Get_Telecopie : WideString; safecall;
    // RaisonSociale1 : property RaisonSociale1 
   property RaisonSociale1:WideString read Get_RaisonSociale1;
    // RaisonSociale2 : property RaisonSociale2 
   property RaisonSociale2:WideString read Get_RaisonSociale2;
    // Adresse1 : property Adresse1 
   property Adresse1:WideString read Get_Adresse1;
    // Adresse2 : property Adresse2 
   property Adresse2:WideString read Get_Adresse2;
    // CodePostal : property CodePostal 
   property CodePostal:WideString read Get_CodePostal;
    // Pays : property Pays 
   property Pays:WideString read Get_Pays;
    // Siret : property Siret 
   property Siret:WideString read Get_Siret;
    // NAF : property NAF 
   property NAF:WideString read Get_NAF;
    // Ville : property Ville 
   property Ville:WideString read Get_Ville;
    // Telephone : property Telephone 
   property Telephone:WideString read Get_Telephone;
    // Telecopie : property Telecopie 
   property Telecopie:WideString read Get_Telecopie;
  end;


// ILicenceUserInfo : ILicenceUserInfo Interface

 ILicenceUserInfoDisp = dispinterface
   ['{DBEC83FF-AD37-40EC-BC80-DFB9A1A6C96B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // RaisonSociale1 : property RaisonSociale1 
   property RaisonSociale1:WideString  readonly dispid 1;
    // RaisonSociale2 : property RaisonSociale2 
   property RaisonSociale2:WideString  readonly dispid 2;
    // Adresse1 : property Adresse1 
   property Adresse1:WideString  readonly dispid 3;
    // Adresse2 : property Adresse2 
   property Adresse2:WideString  readonly dispid 4;
    // CodePostal : property CodePostal 
   property CodePostal:WideString  readonly dispid 5;
    // Pays : property Pays 
   property Pays:WideString  readonly dispid 6;
    // Siret : property Siret 
   property Siret:WideString  readonly dispid 7;
    // NAF : property NAF 
   property NAF:WideString  readonly dispid 8;
    // Ville : property Ville 
   property Ville:WideString  readonly dispid 9;
    // Telephone : property Telephone 
   property Telephone:WideString  readonly dispid 10;
    // Telecopie : property Telecopie 
   property Telecopie:WideString  readonly dispid 11;
  end;


// ILicenceProducts : ILicenceProducts Interface

 ILicenceProducts = interface(IDispatch)
   ['{F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(lIndex:Integer) : ILicenceProduct; safecall;
   function Get_Count : Integer; safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[lIndex:Integer]:ILicenceProduct read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// ILicenceProducts : ILicenceProducts Interface

 ILicenceProductsDisp = dispinterface
   ['{F17E2AE1-5F9F-4CE1-AE6D-A84885C5F848}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[lIndex:Integer]:ILicenceProduct  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// IBILoggable : IBILoggable Interface

 IBILoggable = interface(IDispatch)
   ['{08B40F4E-D3D6-4546-AF3E-F386929F1F39}']
   function Get_UserName : WideString; safecall;
   procedure Set_UserName(const pVal:WideString); safecall;
   procedure Set_UserPwd(const Param1:WideString); safecall;
   function Get_IsAdministrator : WordBool; safecall;
   function Get_IsLogged : WordBool; safecall;
   procedure Set_ManagementPassword(const Param1:WideString); safecall;
   procedure Set_ServiceId(const Param1:WideString); safecall;
   procedure Set_ServiceName(const Param1:WideString); safecall;
   procedure Set_ApplicationToken(const Param1:WideString); safecall;
    // UserName : property UserName 
   property UserName:WideString read Get_UserName write Set_UserName;
    // UserPwd : property UserPwd 
   property UserPwd:WideString write Set_UserPwd;
    // IsAdministrator : property IsAdministrator 
   property IsAdministrator:WordBool read Get_IsAdministrator;
    // IsLogged : property IsLogged 
   property IsLogged:WordBool read Get_IsLogged;
    // ManagementPassword : property ManagementPassword 
   property ManagementPassword:WideString write Set_ManagementPassword;
    // ServiceId : property ServiceId 
   property ServiceId:WideString write Set_ServiceId;
    // ServiceName : property ServiceName 
   property ServiceName:WideString write Set_ServiceName;
    // ApplicationToken : property ApplicationToken 
   property ApplicationToken:WideString write Set_ApplicationToken;
  end;


// IBILoggable : IBILoggable Interface

 IBILoggableDisp = dispinterface
   ['{08B40F4E-D3D6-4546-AF3E-F386929F1F39}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // UserName : property UserName 
   property UserName:WideString dispid 1;
    // UserPwd : property UserPwd 
   property UserPwd:WideString writeonly dispid 2;
    // IsAdministrator : property IsAdministrator 
   property IsAdministrator:WordBool  readonly dispid 3;
    // IsLogged : property IsLogged 
   property IsLogged:WordBool  readonly dispid 4;
    // ManagementPassword : property ManagementPassword 
   property ManagementPassword:WideString writeonly dispid 5;
    // ServiceId : property ServiceId 
   property ServiceId:WideString writeonly dispid 6;
    // ServiceName : property ServiceName 
   property ServiceName:WideString writeonly dispid 7;
    // ApplicationToken : property ApplicationToken 
   property ApplicationToken:WideString writeonly dispid 8;
  end;


// IBOTiersAutreFactory2 : IBOTiersAutreFactory2 Interface

 IBOTiersAutreFactory2 = interface(IBITypeObjectFactory)
   ['{51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}']
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOTiers3;safecall;
  end;


// IBOTiersAutreFactory2 : IBOTiersAutreFactory2 Interface

 IBOTiersAutreFactory2Disp = dispinterface
   ['{51DACD11-D4DB-406F-8EDC-EE01A4DC20D2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 11;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOTiers3;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOTiersSalarieFactory2 : IBOTiersSalarieFactory2 Interface

 IBOTiersSalarieFactory2 = interface(IBITypeObjectFactory)
   ['{E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}']
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOTiers3;safecall;
  end;


// IBOTiersSalarieFactory2 : IBOTiersSalarieFactory2 Interface

 IBOTiersSalarieFactory2Disp = dispinterface
   ['{E7DA8EAD-5ABE-416B-A688-3702DF85B8C3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 11;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOTiers3;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOEcritureFactory3 : IBOEcritureFactory3 Interface

 IBOEcritureFactory3 = interface(IBITypeObjectFactory)
   ['{80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}']
    // QueryJournalPeriode : methode QueryJournalPeriode 
   function QueryJournalPeriode(Journal:IBOJournal3;DatePeriode:TDateTime):IBICollection;safecall;
    // QueryTiers : methode QueryTiers 
   function QueryTiers(Tiers:IBOTiers3;CompteG:IBOCompteG3;Journal:IBOJournal3;DateDebut:TDateTime;DateFin:TDateTime):IBICollection;safecall;
   function Get_InfoLibreFields : IBIFields; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(EC_No:Integer):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(EC_No:Integer):IBOEcriture3;safecall;
    // QueryCompteG : methode QueryCompteG 
   function QueryCompteG(CompteG:IBOCompteG3;DateDebut:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBOEcritureFactory3 : IBOEcritureFactory3 Interface

 IBOEcritureFactory3Disp = dispinterface
   ['{80BB0BCE-D3A5-465E-A88B-3D4B97CCC836}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryJournalPeriode : methode QueryJournalPeriode 
   function QueryJournalPeriode(Journal:IBOJournal3;DatePeriode:TDateTime):IBICollection;dispid 10;
    // QueryTiers : methode QueryTiers 
   function QueryTiers(Tiers:IBOTiers3;CompteG:IBOCompteG3;Journal:IBOJournal3;DateDebut:TDateTime;DateFin:TDateTime):IBICollection;dispid 11;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(EC_No:Integer):WordBool;dispid 13;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(EC_No:Integer):IBOEcriture3;dispid 14;
    // QueryCompteG : methode QueryCompteG 
   function QueryCompteG(CompteG:IBOCompteG3;DateDebut:TDateTime;DateFin:TDateTime):IBICollection;dispid 15;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 16;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 12;
  end;


// IBOEcriture3 : IBOEcriture3 Interface

 IBOEcriture3 = interface(IBIPersistObject)
   ['{B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}']
   function Get_FactoryEcriture : IBOEcritureFactory3; safecall;
   function Get_FactoryEcritureA : IBOEcritureAFactory2; safecall;
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pJournal:IBOJournal3); safecall;
   function Get_Date : TDateTime; safecall;
   procedure Set_Date(const pVal:TDateTime); safecall;
   function Get_DateSaisie : TDateTime; safecall;
   procedure Set_DateSaisie(const pVal:TDateTime); safecall;
   function Get_EC_Piece : WideString; safecall;
   procedure Set_EC_Piece(const pVal:WideString); safecall;
   function Get_EC_RefPiece : WideString; safecall;
   procedure Set_EC_RefPiece(const pVal:WideString); safecall;
   function Get_EC_TresoPiece : WideString; safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pCompteG:IBOCompteG3); safecall;
   function Get_CompteGContrepartie : IBOCompteG3; safecall;
   procedure Set_CompteGContrepartie(const pCompteG:IBOCompteG3); safecall;
   function Get_Tiers : IBOTiers3; safecall;
   procedure Set_Tiers(const pTiers:IBOTiers3); safecall;
   function Get_EC_Intitule : WideString; safecall;
   procedure Set_EC_Intitule(const pVal:WideString); safecall;
   function Get_Reglement : IBPReglement3; safecall;
   procedure Set_Reglement(const pReglement:IBPReglement3); safecall;
   function Get_EC_Echeance : TDateTime; safecall;
   procedure Set_EC_Echeance(const pVal:TDateTime); safecall;
   function Get_EC_Parite : Double; safecall;
   procedure Set_EC_Parite(const pVal:Double); safecall;
   function Get_EC_Quantite : Double; safecall;
   procedure Set_EC_Quantite(const pVal:Double); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_EC_Sens : EcritureSensType; safecall;
   procedure Set_EC_Sens(const pVal:EcritureSensType); safecall;
   function Get_EC_Montant : Double; safecall;
   procedure Set_EC_Montant(const pVal:Double); safecall;
   function Get_HasLettrage : WordBool; safecall;
   function Get_EC_Lettrage : WideString; safecall;
   function Get_HasPointage : WordBool; safecall;
   function Get_EC_Pointage : WideString; safecall;
   function Get_EC_Impression : EcritureImpressionType; safecall;
   function Get_EC_Cloture : WordBool; safecall;
   function Get_EC_Type : EcritureType; safecall;
   function Get_EC_Rappel : Smallint; safecall;
   function Get_TiersContrepartie : IBOTiers3; safecall;
   procedure Set_TiersContrepartie(const pTiers:IBOTiers3); safecall;
   function Get_HasLettrageQ : WordBool; safecall;
   function Get_EC_LettrageQ : WideString; safecall;
   function Get_EC_ANType : EcritureANType; safecall;
   function Get_EC_RType : WordBool; safecall;
   function Get_EC_Devise : Double; safecall;
   procedure Set_EC_Devise(const pVal:Double); safecall;
   function Get_EC_Remise : WordBool; safecall;
   function Get_EC_ExportExpert : EcritureExpertType; safecall;
   function Get_Taxe : IBOTaxe3; safecall;
   procedure Set_Taxe(const pTaxe:IBOTaxe3); safecall;
   function Get_InfoLibre : IBIValues; safecall;
   function Get_EC_No : Integer; safecall;
   function Get_EC_Norme : EcritureNormeType; safecall;
   procedure Set_EC_Norme(const pVal:EcritureNormeType); safecall;
   function Get_TA_Provenance : TaxeProvenanceType; safecall;
   procedure Set_TA_Provenance(const pVal:TaxeProvenanceType); safecall;
   function Get_EC_Reference : WideString; safecall;
   procedure Set_EC_Reference(const pVal:WideString); safecall;
   function Get_EC_NoCloture : Integer; safecall;
   function Get_HasTA_Provenance : WordBool; safecall;
   procedure Set_HasTA_Provenance(const pVal:WordBool); safecall;
   function Get_FactoryEcritureMedia : IBITypeObjectFactory; safecall;
   function Get_EC_DateRappro : TDateTime; safecall;
   function Get_RegistreRevision : IRegistreRevision; safecall;
    // FactoryEcriture : property FactoryEcriture 
   property FactoryEcriture:IBOEcritureFactory3 read Get_FactoryEcriture;
    // FactoryEcritureA : property FactoryEcritureA 
   property FactoryEcritureA:IBOEcritureAFactory2 read Get_FactoryEcritureA;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
    // Date : property Date 
   property Date:TDateTime read Get_Date write Set_Date;
    // DateSaisie : property DateSaisie 
   property DateSaisie:TDateTime read Get_DateSaisie write Set_DateSaisie;
    // EC_Piece : property EC_Piece 
   property EC_Piece:WideString read Get_EC_Piece write Set_EC_Piece;
    // EC_RefPiece : property EC_RefPiece 
   property EC_RefPiece:WideString read Get_EC_RefPiece write Set_EC_RefPiece;
    // EC_TresoPiece : property EC_TresoPiece 
   property EC_TresoPiece:WideString read Get_EC_TresoPiece;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // CompteGContrepartie : property CompteGContrepartie 
   property CompteGContrepartie:IBOCompteG3 read Get_CompteGContrepartie write Set_CompteGContrepartie;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3 read Get_Tiers write Set_Tiers;
    // EC_Intitule : property EC_Intitule 
   property EC_Intitule:WideString read Get_EC_Intitule write Set_EC_Intitule;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 read Get_Reglement write Set_Reglement;
    // EC_Echeance : property EC_Echeance 
   property EC_Echeance:TDateTime read Get_EC_Echeance write Set_EC_Echeance;
    // EC_Parite : property EC_Parite 
   property EC_Parite:Double read Get_EC_Parite write Set_EC_Parite;
    // EC_Quantite : property EC_Quantite 
   property EC_Quantite:Double read Get_EC_Quantite write Set_EC_Quantite;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // EC_Sens : property EC_Sens 
   property EC_Sens:EcritureSensType read Get_EC_Sens write Set_EC_Sens;
    // EC_Montant : property EC_Montant 
   property EC_Montant:Double read Get_EC_Montant write Set_EC_Montant;
    // HasLettrage : property HasLettrage 
   property HasLettrage:WordBool read Get_HasLettrage;
    // EC_Lettrage : property EC_Lettrage 
   property EC_Lettrage:WideString read Get_EC_Lettrage;
    // HasPointage : property HasPointage 
   property HasPointage:WordBool read Get_HasPointage;
    // EC_Pointage : property EC_Pointage 
   property EC_Pointage:WideString read Get_EC_Pointage;
    // EC_Impression : property EC_Impression 
   property EC_Impression:EcritureImpressionType read Get_EC_Impression;
    // EC_Cloture : property EC_Cloture 
   property EC_Cloture:WordBool read Get_EC_Cloture;
    // EC_Type : property EC_Type 
   property EC_Type:EcritureType read Get_EC_Type;
    // EC_Rappel : property EC_Rappel 
   property EC_Rappel:Smallint read Get_EC_Rappel;
    // TiersContrepartie : property TiersContrepartie 
   property TiersContrepartie:IBOTiers3 read Get_TiersContrepartie write Set_TiersContrepartie;
    // HasLettrageQ : property HasLettrageQ 
   property HasLettrageQ:WordBool read Get_HasLettrageQ;
    // EC_LettrageQ : property EC_LettrageQ 
   property EC_LettrageQ:WideString read Get_EC_LettrageQ;
    // EC_ANType : property EC_ANType 
   property EC_ANType:EcritureANType read Get_EC_ANType;
    // EC_RType : property EC_RType 
   property EC_RType:WordBool read Get_EC_RType;
    // EC_Devise : property EC_Devise 
   property EC_Devise:Double read Get_EC_Devise write Set_EC_Devise;
    // EC_Remise : property EC_Remise 
   property EC_Remise:WordBool read Get_EC_Remise;
    // EC_ExportExpert : property EC_ExportExpert 
   property EC_ExportExpert:EcritureExpertType read Get_EC_ExportExpert;
    // Taxe : property Taxe 
   property Taxe:IBOTaxe3 read Get_Taxe write Set_Taxe;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues read Get_InfoLibre;
    // EC_No : property EC_No 
   property EC_No:Integer read Get_EC_No;
    // EC_Norme : property EC_Norme 
   property EC_Norme:EcritureNormeType read Get_EC_Norme write Set_EC_Norme;
    // TA_Provenance : property TA_Provenance 
   property TA_Provenance:TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    // EC_Reference : property EC_Reference 
   property EC_Reference:WideString read Get_EC_Reference write Set_EC_Reference;
    // EC_NoCloture : property EC_NoCloture 
   property EC_NoCloture:Integer read Get_EC_NoCloture;
    // HasTA_Provenance : property HasTA_Provenance 
   property HasTA_Provenance:WordBool read Get_HasTA_Provenance write Set_HasTA_Provenance;
    // FactoryEcritureMedia : property FactoryEcritureMedia 
   property FactoryEcritureMedia:IBITypeObjectFactory read Get_FactoryEcritureMedia;
    // EC_DateRappro : property EC_DateRappro 
   property EC_DateRappro:TDateTime read Get_EC_DateRappro;
    // RegistreRevision : property RegistreRevision 
   property RegistreRevision:IRegistreRevision read Get_RegistreRevision;
  end;


// IBOEcriture3 : IBOEcriture3 Interface

 IBOEcriture3Disp = dispinterface
   ['{B7CB9E3C-FD42-4F46-9893-9E27B34C8B17}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryEcriture : property FactoryEcriture 
   property FactoryEcriture:IBOEcritureFactory3  readonly dispid 100;
    // FactoryEcritureA : property FactoryEcritureA 
   property FactoryEcritureA:IBOEcritureAFactory2  readonly dispid 101;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 102;
    // Date : property Date 
   property Date:TDateTime dispid 103;
    // DateSaisie : property DateSaisie 
   property DateSaisie:TDateTime dispid 104;
    // EC_Piece : property EC_Piece 
   property EC_Piece:WideString dispid 105;
    // EC_RefPiece : property EC_RefPiece 
   property EC_RefPiece:WideString dispid 106;
    // EC_TresoPiece : property EC_TresoPiece 
   property EC_TresoPiece:WideString  readonly dispid 107;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 108;
    // CompteGContrepartie : property CompteGContrepartie 
   property CompteGContrepartie:IBOCompteG3 dispid 109;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3 dispid 110;
    // EC_Intitule : property EC_Intitule 
   property EC_Intitule:WideString dispid 111;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 112;
    // EC_Echeance : property EC_Echeance 
   property EC_Echeance:TDateTime dispid 113;
    // EC_Parite : property EC_Parite 
   property EC_Parite:Double dispid 114;
    // EC_Quantite : property EC_Quantite 
   property EC_Quantite:Double dispid 115;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 116;
    // EC_Sens : property EC_Sens 
   property EC_Sens:EcritureSensType dispid 117;
    // EC_Montant : property EC_Montant 
   property EC_Montant:Double dispid 118;
    // HasLettrage : property HasLettrage 
   property HasLettrage:WordBool  readonly dispid 119;
    // EC_Lettrage : property EC_Lettrage 
   property EC_Lettrage:WideString  readonly dispid 120;
    // HasPointage : property HasPointage 
   property HasPointage:WordBool  readonly dispid 121;
    // EC_Pointage : property EC_Pointage 
   property EC_Pointage:WideString  readonly dispid 122;
    // EC_Impression : property EC_Impression 
   property EC_Impression:EcritureImpressionType  readonly dispid 123;
    // EC_Cloture : property EC_Cloture 
   property EC_Cloture:WordBool  readonly dispid 124;
    // EC_Type : property EC_Type 
   property EC_Type:EcritureType  readonly dispid 125;
    // EC_Rappel : property EC_Rappel 
   property EC_Rappel:Smallint  readonly dispid 126;
    // TiersContrepartie : property TiersContrepartie 
   property TiersContrepartie:IBOTiers3 dispid 127;
    // HasLettrageQ : property HasLettrageQ 
   property HasLettrageQ:WordBool  readonly dispid 128;
    // EC_LettrageQ : property EC_LettrageQ 
   property EC_LettrageQ:WideString  readonly dispid 129;
    // EC_ANType : property EC_ANType 
   property EC_ANType:EcritureANType  readonly dispid 130;
    // EC_RType : property EC_RType 
   property EC_RType:WordBool  readonly dispid 131;
    // EC_Devise : property EC_Devise 
   property EC_Devise:Double dispid 132;
    // EC_Remise : property EC_Remise 
   property EC_Remise:WordBool  readonly dispid 133;
    // EC_ExportExpert : property EC_ExportExpert 
   property EC_ExportExpert:EcritureExpertType  readonly dispid 135;
    // Taxe : property Taxe 
   property Taxe:IBOTaxe3 dispid 136;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 137;
    // EC_No : property EC_No 
   property EC_No:Integer  readonly dispid 138;
    // EC_Norme : property EC_Norme 
   property EC_Norme:EcritureNormeType dispid 139;
    // TA_Provenance : property TA_Provenance 
   property TA_Provenance:TaxeProvenanceType dispid 140;
    // EC_Reference : property EC_Reference 
   property EC_Reference:WideString dispid 141;
    // EC_NoCloture : property EC_NoCloture 
   property EC_NoCloture:Integer  readonly dispid 142;
    // HasTA_Provenance : property HasTA_Provenance 
   property HasTA_Provenance:WordBool dispid 143;
    // FactoryEcritureMedia : property FactoryEcritureMedia 
   property FactoryEcritureMedia:IBITypeObjectFactory  readonly dispid 144;
    // EC_DateRappro : property EC_DateRappro 
   property EC_DateRappro:TDateTime  readonly dispid 145;
    // RegistreRevision : property RegistreRevision 
   property RegistreRevision:IRegistreRevision  readonly dispid 146;
  end;


// IBOEcritureAFactory2 : IBOEcritureAFactory2 Interface

 IBOEcritureAFactory2 = interface(IBITypeObjectFactory)
   ['{4DB1212D-1E51-4E42-A13D-3EA526FF4907}']
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;safecall;
    // QuerySectionA : methode QuerySectionA 
   function QuerySectionA(CompteA:IBOCompteA3):IBICollection;safecall;
  end;


// IBOEcritureAFactory2 : IBOEcritureAFactory2 Interface

 IBOEcritureAFactory2Disp = dispinterface
   ['{4DB1212D-1E51-4E42-A13D-3EA526FF4907}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;dispid 10;
    // QuerySectionA : methode QuerySectionA 
   function QuerySectionA(CompteA:IBOCompteA3):IBICollection;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODossierContactFactory2 : IBODossierContactFactory2 Interface

 IBODossierContactFactory2 = interface(IBITypeObjectFactory)
   ['{D1B37523-CA98-4C53-9002-14C5C02DB2F3}']
    // ExistNomPrenom : methode ExistNomPrenom 
   function ExistNomPrenom(sNom:WideString;sPrenom:WideString):WordBool;safecall;
    // ReadNomPrenom : methode ReadNomPrenom 
   function ReadNomPrenom(sNom:WideString;sPrenom:WideString):IBODossierContact3;safecall;
  end;


// IBODossierContactFactory2 : IBODossierContactFactory2 Interface

 IBODossierContactFactory2Disp = dispinterface
   ['{D1B37523-CA98-4C53-9002-14C5C02DB2F3}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNomPrenom : methode ExistNomPrenom 
   function ExistNomPrenom(sNom:WideString;sPrenom:WideString):WordBool;dispid 11;
    // ReadNomPrenom : methode ReadNomPrenom 
   function ReadNomPrenom(sNom:WideString;sPrenom:WideString):IBODossierContact3;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODossierContact3 : IBODossierContact3 Interface

 IBODossierContact3 = interface(IBIContact2)
   ['{F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}']
   function Get_FactoryDossierContact : IBODossierContactFactory2; safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
    // FactoryDossierContact : property FactoryDossierContact 
   property FactoryDossierContact:IBODossierContactFactory2 read Get_FactoryDossierContact;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
  end;


// IBODossierContact3 : IBODossierContact3 Interface

 IBODossierContact3Disp = dispinterface
   ['{F4DDFA25-7D82-47A6-A54A-EDC422FEC76D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Nom : property Nom 
   property Nom:WideString dispid 100;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 101;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 104;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite dispid 108;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact dispid 109;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 122;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 123;
    // Skype : property Skype 
   property Skype:WideString dispid 124;
    // FactoryDossierContact : property FactoryDossierContact 
   property FactoryDossierContact:IBODossierContactFactory2  readonly dispid 120;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 121;
  end;


// IBOModeleEcritureFactory2 : IBOModeleEcritureFactory2 Interface

 IBOModeleEcritureFactory2 = interface(IBITypeObjectFactory)
   ['{FCA4724C-21EE-43DD-89DA-BD424957D8A1}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBOModeleEcriture3;safecall;
  end;


// IBOModeleEcritureFactory2 : IBOModeleEcritureFactory2 Interface

 IBOModeleEcritureFactory2Disp = dispinterface
   ['{FCA4724C-21EE-43DD-89DA-BD424957D8A1}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sNum:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sNum:WideString):IBOModeleEcriture3;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOModeleEcriture3 : IBOModeleEcriture3 Interface

 IBOModeleEcriture3 = interface(IBIPersistObject)
   ['{F60A3CEB-E9FE-444B-B6E3-860F8C663497}']
   function Get_FactoryModeleEcriture : IBOModeleEcritureFactory2; safecall;
   function Get_FactoryModeleEcritureLigne : IBITypeObjectFactory; safecall;
   function Get_PI_Intitule : WideString; safecall;
   procedure Set_PI_Intitule(const pVal:WideString); safecall;
   function Get_PI_Raccourci : WideString; safecall;
   procedure Set_PI_Raccourci(const pVal:WideString); safecall;
   function Get_JO_Type : JournalType; safecall;
   procedure Set_JO_Type(const pVal:JournalType); safecall;
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pVal:IBOJournal3); safecall;
    // FactoryModeleEcriture : property FactoryModeleEcriture 
   property FactoryModeleEcriture:IBOModeleEcritureFactory2 read Get_FactoryModeleEcriture;
    // FactoryModeleEcritureLigne : property FactoryModeleEcritureLigne 
   property FactoryModeleEcritureLigne:IBITypeObjectFactory read Get_FactoryModeleEcritureLigne;
    // PI_Intitule : property PI_Intitule 
   property PI_Intitule:WideString read Get_PI_Intitule write Set_PI_Intitule;
    // PI_Raccourci : property PI_Raccourci 
   property PI_Raccourci:WideString read Get_PI_Raccourci write Set_PI_Raccourci;
    // JO_Type : property JO_Type 
   property JO_Type:JournalType read Get_JO_Type write Set_JO_Type;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
  end;


// IBOModeleEcriture3 : IBOModeleEcriture3 Interface

 IBOModeleEcriture3Disp = dispinterface
   ['{F60A3CEB-E9FE-444B-B6E3-860F8C663497}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModeleEcriture : property FactoryModeleEcriture 
   property FactoryModeleEcriture:IBOModeleEcritureFactory2  readonly dispid 100;
    // FactoryModeleEcritureLigne : property FactoryModeleEcritureLigne 
   property FactoryModeleEcritureLigne:IBITypeObjectFactory  readonly dispid 101;
    // PI_Intitule : property PI_Intitule 
   property PI_Intitule:WideString dispid 102;
    // PI_Raccourci : property PI_Raccourci 
   property PI_Raccourci:WideString dispid 103;
    // JO_Type : property JO_Type 
   property JO_Type:JournalType dispid 104;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 105;
  end;


// IBPRappelFactory : IBPRappelFactory Interface

 IBPRappelFactory = interface(IBITypeObjectFactory)
   ['{A8ABA975-4096-48B6-9D17-BB567EF59ACB}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPRappel;safecall;
  end;


// IBPRappelFactory : IBPRappelFactory Interface

 IBPRappelFactoryDisp = dispinterface
   ['{A8ABA975-4096-48B6-9D17-BB567EF59ACB}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPRappel;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPRappel : IBPRappel Interface

 IBPRappel = interface(IBIPersistObject)
   ['{1214E7B0-99C7-49AE-AAB7-7692DEC498DC}']
   function Get_FactoryRappel : IBPRappelFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_R_Debut : Smallint; safecall;
   procedure Set_R_Debut(const pVal:Smallint); safecall;
   function Get_R_Fin : Smallint; safecall;
   procedure Set_R_Fin(const pVal:Smallint); safecall;
   function Get_R_NbJours : Smallint; safecall;
   procedure Set_R_NbJours(const pVal:Smallint); safecall;
    // FactoryRappel : property FactoryRappel 
   property FactoryRappel:IBPRappelFactory read Get_FactoryRappel;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // R_Debut : property R_Debut 
   property R_Debut:Smallint read Get_R_Debut write Set_R_Debut;
    // R_Fin : property R_Fin 
   property R_Fin:Smallint read Get_R_Fin write Set_R_Fin;
    // R_NbJours : property R_NbJours 
   property R_NbJours:Smallint read Get_R_NbJours write Set_R_NbJours;
  end;


// IBPRappel : IBPRappel Interface

 IBPRappelDisp = dispinterface
   ['{1214E7B0-99C7-49AE-AAB7-7692DEC498DC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryRappel : property FactoryRappel 
   property FactoryRappel:IBPRappelFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // R_Debut : property R_Debut 
   property R_Debut:Smallint dispid 102;
    // R_Fin : property R_Fin 
   property R_Fin:Smallint dispid 103;
    // R_NbJours : property R_NbJours 
   property R_NbJours:Smallint dispid 104;
  end;


// IBPTiersStatFactory : IBPTiersStatFactory Interface

 IBPTiersStatFactory = interface(IBITypeObjectFactory)
   ['{FBB89C2B-316F-45CA-997A-E4A0492EC64B}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPTiersStat;safecall;
  end;


// IBPTiersStatFactory : IBPTiersStatFactory Interface

 IBPTiersStatFactoryDisp = dispinterface
   ['{FBB89C2B-316F-45CA-997A-E4A0492EC64B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPTiersStat;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPTiersStat : IBPTiersStat Interface

 IBPTiersStat = interface(IBIPersistObject)
   ['{8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}']
   function Get_FactoryTiersStat : IBPTiersStatFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Enums : IBIValuesInsertable; safecall;
    // FactoryTiersStat : property FactoryTiersStat 
   property FactoryTiersStat:IBPTiersStatFactory read Get_FactoryTiersStat;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable read Get_Enums;
  end;


// IBPTiersStat : IBPTiersStat Interface

 IBPTiersStatDisp = dispinterface
   ['{8B292D79-32B2-4245-BAFE-D0E6FB87C9F1}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiersStat : property FactoryTiersStat 
   property FactoryTiersStat:IBPTiersStatFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable  readonly dispid 102;
  end;


// IBOModeleGrilleFactory : IBOModeleGrilleFactory Interface

 IBOModeleGrilleFactory = interface(IBITypeObjectFactory)
   ['{458C0B28-25F9-4C8B-B073-36F2E5376558}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOModeleGrille;safecall;
  end;


// IBOModeleGrilleFactory : IBOModeleGrilleFactory Interface

 IBOModeleGrilleFactoryDisp = dispinterface
   ['{458C0B28-25F9-4C8B-B073-36F2E5376558}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOModeleGrille;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOModeleGrille : IBOModeleGrille Interface

 IBOModeleGrille = interface(IBIPersistObject)
   ['{E2155282-6020-4C72-B7D0-9EEBAFAB602C}']
   function Get_FactoryModeleGrille : IBOModeleGrilleFactory; safecall;
   function Get_FactoryModeleGrilleLigne : IBOModeleGrilleLigneFactory; safecall;
   function Get_type_ : ModeleGrilleType; safecall;
   procedure Set_type_(const pVal:ModeleGrilleType); safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Raccourci : WideString; safecall;
   procedure Set_Raccourci(const pVal:WideString); safecall;
    // FactoryModeleGrille : property FactoryModeleGrille 
   property FactoryModeleGrille:IBOModeleGrilleFactory read Get_FactoryModeleGrille;
    // FactoryModeleGrilleLigne : property FactoryModeleGrilleLigne 
   property FactoryModeleGrilleLigne:IBOModeleGrilleLigneFactory read Get_FactoryModeleGrilleLigne;
    // type : property Type 
   property type_:ModeleGrilleType read Get_type_ write Set_type_;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Raccourci : property Raccourci 
   property Raccourci:WideString read Get_Raccourci write Set_Raccourci;
  end;


// IBOModeleGrille : IBOModeleGrille Interface

 IBOModeleGrilleDisp = dispinterface
   ['{E2155282-6020-4C72-B7D0-9EEBAFAB602C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModeleGrille : property FactoryModeleGrille 
   property FactoryModeleGrille:IBOModeleGrilleFactory  readonly dispid 100;
    // FactoryModeleGrilleLigne : property FactoryModeleGrilleLigne 
   property FactoryModeleGrilleLigne:IBOModeleGrilleLigneFactory  readonly dispid 101;
    // type : property Type 
   property type_:ModeleGrilleType dispid 102;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 103;
    // Raccourci : property Raccourci 
   property Raccourci:WideString dispid 104;
  end;


// IBOModeleGrilleLigneFactory : IBOModeleGrilleLigneFactory Interface

 IBOModeleGrilleLigneFactory = interface(IBITypeObjectFactory)
   ['{4FBB9839-33B4-4C0C-B9ED-04773DFA472B}']
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;safecall;
  end;


// IBOModeleGrilleLigneFactory : IBOModeleGrilleLigneFactory Interface

 IBOModeleGrilleLigneFactoryDisp = dispinterface
   ['{4FBB9839-33B4-4C0C-B9ED-04773DFA472B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;dispid 10;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPTiersFactory : IBPTiersFactory Interface

 IBPTiersFactory = interface(IBITypeObjectFactory)
   ['{A40A34F1-9B69-4A46-AB90-E7ED9FA58129}']
    // ReadTypeTiers : methode ReadTypeTiers 
   function ReadTypeTiers(sType:TiersType):IBPTiers;safecall;
  end;


// IBPTiersFactory : IBPTiersFactory Interface

 IBPTiersFactoryDisp = dispinterface
   ['{A40A34F1-9B69-4A46-AB90-E7ED9FA58129}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ReadTypeTiers : methode ReadTypeTiers 
   function ReadTypeTiers(sType:TiersType):IBPTiers;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPTiers : IBPTiers Interface

 IBPTiers = interface(IBIPersistObject)
   ['{3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}']
   function Get_FactoryTiersType : IBPTiersFactory; safecall;
   function Get_CT_Type : TiersType; safecall;
   function Get_T_Numerotation : TypeTiersNumerotation; safecall;
   procedure Set_T_Numerotation(const pVal:TypeTiersNumerotation); safecall;
   function Get_T_Lg : Smallint; safecall;
   procedure Set_T_Lg(const pVal:Smallint); safecall;
   function Get_T_Racine : WideString; safecall;
   procedure Set_T_Racine(const pVal:WideString); safecall;
   function Get_T_Intitule(sElt:Smallint) : WideString; safecall;
   procedure Set_T_Intitule(const sElt:Smallint; const parT_Intitule:WideString); safecall;
   function Get_T_TCompte(sElt:Smallint) : TypeTiersCompteType; safecall;
   procedure Set_T_TCompte(const sElt:Smallint; const parT_TCompte:TypeTiersCompteType); safecall;
   function Get_T_Compte(sElt:Smallint) : WideString; safecall;
   procedure Set_T_Compte(const sElt:Smallint; const parT_Compte:WideString); safecall;
   function Get_IsPrincipal(sElt:Smallint) : WordBool; safecall;
   procedure Set_IsPrincipal(const sElt:Smallint; const parIsPrincipal:WordBool); safecall;
   function Get_NextCT_Num : WideString; safecall;
    // FactoryTiersType : property FactoryTiersType 
   property FactoryTiersType:IBPTiersFactory read Get_FactoryTiersType;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType read Get_CT_Type;
    // T_Numerotation : property T_Numerotation 
   property T_Numerotation:TypeTiersNumerotation read Get_T_Numerotation write Set_T_Numerotation;
    // T_Lg : property T_Lg 
   property T_Lg:Smallint read Get_T_Lg write Set_T_Lg;
    // T_Racine : property T_Racine 
   property T_Racine:WideString read Get_T_Racine write Set_T_Racine;
    // T_Intitule : property T_Intitule 
   property T_Intitule[sElt:Smallint]:WideString read Get_T_Intitule write Set_T_Intitule;
    // T_TCompte : property T_TCompte 
   property T_TCompte[sElt:Smallint]:TypeTiersCompteType read Get_T_TCompte write Set_T_TCompte;
    // T_Compte : property T_Compte 
   property T_Compte[sElt:Smallint]:WideString read Get_T_Compte write Set_T_Compte;
    // IsPrincipal : property IsPrincipal 
   property IsPrincipal[sElt:Smallint]:WordBool read Get_IsPrincipal write Set_IsPrincipal;
    // NextCT_Num : property NextCT_Num 
   property NextCT_Num:WideString read Get_NextCT_Num;
  end;


// IBPTiers : IBPTiers Interface

 IBPTiersDisp = dispinterface
   ['{3DA85DBC-0497-43C5-91D2-EB4F39EF5CDC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryTiersType : property FactoryTiersType 
   property FactoryTiersType:IBPTiersFactory  readonly dispid 100;
    // CT_Type : property CT_Type 
   property CT_Type:TiersType  readonly dispid 101;
    // T_Numerotation : property T_Numerotation 
   property T_Numerotation:TypeTiersNumerotation dispid 102;
    // T_Lg : property T_Lg 
   property T_Lg:Smallint dispid 103;
    // T_Racine : property T_Racine 
   property T_Racine:WideString dispid 104;
    // T_Intitule : property T_Intitule 
   property T_Intitule[sElt:Smallint]:WideString dispid 105;
    // T_TCompte : property T_TCompte 
   property T_TCompte[sElt:Smallint]:TypeTiersCompteType dispid 106;
    // T_Compte : property T_Compte 
   property T_Compte[sElt:Smallint]:WideString dispid 107;
    // IsPrincipal : property IsPrincipal 
   property IsPrincipal[sElt:Smallint]:WordBool dispid 108;
    // NextCT_Num : property NextCT_Num 
   property NextCT_Num:WideString  readonly dispid 109;
  end;


// IPMEncoder : IPMEncoder Interface

 IPMEncoder = interface(IPMProcess)
   ['{356BB216-94EE-4357-9148-EDB271166D41}']
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pJournal:IBOJournal3); safecall;
   function Get_Date : TDateTime; safecall;
   procedure Set_Date(const pVal:TDateTime); safecall;
   function Get_EC_Piece : WideString; safecall;
   procedure Set_EC_Piece(const pVal:WideString); safecall;
   function Get_EC_RefPiece : WideString; safecall;
   procedure Set_EC_RefPiece(const pVal:WideString); safecall;
   function Get_EC_Intitule : WideString; safecall;
   procedure Set_EC_Intitule(const pVal:WideString); safecall;
   function Get_EC_Parite : Double; safecall;
   procedure Set_EC_Parite(const pVal:Double); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_EC_Reference : WideString; safecall;
   procedure Set_EC_Reference(const pVal:WideString); safecall;
   function Get_bAnalytiqueAuto : WordBool; safecall;
   procedure Set_bAnalytiqueAuto(const pVal:WordBool); safecall;
   function Get_bMultiEcheanceAuto : WordBool; safecall;
   procedure Set_bMultiEcheanceAuto(const pVal:WordBool); safecall;
   function Get_ListEcrituresOut : IBICollection; safecall;
   function Get_Debit : Double; safecall;
   function Get_Credit : Double; safecall;
   function Get_Solde : Double; safecall;
   function Get_FactoryEcritureIn : IBOEcritureFactory3; safecall;
    // AddTiersPart : methode AddTiersPart 
   procedure AddTiersPart(pTiers:IBOTiersPart3;dMontantTTC:Double;pCompteGCharegeProduit:IBOCompteG3;pCompteGTVA:IBOCompteG3;pCompteGTiers:IBOCompteG3);safecall;
    // Equilibrer : methode Equilibrer 
   function Equilibrer(pCompteG:IBOCompteG3):IBOEcriture3;safecall;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
    // Date : property Date 
   property Date:TDateTime read Get_Date write Set_Date;
    // EC_Piece : property EC_Piece 
   property EC_Piece:WideString read Get_EC_Piece write Set_EC_Piece;
    // EC_RefPiece : property EC_RefPiece 
   property EC_RefPiece:WideString read Get_EC_RefPiece write Set_EC_RefPiece;
    // EC_Intitule : property EC_Intitule 
   property EC_Intitule:WideString read Get_EC_Intitule write Set_EC_Intitule;
    // EC_Parite : property EC_Parite 
   property EC_Parite:Double read Get_EC_Parite write Set_EC_Parite;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // EC_Reference : property EC_Reference 
   property EC_Reference:WideString read Get_EC_Reference write Set_EC_Reference;
    // bAnalytiqueAuto : property bAnalytiqueAuto 
   property bAnalytiqueAuto:WordBool read Get_bAnalytiqueAuto write Set_bAnalytiqueAuto;
    // bMultiEcheanceAuto : property bMultiEcheanceAuto 
   property bMultiEcheanceAuto:WordBool read Get_bMultiEcheanceAuto write Set_bMultiEcheanceAuto;
    // ListEcrituresOut : property ListEcrituresOut 
   property ListEcrituresOut:IBICollection read Get_ListEcrituresOut;
    // Debit : property Debit 
   property Debit:Double read Get_Debit;
    // Credit : property Credit 
   property Credit:Double read Get_Credit;
    // Solde : property Solde 
   property Solde:Double read Get_Solde;
    // FactoryEcritureIn : property FactoryEcritureIn 
   property FactoryEcritureIn:IBOEcritureFactory3 read Get_FactoryEcritureIn;
  end;


// IPMEncoder : IPMEncoder Interface

 IPMEncoderDisp = dispinterface
   ['{356BB216-94EE-4357-9148-EDB271166D41}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // AddTiersPart : methode AddTiersPart 
   procedure AddTiersPart(pTiers:IBOTiersPart3;dMontantTTC:Double;pCompteGCharegeProduit:IBOCompteG3;pCompteGTVA:IBOCompteG3;pCompteGTiers:IBOCompteG3);dispid 121;
    // Equilibrer : methode Equilibrer 
   function Equilibrer(pCompteG:IBOCompteG3):IBOEcriture3;dispid 122;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 100;
    // Date : property Date 
   property Date:TDateTime dispid 101;
    // EC_Piece : property EC_Piece 
   property EC_Piece:WideString dispid 102;
    // EC_RefPiece : property EC_RefPiece 
   property EC_RefPiece:WideString dispid 103;
    // EC_Intitule : property EC_Intitule 
   property EC_Intitule:WideString dispid 104;
    // EC_Parite : property EC_Parite 
   property EC_Parite:Double dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // EC_Reference : property EC_Reference 
   property EC_Reference:WideString dispid 107;
    // bAnalytiqueAuto : property bAnalytiqueAuto 
   property bAnalytiqueAuto:WordBool dispid 108;
    // bMultiEcheanceAuto : property bMultiEcheanceAuto 
   property bMultiEcheanceAuto:WordBool dispid 109;
    // ListEcrituresOut : property ListEcrituresOut 
   property ListEcrituresOut:IBICollection  readonly dispid 111;
    // Debit : property Debit 
   property Debit:Double  readonly dispid 112;
    // Credit : property Credit 
   property Credit:Double  readonly dispid 113;
    // Solde : property Solde 
   property Solde:Double  readonly dispid 114;
    // FactoryEcritureIn : property FactoryEcritureIn 
   property FactoryEcritureIn:IBOEcritureFactory3  readonly dispid 115;
  end;


// IBOBanqueFactory : IBOBanqueFactory Interface

 IBOBanqueFactory = interface(IBITypeObjectFactory)
   ['{09DE9B82-23C4-49F3-87CB-A0D0381584AC}']
    // ExistAbrege : methode ExistAbrege 
   function ExistAbrege(sAbrege:WideString):WordBool;safecall;
    // ReadAbrege : methode ReadAbrege 
   function ReadAbrege(sAbrege:WideString):IBOBanque;safecall;
  end;


// IBOBanqueFactory : IBOBanqueFactory Interface

 IBOBanqueFactoryDisp = dispinterface
   ['{09DE9B82-23C4-49F3-87CB-A0D0381584AC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistAbrege : methode ExistAbrege 
   function ExistAbrege(sAbrege:WideString):WordBool;dispid 10;
    // ReadAbrege : methode ReadAbrege 
   function ReadAbrege(sAbrege:WideString):IBOBanque;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOBanque : IBOBanque Interface

 IBOBanque = interface(IBIPersistObject)
   ['{105B22E1-1E39-4E1C-9882-C6DBE95F8456}']
   function Get_FactoryBanque : IBOBanqueFactory; safecall;
   function Get_FactoryBanqueRib : IBOBanqueRibFactory; safecall;
   function Get_FactoryBanqueContact : IBITypeObjectFactory; safecall;
   function Get_BQ_Intitule : WideString; safecall;
   procedure Set_BQ_Intitule(const pVal:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_BQ_Contact : WideString; safecall;
   procedure Set_BQ_Contact(const pVal:WideString); safecall;
   function Get_BQ_Abrege : WideString; safecall;
   procedure Set_BQ_Abrege(const pVal:WideString); safecall;
   function Get_BQ_BIC : WideString; safecall;
   procedure Set_BQ_BIC(const pVal:WideString); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
   function Get_BQ_ModeRemise : BanqueModeRemise; safecall;
   procedure Set_BQ_ModeRemise(const pVal:BanqueModeRemise); safecall;
   function Get_BQ_BordDevise : WordBool; safecall;
   procedure Set_BQ_BordDevise(const pVal:WordBool); safecall;
   function Get_BQ_AchatDevise : WordBool; safecall;
   procedure Set_BQ_AchatDevise(const pVal:WordBool); safecall;
   function Get_BQ_Remise : BanqueRemise; safecall;
   procedure Set_BQ_Remise(const pVal:BanqueRemise); safecall;
   function Get_BQ_CodeIdent : WideString; safecall;
   procedure Set_BQ_CodeIdent(const pVal:WideString); safecall;
   function Get_BQ_DOAdresse : WordBool; safecall;
   procedure Set_BQ_DOAdresse(const pVal:WordBool); safecall;
   function Get_BQ_DOVille : WordBool; safecall;
   procedure Set_BQ_DOVille(const pVal:WordBool); safecall;
   function Get_BQ_DOCodePostal : WordBool; safecall;
   procedure Set_BQ_DOCodePostal(const pVal:WordBool); safecall;
   function Get_BQ_DOSiret : WordBool; safecall;
   procedure Set_BQ_DOSiret(const pVal:WordBool); safecall;
   function Get_BQ_DOCodeIdent : WordBool; safecall;
   procedure Set_BQ_DOCodeIdent(const pVal:WordBool); safecall;
   function Get_BQ_DOAgenceVille : WordBool; safecall;
   procedure Set_BQ_DOAgenceVille(const pVal:WordBool); safecall;
   function Get_BQ_DOAgenceCP : WordBool; safecall;
   procedure Set_BQ_DOAgenceCP(const pVal:WordBool); safecall;
   function Get_BQ_DOTypeIdent : WordBool; safecall;
   procedure Set_BQ_DOTypeIdent(const pVal:WordBool); safecall;
   function Get_BQ_DOCle : WordBool; safecall;
   procedure Set_BQ_DOCle(const pVal:WordBool); safecall;
   function Get_BQ_VTAdresse : WordBool; safecall;
   procedure Set_BQ_VTAdresse(const pVal:WordBool); safecall;
   function Get_BQ_VTVille : WordBool; safecall;
   procedure Set_BQ_VTVille(const pVal:WordBool); safecall;
   function Get_BQ_VTCodePostal : WordBool; safecall;
   procedure Set_BQ_VTCodePostal(const pVal:WordBool); safecall;
   function Get_BQ_VTSiret : WordBool; safecall;
   procedure Set_BQ_VTSiret(const pVal:WordBool); safecall;
   function Get_BQ_VTPays : WordBool; safecall;
   procedure Set_BQ_VTPays(const pVal:WordBool); safecall;
   function Get_BQ_VTContrat : WordBool; safecall;
   procedure Set_BQ_VTContrat(const pVal:WordBool); safecall;
   function Get_BQ_VTDateAchat : WordBool; safecall;
   procedure Set_BQ_VTDateAchat(const pVal:WordBool); safecall;
   function Get_BQ_VTTauxChange : WordBool; safecall;
   procedure Set_BQ_VTTauxChange(const pVal:WordBool); safecall;
   function Get_BQ_VTInstruction : WordBool; safecall;
   procedure Set_BQ_VTInstruction(const pVal:WordBool); safecall;
   function Get_BQ_BBIntitule : WordBool; safecall;
   procedure Set_BQ_BBIntitule(const pVal:WordBool); safecall;
   function Get_BQ_BBBIC : WordBool; safecall;
   procedure Set_BQ_BBBIC(const pVal:WordBool); safecall;
   function Get_BQ_BBAdresse : WordBool; safecall;
   procedure Set_BQ_BBAdresse(const pVal:WordBool); safecall;
   function Get_BQ_BBVille : WordBool; safecall;
   procedure Set_BQ_BBVille(const pVal:WordBool); safecall;
   function Get_BQ_BBCodePostal : WordBool; safecall;
   procedure Set_BQ_BBCodePostal(const pVal:WordBool); safecall;
   function Get_BQ_BBCompte : WordBool; safecall;
   procedure Set_BQ_BBCompte(const pVal:WordBool); safecall;
   function Get_BQ_BIIntitule : WordBool; safecall;
   procedure Set_BQ_BIIntitule(const pVal:WordBool); safecall;
   function Get_BQ_BIBIC : WordBool; safecall;
   procedure Set_BQ_BIBIC(const pVal:WordBool); safecall;
   function Get_BQ_BIAdresse : WordBool; safecall;
   procedure Set_BQ_BIAdresse(const pVal:WordBool); safecall;
   function Get_BQ_BIVille : WordBool; safecall;
   procedure Set_BQ_BIVille(const pVal:WordBool); safecall;
   function Get_BQ_BICodePostal : WordBool; safecall;
   procedure Set_BQ_BICodePostal(const pVal:WordBool); safecall;
   function Get_BQ_BIPays : WordBool; safecall;
   procedure Set_BQ_BIPays(const pVal:WordBool); safecall;
   function Get_BQ_TransEMailEnvoi : WideString; safecall;
   procedure Set_BQ_TransEMailEnvoi(const pVal:WideString); safecall;
   function Get_BQ_TransSite : WideString; safecall;
   procedure Set_BQ_TransSite(const pVal:WideString); safecall;
   function Get_BQ_FormatVir : BanqueFormatVirement; safecall;
   procedure Set_BQ_FormatVir(const pVal:BanqueFormatVirement); safecall;
   function Get_BQ_FormatVirInter : BanqueFormatVirement; safecall;
   procedure Set_BQ_FormatVirInter(const pVal:BanqueFormatVirement); safecall;
   function Get_BQ_FormatPrel : BanqueFormatVirement; safecall;
   procedure Set_BQ_FormatPrel(const pVal:BanqueFormatVirement); safecall;
   function Get_BQ_VTCodeService : WideString; safecall;
   procedure Set_BQ_VTCodeService(const pVal:WideString); safecall;
   function Get_BQ_ModeleParam : WideString; safecall;
   procedure Set_BQ_ModeleParam(const pVal:WideString); safecall;
    // FactoryBanque : property FactoryBanque 
   property FactoryBanque:IBOBanqueFactory read Get_FactoryBanque;
    // FactoryBanqueRib : property FactoryBanqueRib 
   property FactoryBanqueRib:IBOBanqueRibFactory read Get_FactoryBanqueRib;
    // FactoryBanqueContact : property FactoryBanqueContact 
   property FactoryBanqueContact:IBITypeObjectFactory read Get_FactoryBanqueContact;
    // BQ_Intitule : property BQ_Intitule 
   property BQ_Intitule:WideString read Get_BQ_Intitule write Set_BQ_Intitule;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // BQ_Contact : property BQ_Contact 
   property BQ_Contact:WideString read Get_BQ_Contact write Set_BQ_Contact;
    // BQ_Abrege : property BQ_Abrege 
   property BQ_Abrege:WideString read Get_BQ_Abrege write Set_BQ_Abrege;
    // BQ_BIC : property BQ_BIC 
   property BQ_BIC:WideString read Get_BQ_BIC write Set_BQ_BIC;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // BQ_ModeRemise : property BQ_ModeRemise 
   property BQ_ModeRemise:BanqueModeRemise read Get_BQ_ModeRemise write Set_BQ_ModeRemise;
    // BQ_BordDevise : property BQ_BordDevise 
   property BQ_BordDevise:WordBool read Get_BQ_BordDevise write Set_BQ_BordDevise;
    // BQ_AchatDevise : property BQ_AchatDevise 
   property BQ_AchatDevise:WordBool read Get_BQ_AchatDevise write Set_BQ_AchatDevise;
    // BQ_Remise : property BQ_Remise 
   property BQ_Remise:BanqueRemise read Get_BQ_Remise write Set_BQ_Remise;
    // BQ_CodeIdent : property BQ_CodeIdent 
   property BQ_CodeIdent:WideString read Get_BQ_CodeIdent write Set_BQ_CodeIdent;
    // BQ_DOAdresse : property BQ_DOAdresse 
   property BQ_DOAdresse:WordBool read Get_BQ_DOAdresse write Set_BQ_DOAdresse;
    // BQ_DOVille : property BQ_DOVille 
   property BQ_DOVille:WordBool read Get_BQ_DOVille write Set_BQ_DOVille;
    // BQ_DOCodePostal : property BQ_DOCodePostal 
   property BQ_DOCodePostal:WordBool read Get_BQ_DOCodePostal write Set_BQ_DOCodePostal;
    // BQ_DOSiret : property BQ_DOSiret 
   property BQ_DOSiret:WordBool read Get_BQ_DOSiret write Set_BQ_DOSiret;
    // BQ_DOCodeIdent : property BQ_DOCodeIdent 
   property BQ_DOCodeIdent:WordBool read Get_BQ_DOCodeIdent write Set_BQ_DOCodeIdent;
    // BQ_DOAgenceVille : property BQ_DOAgenceVille 
   property BQ_DOAgenceVille:WordBool read Get_BQ_DOAgenceVille write Set_BQ_DOAgenceVille;
    // BQ_DOAgenceCP : property BQ_DOAgenceCP 
   property BQ_DOAgenceCP:WordBool read Get_BQ_DOAgenceCP write Set_BQ_DOAgenceCP;
    // BQ_DOTypeIdent : property BQ_DOTypeIdent 
   property BQ_DOTypeIdent:WordBool read Get_BQ_DOTypeIdent write Set_BQ_DOTypeIdent;
    // BQ_DOCle : property BQ_DOCle 
   property BQ_DOCle:WordBool read Get_BQ_DOCle write Set_BQ_DOCle;
    // BQ_VTAdresse : property BQ_VTAdresse 
   property BQ_VTAdresse:WordBool read Get_BQ_VTAdresse write Set_BQ_VTAdresse;
    // BQ_VTVille : property BQ_VTVille 
   property BQ_VTVille:WordBool read Get_BQ_VTVille write Set_BQ_VTVille;
    // BQ_VTCodePostal : property BQ_VTCodePostal 
   property BQ_VTCodePostal:WordBool read Get_BQ_VTCodePostal write Set_BQ_VTCodePostal;
    // BQ_VTSiret : property BQ_VTSiret 
   property BQ_VTSiret:WordBool read Get_BQ_VTSiret write Set_BQ_VTSiret;
    // BQ_VTPays : property BQ_VTPays 
   property BQ_VTPays:WordBool read Get_BQ_VTPays write Set_BQ_VTPays;
    // BQ_VTContrat : property BQ_VTContrat 
   property BQ_VTContrat:WordBool read Get_BQ_VTContrat write Set_BQ_VTContrat;
    // BQ_VTDateAchat : property BQ_VTDateAchat 
   property BQ_VTDateAchat:WordBool read Get_BQ_VTDateAchat write Set_BQ_VTDateAchat;
    // BQ_VTTauxChange : property BQ_VTTauxChange 
   property BQ_VTTauxChange:WordBool read Get_BQ_VTTauxChange write Set_BQ_VTTauxChange;
    // BQ_VTInstruction : property BQ_VTInstruction 
   property BQ_VTInstruction:WordBool read Get_BQ_VTInstruction write Set_BQ_VTInstruction;
    // BQ_BBIntitule : property BQ_BBIntitule 
   property BQ_BBIntitule:WordBool read Get_BQ_BBIntitule write Set_BQ_BBIntitule;
    // BQ_BBBIC : property BQ_BBBIC 
   property BQ_BBBIC:WordBool read Get_BQ_BBBIC write Set_BQ_BBBIC;
    // BQ_BBAdresse : property BQ_BBAdresse 
   property BQ_BBAdresse:WordBool read Get_BQ_BBAdresse write Set_BQ_BBAdresse;
    // BQ_BBVille : property BQ_BBVille 
   property BQ_BBVille:WordBool read Get_BQ_BBVille write Set_BQ_BBVille;
    // BQ_BBCodePostal : property BQ_BBCodePostal 
   property BQ_BBCodePostal:WordBool read Get_BQ_BBCodePostal write Set_BQ_BBCodePostal;
    // BQ_BBCompte : property BQ_BBCompte 
   property BQ_BBCompte:WordBool read Get_BQ_BBCompte write Set_BQ_BBCompte;
    // BQ_BIIntitule : property BQ_BIIntitule 
   property BQ_BIIntitule:WordBool read Get_BQ_BIIntitule write Set_BQ_BIIntitule;
    // BQ_BIBIC : property BQ_BIBIC 
   property BQ_BIBIC:WordBool read Get_BQ_BIBIC write Set_BQ_BIBIC;
    // BQ_BIAdresse : property BQ_BIAdresse 
   property BQ_BIAdresse:WordBool read Get_BQ_BIAdresse write Set_BQ_BIAdresse;
    // BQ_BIVille : property BQ_BIVille 
   property BQ_BIVille:WordBool read Get_BQ_BIVille write Set_BQ_BIVille;
    // BQ_BICodePostal : property BQ_BICodePostal 
   property BQ_BICodePostal:WordBool read Get_BQ_BICodePostal write Set_BQ_BICodePostal;
    // BQ_BIPays : property BQ_BIPays 
   property BQ_BIPays:WordBool read Get_BQ_BIPays write Set_BQ_BIPays;
    // BQ_TransEMailEnvoi : property BQ_TransEMailEnvoi 
   property BQ_TransEMailEnvoi:WideString read Get_BQ_TransEMailEnvoi write Set_BQ_TransEMailEnvoi;
    // BQ_TransSite : property BQ_TransSite 
   property BQ_TransSite:WideString read Get_BQ_TransSite write Set_BQ_TransSite;
    // BQ_FormatVir : Format Virement 
   property BQ_FormatVir:BanqueFormatVirement read Get_BQ_FormatVir write Set_BQ_FormatVir;
    // BQ_FormatVirInter : Format Virement internationaux 
   property BQ_FormatVirInter:BanqueFormatVirement read Get_BQ_FormatVirInter write Set_BQ_FormatVirInter;
    // BQ_FormatPrel : Format Prelevement 
   property BQ_FormatPrel:BanqueFormatVirement read Get_BQ_FormatPrel write Set_BQ_FormatPrel;
    // BQ_VTCodeService : property BQ_VTCodeService 
   property BQ_VTCodeService:WideString read Get_BQ_VTCodeService write Set_BQ_VTCodeService;
    // BQ_ModeleParam : property BQ_ModeleParam 
   property BQ_ModeleParam:WideString read Get_BQ_ModeleParam write Set_BQ_ModeleParam;
  end;


// IBOBanque : IBOBanque Interface

 IBOBanqueDisp = dispinterface
   ['{105B22E1-1E39-4E1C-9882-C6DBE95F8456}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryBanque : property FactoryBanque 
   property FactoryBanque:IBOBanqueFactory  readonly dispid 100;
    // FactoryBanqueRib : property FactoryBanqueRib 
   property FactoryBanqueRib:IBOBanqueRibFactory  readonly dispid 101;
    // FactoryBanqueContact : property FactoryBanqueContact 
   property FactoryBanqueContact:IBITypeObjectFactory  readonly dispid 102;
    // BQ_Intitule : property BQ_Intitule 
   property BQ_Intitule:WideString dispid 103;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 104;
    // BQ_Contact : property BQ_Contact 
   property BQ_Contact:WideString dispid 105;
    // BQ_Abrege : property BQ_Abrege 
   property BQ_Abrege:WideString dispid 106;
    // BQ_BIC : property BQ_BIC 
   property BQ_BIC:WideString dispid 107;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 108;
    // BQ_ModeRemise : property BQ_ModeRemise 
   property BQ_ModeRemise:BanqueModeRemise dispid 111;
    // BQ_BordDevise : property BQ_BordDevise 
   property BQ_BordDevise:WordBool dispid 112;
    // BQ_AchatDevise : property BQ_AchatDevise 
   property BQ_AchatDevise:WordBool dispid 113;
    // BQ_Remise : property BQ_Remise 
   property BQ_Remise:BanqueRemise dispid 114;
    // BQ_CodeIdent : property BQ_CodeIdent 
   property BQ_CodeIdent:WideString dispid 115;
    // BQ_DOAdresse : property BQ_DOAdresse 
   property BQ_DOAdresse:WordBool dispid 116;
    // BQ_DOVille : property BQ_DOVille 
   property BQ_DOVille:WordBool dispid 117;
    // BQ_DOCodePostal : property BQ_DOCodePostal 
   property BQ_DOCodePostal:WordBool dispid 118;
    // BQ_DOSiret : property BQ_DOSiret 
   property BQ_DOSiret:WordBool dispid 119;
    // BQ_DOCodeIdent : property BQ_DOCodeIdent 
   property BQ_DOCodeIdent:WordBool dispid 120;
    // BQ_DOAgenceVille : property BQ_DOAgenceVille 
   property BQ_DOAgenceVille:WordBool dispid 121;
    // BQ_DOAgenceCP : property BQ_DOAgenceCP 
   property BQ_DOAgenceCP:WordBool dispid 122;
    // BQ_DOTypeIdent : property BQ_DOTypeIdent 
   property BQ_DOTypeIdent:WordBool dispid 123;
    // BQ_DOCle : property BQ_DOCle 
   property BQ_DOCle:WordBool dispid 124;
    // BQ_VTAdresse : property BQ_VTAdresse 
   property BQ_VTAdresse:WordBool dispid 126;
    // BQ_VTVille : property BQ_VTVille 
   property BQ_VTVille:WordBool dispid 127;
    // BQ_VTCodePostal : property BQ_VTCodePostal 
   property BQ_VTCodePostal:WordBool dispid 128;
    // BQ_VTSiret : property BQ_VTSiret 
   property BQ_VTSiret:WordBool dispid 129;
    // BQ_VTPays : property BQ_VTPays 
   property BQ_VTPays:WordBool dispid 130;
    // BQ_VTContrat : property BQ_VTContrat 
   property BQ_VTContrat:WordBool dispid 131;
    // BQ_VTDateAchat : property BQ_VTDateAchat 
   property BQ_VTDateAchat:WordBool dispid 132;
    // BQ_VTTauxChange : property BQ_VTTauxChange 
   property BQ_VTTauxChange:WordBool dispid 133;
    // BQ_VTInstruction : property BQ_VTInstruction 
   property BQ_VTInstruction:WordBool dispid 134;
    // BQ_BBIntitule : property BQ_BBIntitule 
   property BQ_BBIntitule:WordBool dispid 135;
    // BQ_BBBIC : property BQ_BBBIC 
   property BQ_BBBIC:WordBool dispid 136;
    // BQ_BBAdresse : property BQ_BBAdresse 
   property BQ_BBAdresse:WordBool dispid 137;
    // BQ_BBVille : property BQ_BBVille 
   property BQ_BBVille:WordBool dispid 138;
    // BQ_BBCodePostal : property BQ_BBCodePostal 
   property BQ_BBCodePostal:WordBool dispid 139;
    // BQ_BBCompte : property BQ_BBCompte 
   property BQ_BBCompte:WordBool dispid 140;
    // BQ_BIIntitule : property BQ_BIIntitule 
   property BQ_BIIntitule:WordBool dispid 141;
    // BQ_BIBIC : property BQ_BIBIC 
   property BQ_BIBIC:WordBool dispid 142;
    // BQ_BIAdresse : property BQ_BIAdresse 
   property BQ_BIAdresse:WordBool dispid 143;
    // BQ_BIVille : property BQ_BIVille 
   property BQ_BIVille:WordBool dispid 144;
    // BQ_BICodePostal : property BQ_BICodePostal 
   property BQ_BICodePostal:WordBool dispid 145;
    // BQ_BIPays : property BQ_BIPays 
   property BQ_BIPays:WordBool dispid 146;
    // BQ_TransEMailEnvoi : property BQ_TransEMailEnvoi 
   property BQ_TransEMailEnvoi:WideString dispid 147;
    // BQ_TransSite : property BQ_TransSite 
   property BQ_TransSite:WideString dispid 148;
    // BQ_FormatVir : Format Virement 
   property BQ_FormatVir:BanqueFormatVirement dispid 149;
    // BQ_FormatVirInter : Format Virement internationaux 
   property BQ_FormatVirInter:BanqueFormatVirement dispid 150;
    // BQ_FormatPrel : Format Prelevement 
   property BQ_FormatPrel:BanqueFormatVirement dispid 151;
    // BQ_VTCodeService : property BQ_VTCodeService 
   property BQ_VTCodeService:WideString dispid 152;
    // BQ_ModeleParam : property BQ_ModeleParam 
   property BQ_ModeleParam:WideString dispid 153;
  end;


// IBOBanqueRibFactory : IBOBanqueRibFactory Interface

 IBOBanqueRibFactory = interface(IBITypeObjectFactory)
   ['{88C7D8E1-940D-44FA-B347-B3D5E54BFF06}']
    // ExistAbrege : methode ExistAbrege 
   function ExistAbrege(sAbrege:WideString):WordBool;safecall;
    // ReadAbrege : methode ReadAbrege 
   function ReadAbrege(sAbrege:WideString):IBOBanqueRib;safecall;
  end;


// IBOBanqueRibFactory : IBOBanqueRibFactory Interface

 IBOBanqueRibFactoryDisp = dispinterface
   ['{88C7D8E1-940D-44FA-B347-B3D5E54BFF06}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistAbrege : methode ExistAbrege 
   function ExistAbrege(sAbrege:WideString):WordBool;dispid 10;
    // ReadAbrege : methode ReadAbrege 
   function ReadAbrege(sAbrege:WideString):IBOBanqueRib;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOBanqueRib : IBOBanqueRib Interface

 IBOBanqueRib = interface(IBIPersistObject)
   ['{9F917752-EA5C-40AE-AD02-4BC192B64A56}']
   function Get_FactoryBanqueRib : IBOBanqueRibFactory; safecall;
   function Get_Banque : IBOBanque; safecall;
   function Get_EB_Banque : WideString; safecall;
   procedure Set_EB_Banque(const pVal:WideString); safecall;
   function Get_EB_Guichet : WideString; safecall;
   procedure Set_EB_Guichet(const pVal:WideString); safecall;
   function Get_EB_Compte : WideString; safecall;
   procedure Set_EB_Compte(const pVal:WideString); safecall;
   function Get_EB_Cle : WideString; safecall;
   procedure Set_EB_Cle(const pVal:WideString); safecall;
   function Get_EB_Commentaire : WideString; safecall;
   procedure Set_EB_Commentaire(const pVal:WideString); safecall;
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pVal:IBOJournal3); safecall;
   function Get_EB_Struct : RibType; safecall;
   procedure Set_EB_Struct(const pVal:RibType); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pVal:IBPDevise2); safecall;
   function Get_EB_Abrege : WideString; safecall;
   procedure Set_EB_Abrege(const pVal:WideString); safecall;
   function Get_EB_Emetteur(sElt:Smallint) : WideString; safecall;
   procedure Set_EB_Emetteur(const sElt:Smallint; const parEB_Emetteur:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_EB_Bic : WideString; safecall;
   procedure Set_EB_Bic(const pVal:WideString); safecall;
   function Get_EB_IBAN : WideString; safecall;
   procedure Set_EB_IBAN(const pVal:WideString); safecall;
   function Get_EB_CalculIBAN : WordBool; safecall;
   procedure Set_EB_CalculIBAN(const pVal:WordBool); safecall;
   function Get_EB_NomAgence : WideString; safecall;
   procedure Set_EB_NomAgence(const pVal:WideString); safecall;
   function Get_JournalEscompte : IBOJournal3; safecall;
   procedure Set_JournalEscompte(const pVal:IBOJournal3); safecall;
   function Get_JournalEncaiss : IBOJournal3; safecall;
   procedure Set_JournalEncaiss(const pVal:IBOJournal3); safecall;
   function Get_EB_IntraGroupe : WordBool; safecall;
   procedure Set_EB_IntraGroupe(const pVal:WordBool); safecall;
   function Get_EB_BenefRaisonSoc : WideString; safecall;
   procedure Set_EB_BenefRaisonSoc(const pVal:WideString); safecall;
   function Get_EB_BenefAdresse : IAdresse; safecall;
   procedure Set_EB_BenefAdresse(const pAdresse:IAdresse); safecall;
   function Get_EB_BenefSiret : WideString; safecall;
   procedure Set_EB_BenefSiret(const pVal:WideString); safecall;
   function Get_EB_PaysAgence : WideString; safecall;
   procedure Set_EB_PaysAgence(const pVal:WideString); safecall;
    // FactoryBanqueRib : property FactoryBanqueRib 
   property FactoryBanqueRib:IBOBanqueRibFactory read Get_FactoryBanqueRib;
    // Banque : property Banque 
   property Banque:IBOBanque read Get_Banque;
    // EB_Banque : property EB_Banque 
   property EB_Banque:WideString read Get_EB_Banque write Set_EB_Banque;
    // EB_Guichet : property EB_Guichet 
   property EB_Guichet:WideString read Get_EB_Guichet write Set_EB_Guichet;
    // EB_Compte : property EB_Compte 
   property EB_Compte:WideString read Get_EB_Compte write Set_EB_Compte;
    // EB_Cle : property EB_Cle 
   property EB_Cle:WideString read Get_EB_Cle write Set_EB_Cle;
    // EB_Commentaire : property EB_Commentaire 
   property EB_Commentaire:WideString read Get_EB_Commentaire write Set_EB_Commentaire;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
    // EB_Struct : property EB_Struct 
   property EB_Struct:RibType read Get_EB_Struct write Set_EB_Struct;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // EB_Abrege : property EB_Abrege 
   property EB_Abrege:WideString read Get_EB_Abrege write Set_EB_Abrege;
    // EB_Emetteur : property EB_Emetteur 
   property EB_Emetteur[sElt:Smallint]:WideString read Get_EB_Emetteur write Set_EB_Emetteur;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // EB_Bic : property EB_Bic 
   property EB_Bic:WideString read Get_EB_Bic write Set_EB_Bic;
    // EB_IBAN : property EB_IBAN 
   property EB_IBAN:WideString read Get_EB_IBAN write Set_EB_IBAN;
    // EB_CalculIBAN : property EB_CalculIBAN 
   property EB_CalculIBAN:WordBool read Get_EB_CalculIBAN write Set_EB_CalculIBAN;
    // EB_NomAgence : property EB_NomAgence 
   property EB_NomAgence:WideString read Get_EB_NomAgence write Set_EB_NomAgence;
    // JournalEscompte : property JournalEscompte 
   property JournalEscompte:IBOJournal3 read Get_JournalEscompte write Set_JournalEscompte;
    // JournalEncaiss : property JournalEncaiss 
   property JournalEncaiss:IBOJournal3 read Get_JournalEncaiss write Set_JournalEncaiss;
    // EB_IntraGroupe : property EB_IntraGroupe 
   property EB_IntraGroupe:WordBool read Get_EB_IntraGroupe write Set_EB_IntraGroupe;
    // EB_BenefRaisonSoc : property EB_BenefRaisonSoc 
   property EB_BenefRaisonSoc:WideString read Get_EB_BenefRaisonSoc write Set_EB_BenefRaisonSoc;
    // EB_BenefAdresse : property EB_BenefAdresse 
   property EB_BenefAdresse:IAdresse read Get_EB_BenefAdresse write Set_EB_BenefAdresse;
    // EB_BenefSiret : property EB_BenefSiret 
   property EB_BenefSiret:WideString read Get_EB_BenefSiret write Set_EB_BenefSiret;
    // EB_PaysAgence : property EB_PaysAgence 
   property EB_PaysAgence:WideString read Get_EB_PaysAgence write Set_EB_PaysAgence;
  end;


// IBOBanqueRib : IBOBanqueRib Interface

 IBOBanqueRibDisp = dispinterface
   ['{9F917752-EA5C-40AE-AD02-4BC192B64A56}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryBanqueRib : property FactoryBanqueRib 
   property FactoryBanqueRib:IBOBanqueRibFactory  readonly dispid 100;
    // Banque : property Banque 
   property Banque:IBOBanque  readonly dispid 101;
    // EB_Banque : property EB_Banque 
   property EB_Banque:WideString dispid 103;
    // EB_Guichet : property EB_Guichet 
   property EB_Guichet:WideString dispid 104;
    // EB_Compte : property EB_Compte 
   property EB_Compte:WideString dispid 105;
    // EB_Cle : property EB_Cle 
   property EB_Cle:WideString dispid 106;
    // EB_Commentaire : property EB_Commentaire 
   property EB_Commentaire:WideString dispid 107;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 108;
    // EB_Struct : property EB_Struct 
   property EB_Struct:RibType dispid 109;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 110;
    // EB_Abrege : property EB_Abrege 
   property EB_Abrege:WideString dispid 111;
    // EB_Emetteur : property EB_Emetteur 
   property EB_Emetteur[sElt:Smallint]:WideString dispid 112;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 113;
    // EB_Bic : property EB_Bic 
   property EB_Bic:WideString dispid 115;
    // EB_IBAN : property EB_IBAN 
   property EB_IBAN:WideString dispid 116;
    // EB_CalculIBAN : property EB_CalculIBAN 
   property EB_CalculIBAN:WordBool dispid 117;
    // EB_NomAgence : property EB_NomAgence 
   property EB_NomAgence:WideString dispid 118;
    // JournalEscompte : property JournalEscompte 
   property JournalEscompte:IBOJournal3 dispid 119;
    // JournalEncaiss : property JournalEncaiss 
   property JournalEncaiss:IBOJournal3 dispid 120;
    // EB_IntraGroupe : property EB_IntraGroupe 
   property EB_IntraGroupe:WordBool dispid 121;
    // EB_BenefRaisonSoc : property EB_BenefRaisonSoc 
   property EB_BenefRaisonSoc:WideString dispid 122;
    // EB_BenefAdresse : property EB_BenefAdresse 
   property EB_BenefAdresse:IAdresse dispid 123;
    // EB_BenefSiret : property EB_BenefSiret 
   property EB_BenefSiret:WideString dispid 124;
    // EB_PaysAgence : property EB_PaysAgence 
   property EB_PaysAgence:WideString dispid 125;
  end;


// IBPStructBanqueFactory : IBPStructBanqueFactory Interface

 IBPStructBanqueFactory = interface(IBITypeObjectFactory)
   ['{8259C696-BE45-44EA-81EE-8AE0223AB61A}']
    // ReadType : methode ReadType 
   function ReadType(sType:RibType):IBPStructBanque;safecall;
  end;


// IBPStructBanqueFactory : IBPStructBanqueFactory Interface

 IBPStructBanqueFactoryDisp = dispinterface
   ['{8259C696-BE45-44EA-81EE-8AE0223AB61A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ReadType : methode ReadType 
   function ReadType(sType:RibType):IBPStructBanque;dispid 10;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPStructBanque : IBPStructBanque Interface

 IBPStructBanque = interface(IBIPersistObject)
   ['{46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}']
   function Get_FactoryStructBanque : IBPStructBanqueFactory; safecall;
   function Get_type_ : RibType; safecall;
   function Get_B_LBanque : Smallint; safecall;
   procedure Set_B_LBanque(const pVal:Smallint); safecall;
   function Get_B_TBanque : StructBanqueFieldType; safecall;
   procedure Set_B_TBanque(const pVal:StructBanqueFieldType); safecall;
   function Get_B_LGuichet : Smallint; safecall;
   procedure Set_B_LGuichet(const pVal:Smallint); safecall;
   function Get_B_TGuichet : StructBanqueFieldType; safecall;
   procedure Set_B_TGuichet(const pVal:StructBanqueFieldType); safecall;
   function Get_B_LCompte : Smallint; safecall;
   procedure Set_B_LCompte(const pVal:Smallint); safecall;
   function Get_B_TCompte : StructBanqueFieldType; safecall;
   procedure Set_B_TCompte(const pVal:StructBanqueFieldType); safecall;
   function Get_B_LCle : Smallint; safecall;
   procedure Set_B_LCle(const pVal:Smallint); safecall;
   function Get_B_TCle : StructBanqueFieldType; safecall;
   procedure Set_B_TCle(const pVal:StructBanqueFieldType); safecall;
   function Get_B_Edi : WordBool; safecall;
   procedure Set_B_Edi(const pVal:WordBool); safecall;
   function Get_B_Controle : StructBanqueControleRib; safecall;
   procedure Set_B_Controle(const pVal:StructBanqueControleRib); safecall;
    // FactoryStructBanque : property FactoryStructBanque 
   property FactoryStructBanque:IBPStructBanqueFactory read Get_FactoryStructBanque;
    // type : property Type 
   property type_:RibType read Get_type_;
    // B_LBanque : property B_LBanque 
   property B_LBanque:Smallint read Get_B_LBanque write Set_B_LBanque;
    // B_TBanque : property B_TBanque 
   property B_TBanque:StructBanqueFieldType read Get_B_TBanque write Set_B_TBanque;
    // B_LGuichet : property B_LGuichet 
   property B_LGuichet:Smallint read Get_B_LGuichet write Set_B_LGuichet;
    // B_TGuichet : property B_TGuichet 
   property B_TGuichet:StructBanqueFieldType read Get_B_TGuichet write Set_B_TGuichet;
    // B_LCompte : property B_LCompte 
   property B_LCompte:Smallint read Get_B_LCompte write Set_B_LCompte;
    // B_TCompte : property B_TCompte 
   property B_TCompte:StructBanqueFieldType read Get_B_TCompte write Set_B_TCompte;
    // B_LCle : property B_LCle 
   property B_LCle:Smallint read Get_B_LCle write Set_B_LCle;
    // B_TCle : property B_TCle 
   property B_TCle:StructBanqueFieldType read Get_B_TCle write Set_B_TCle;
    // B_Edi : property B_Edi 
   property B_Edi:WordBool read Get_B_Edi write Set_B_Edi;
    // B_Controle : property B_Controle 
   property B_Controle:StructBanqueControleRib read Get_B_Controle write Set_B_Controle;
  end;


// IBPStructBanque : IBPStructBanque Interface

 IBPStructBanqueDisp = dispinterface
   ['{46BB94A9-F5A6-442D-8C5B-42D1CF3F5BA0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryStructBanque : property FactoryStructBanque 
   property FactoryStructBanque:IBPStructBanqueFactory  readonly dispid 100;
    // type : property Type 
   property type_:RibType  readonly dispid 101;
    // B_LBanque : property B_LBanque 
   property B_LBanque:Smallint dispid 102;
    // B_TBanque : property B_TBanque 
   property B_TBanque:StructBanqueFieldType dispid 103;
    // B_LGuichet : property B_LGuichet 
   property B_LGuichet:Smallint dispid 104;
    // B_TGuichet : property B_TGuichet 
   property B_TGuichet:StructBanqueFieldType dispid 105;
    // B_LCompte : property B_LCompte 
   property B_LCompte:Smallint dispid 106;
    // B_TCompte : property B_TCompte 
   property B_TCompte:StructBanqueFieldType dispid 107;
    // B_LCle : property B_LCle 
   property B_LCle:Smallint dispid 108;
    // B_TCle : property B_TCle 
   property B_TCle:StructBanqueFieldType dispid 109;
    // B_Edi : property B_Edi 
   property B_Edi:WordBool dispid 110;
    // B_Controle : property B_Controle 
   property B_Controle:StructBanqueControleRib dispid 111;
  end;


// IPMLettrer : IPMLettrer Interface

 IPMLettrer = interface(IPMProcess)
   ['{10EF176B-FC21-452C-93CA-E328D7526A16}']
   function Get_type_ : LettrageType; safecall;
   procedure Set_type_(const pVal:LettrageType); safecall;
   function Get_Lettre : WideString; safecall;
   procedure Set_Lettre(const pVal:WideString); safecall;
    // SetLettreDefault : methode SetLettreDefault 
   procedure SetLettreDefault;safecall;
    // AddEcriture : methode AddEcriture 
   procedure AddEcriture(pObj:IBOEcriture3);safecall;
    // RmvEcriture : methode RmvEcriture 
   procedure RmvEcriture(pObj:IBOEcriture3);safecall;
   function Get_ListEcritures : IBICollection; safecall;
   function Get_Debit : Double; safecall;
   function Get_Credit : Double; safecall;
   function Get_Solde : Double; safecall;
   function Get_DebitDevise : Double; safecall;
   function Get_CreditDevise : Double; safecall;
   function Get_SoldeDevise : Double; safecall;
    // type : Type 
   property type_:LettrageType read Get_type_ write Set_type_;
    // Lettre : property Lettre 
   property Lettre:WideString read Get_Lettre write Set_Lettre;
    // ListEcritures : property ListEcritures 
   property ListEcritures:IBICollection read Get_ListEcritures;
    // Debit : property Debit 
   property Debit:Double read Get_Debit;
    // Credit : property Credit 
   property Credit:Double read Get_Credit;
    // Solde : property Solde 
   property Solde:Double read Get_Solde;
    // DebitDevise : property DebitDevise 
   property DebitDevise:Double read Get_DebitDevise;
    // CreditDevise : property CreditDevise 
   property CreditDevise:Double read Get_CreditDevise;
    // SoldeDevise : property SoldeDevise 
   property SoldeDevise:Double read Get_SoldeDevise;
  end;


// IPMLettrer : IPMLettrer Interface

 IPMLettrerDisp = dispinterface
   ['{10EF176B-FC21-452C-93CA-E328D7526A16}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // SetLettreDefault : methode SetLettreDefault 
   procedure SetLettreDefault;dispid 102;
    // AddEcriture : methode AddEcriture 
   procedure AddEcriture(pObj:IBOEcriture3);dispid 103;
    // RmvEcriture : methode RmvEcriture 
   procedure RmvEcriture(pObj:IBOEcriture3);dispid 104;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // type : Type 
   property type_:LettrageType dispid 100;
    // Lettre : property Lettre 
   property Lettre:WideString dispid 101;
    // ListEcritures : property ListEcritures 
   property ListEcritures:IBICollection  readonly dispid 105;
    // Debit : property Debit 
   property Debit:Double  readonly dispid 106;
    // Credit : property Credit 
   property Credit:Double  readonly dispid 107;
    // Solde : property Solde 
   property Solde:Double  readonly dispid 108;
    // DebitDevise : property DebitDevise 
   property DebitDevise:Double  readonly dispid 109;
    // CreditDevise : property CreditDevise 
   property CreditDevise:Double  readonly dispid 110;
    // SoldeDevise : property SoldeDevise 
   property SoldeDevise:Double  readonly dispid 111;
  end;


// IBOPaysFactory : IBOPaysFactory Interface

 IBOPaysFactory = interface(IBITypeObjectFactory)
   ['{E9771CF3-E87A-497B-9C1C-8F323069758D}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(s:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(s:WideString):IBOPays;safecall;
  end;


// IBOPaysFactory : IBOPaysFactory Interface

 IBOPaysFactoryDisp = dispinterface
   ['{E9771CF3-E87A-497B-9C1C-8F323069758D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(s:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(s:WideString):IBOPays;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOPays : IBOPays Interface

 IBOPays = interface(IBIPersistObject)
   ['{9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}']
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Code : WideString; safecall;
   procedure Set_Code(const pVal:WideString); safecall;
   function Get_CodeEdi : WideString; safecall;
   procedure Set_CodeEdi(const pVal:WideString); safecall;
   function Get_Assurance : Double; safecall;
   procedure Set_Assurance(const pVal:Double); safecall;
   function Get_Transport : Double; safecall;
   procedure Set_Transport(const pVal:Double); safecall;
   function Get_CodeISO2 : WideString; safecall;
   procedure Set_CodeISO2(const pVal:WideString); safecall;
   function Get_IsSEPA : WordBool; safecall;
   procedure Set_IsSEPA(const pVal:WordBool); safecall;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Code : property Code 
   property Code:WideString read Get_Code write Set_Code;
    // CodeEdi : property CodeEdi 
   property CodeEdi:WideString read Get_CodeEdi write Set_CodeEdi;
    // Assurance : property Assurance 
   property Assurance:Double read Get_Assurance write Set_Assurance;
    // Transport : property Transport 
   property Transport:Double read Get_Transport write Set_Transport;
    // CodeISO2 : property CodeISO2 
   property CodeISO2:WideString read Get_CodeISO2 write Set_CodeISO2;
    // IsSEPA : property IsSEPA 
   property IsSEPA:WordBool read Get_IsSEPA write Set_IsSEPA;
  end;


// IBOPays : IBOPays Interface

 IBOPaysDisp = dispinterface
   ['{9FB3E9A1-4853-4B1D-BEC3-4A1AC48EEB19}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Code : property Code 
   property Code:WideString dispid 101;
    // CodeEdi : property CodeEdi 
   property CodeEdi:WideString dispid 102;
    // Assurance : property Assurance 
   property Assurance:Double dispid 103;
    // Transport : property Transport 
   property Transport:Double dispid 104;
    // CodeISO2 : property CodeISO2 
   property CodeISO2:WideString dispid 105;
    // IsSEPA : property IsSEPA 
   property IsSEPA:WordBool dispid 106;
  end;


// IBOCompteRFactory : IBOCompteRFactory Interface

 IBOCompteRFactory = interface(IBITypeObjectFactory)
   ['{527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}']
   function Get_ListOrderClassement : IBICollection; safecall;
   function Get_ListOrderType : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOCompteR;safecall;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection read Get_ListOrderClassement;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection read Get_ListOrderType;
  end;


// IBOCompteRFactory : IBOCompteRFactory Interface

 IBOCompteRFactoryDisp = dispinterface
   ['{527CFDFC-A4F2-413A-9897-23B2F7C1A6D6}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 12;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOCompteR;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderClassement : property ListOrderClassement 
   property ListOrderClassement:IBICollection  readonly dispid 10;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection  readonly dispid 11;
  end;


// IBOEcritureAAllFactory : IBOEcritureAAllFactory Interface

 IBOEcritureAAllFactory = interface(IBITypeObjectFactory)
   ['{1D871194-8500-46AB-924C-9B2548EBE099}']
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;safecall;
    // QuerySectionA : methode QuerySectionA 
   function QuerySectionA(CompteA:IBOCompteA3):IBICollection;safecall;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
  end;


// IBOEcritureAAllFactory : IBOEcritureAAllFactory Interface

 IBOEcritureAAllFactoryDisp = dispinterface
   ['{1D871194-8500-46AB-924C-9B2548EBE099}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryPlanA : methode QueryPlanA 
   function QueryPlanA(pAnalytique:IBPAnalytique3):IBICollection;dispid 10;
    // QuerySectionA : methode QuerySectionA 
   function QuerySectionA(CompteA:IBOCompteA3):IBICollection;dispid 11;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOJournalAFactory : IBOJournalAFactory Interface

 IBOJournalAFactory = interface(IBITypeObjectFactory)
   ['{6F95DCED-011E-4F1A-8284-BACBA5526DEE}']
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOJournalA;safecall;
  end;


// IBOJournalAFactory : IBOJournalAFactory Interface

 IBOJournalAFactoryDisp = dispinterface
   ['{6F95DCED-011E-4F1A-8284-BACBA5526DEE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 10;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBOJournalA;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOJournalA : IBOJournalA Interface

 IBOJournalA = interface(IBIPersistObject)
   ['{DC770506-F0B8-4523-9702-ABC21F060C0B}']
   function Get_JA_Num : WideString; safecall;
   procedure Set_JA_Num(const pVal:WideString); safecall;
   function Get_JA_Intitule : WideString; safecall;
   procedure Set_JA_Intitule(const pVal:WideString); safecall;
   function Get_JA_Sommeil : WordBool; safecall;
   procedure Set_JA_Sommeil(const pVal:WordBool); safecall;
   function Get_JA_IFRS : WordBool; safecall;
   procedure Set_JA_IFRS(const pVal:WordBool); safecall;
    // JA_Num : property JA_Num 
   property JA_Num:WideString read Get_JA_Num write Set_JA_Num;
    // JA_Intitule : property JA_Intitule 
   property JA_Intitule:WideString read Get_JA_Intitule write Set_JA_Intitule;
    // JA_Sommeil : property JA_Sommeil 
   property JA_Sommeil:WordBool read Get_JA_Sommeil write Set_JA_Sommeil;
    // JA_IFRS : property JA_IFRS 
   property JA_IFRS:WordBool read Get_JA_IFRS write Set_JA_IFRS;
  end;


// IBOJournalA : IBOJournalA Interface

 IBOJournalADisp = dispinterface
   ['{DC770506-F0B8-4523-9702-ABC21F060C0B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // JA_Num : property JA_Num 
   property JA_Num:WideString dispid 101;
    // JA_Intitule : property JA_Intitule 
   property JA_Intitule:WideString dispid 102;
    // JA_Sommeil : property JA_Sommeil 
   property JA_Sommeil:WordBool dispid 110;
    // JA_IFRS : property JA_IFRS 
   property JA_IFRS:WordBool dispid 111;
  end;


// IBOEcritureODFactory : IBOEcritureODFactory Interface

 IBOEcritureODFactory = interface(IBITypeObjectFactory)
   ['{51B2C00F-C2E3-4846-A57E-0554CAFAF01D}']
    // QueryJournal : methode QueryJournal 
   function QueryJournal(Journal:IBOJournalA;DateDe:TDateTime;DateA:TDateTime):IBICollection;safecall;
    // QueryCompte : methode QueryCompte 
   function QueryCompte(CompteG:IBOCompteG3;CompteA:IBOCompteA3):IBICollection;safecall;
  end;


// IBOEcritureODFactory : IBOEcritureODFactory Interface

 IBOEcritureODFactoryDisp = dispinterface
   ['{51B2C00F-C2E3-4846-A57E-0554CAFAF01D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryJournal : methode QueryJournal 
   function QueryJournal(Journal:IBOJournalA;DateDe:TDateTime;DateA:TDateTime):IBICollection;dispid 10;
    // QueryCompte : methode QueryCompte 
   function QueryCompte(CompteG:IBOCompteG3;CompteA:IBOCompteA3):IBICollection;dispid 15;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// ICompanies : ICompanies Interface

 ICompanies = interface(IDispatch)
   ['{D7155186-A152-452F-8D3F-5E7D0E838CF2}']
   function Get__NewEnum : IUnknown; safecall;
   function Get_Item(lIndex:Integer) : ICompany; safecall;
   function Get_Count : Integer; safecall;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown read Get__NewEnum;
    // Item : property Item 
   property Item[lIndex:Integer]:ICompany read Get_Item; default;
    // Count : property Count 
   property Count:Integer read Get_Count;
  end;


// ICompanies : ICompanies Interface

 ICompaniesDisp = dispinterface
   ['{D7155186-A152-452F-8D3F-5E7D0E838CF2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // _NewEnum : property _NewEnum 
   property _NewEnum:IUnknown  readonly dispid -4;
    // Item : property Item 
   property Item[lIndex:Integer]:ICompany  readonly dispid 0; default;
    // Count : property Count 
   property Count:Integer  readonly dispid 1;
  end;


// ICompany : ICompany Interface

 ICompany = interface(IDispatch)
   ['{37A95BCE-A845-4557-B607-2997600DCA2C}']
   function Get_Name : WideString; safecall;
   function Get_Id : WideString; safecall;
    // Name : property Name 
   property Name:WideString read Get_Name;
    // Id : property Id 
   property Id:WideString read Get_Id;
  end;


// ICompany : ICompany Interface

 ICompanyDisp = dispinterface
   ['{37A95BCE-A845-4557-B607-2997600DCA2C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Name : property Name 
   property Name:WideString  readonly dispid 1;
    // Id : property Id 
   property Id:WideString  readonly dispid 2;
  end;


// IBSCIALApplication3 : Interface fichier commercial

 IBSCIALApplication3 = interface(IBIPersistStream)
   ['{3FBE6898-EBB1-4D11-B5FF-09AE5301973B}']
   function Get_Licence : ILicence; safecall;
   function Get_Loggable : IBILoggable; safecall;
   function Get_Name : WideString; safecall;
   procedure Set_Name(const pName:WideString); safecall;
   function Get_CptaApplication : IBSCPTAApplication3; safecall;
   procedure Set_CptaApplication(const pObject:IBSCPTAApplication3); safecall;
   function Get_FactoryArticle : IBOArticleFactory3; safecall;
   function Get_FactoryFamille : IBOFamilleFactory2; safecall;
   function Get_FactoryCategorieTarif : IBPCategorieTarifFactory; safecall;
   function Get_FactoryCategorieComptaVente : IBPCategorieComptaVenteFactory; safecall;
   function Get_FactoryCategorieComptaAchat : IBPCategorieComptaAchatFactory; safecall;
   function Get_FactoryCategorieComptaStock : IBPCategorieComptaStockFactory; safecall;
   function Get_FactoryPeriodicite : IBPPeriodiciteFactory; safecall;
   function Get_FactoryExpedition : IBPExpeditionFactory3; safecall;
   function Get_FactoryConditionLivraison : IBPConditionLivraisonFactory; safecall;
   function Get_FactoryDepot : IBODepotFactory2; safecall;
   function Get_FactoryUnite : IBPUniteFactory; safecall;
   function Get_FactoryGamme : IBPGammeFactory; safecall;
   function Get_FactoryConditionnement : IBPConditionnementFactory; safecall;
   function Get_FactoryProduit : IBPProduitFactory2; safecall;
   function Get_FactoryModele : IBOModeleFactory; safecall;
   function Get_FactoryGlossaire : IBOGlossaireFactory; safecall;
   function Get_FactoryArrondi : IBITypeObjectFactory; safecall;
   function Get_FactoryDocument : IBODocumentFactory; safecall;
   function Get_FactoryDocumentStock : IBODocumentStockFactory3; safecall;
   function Get_FactoryDocumentAchat : IBODocumentAchatFactory3; safecall;
   function Get_FactoryDocumentVente : IBODocumentVenteFactory3; safecall;
   function Get_FactoryDocumentInterne : IBODocumentInterneFactory3; safecall;
   function Get_DepotPrincipal : IBODepot3; safecall;
   procedure Set_DepotPrincipal(const pObject:IBODepot3); safecall;
   function Get_FactorySoucheVente : IBISoucheFactory; safecall;
   function Get_FactorySoucheAchat : IBISoucheFactory; safecall;
   function Get_FactorySoucheInterne : IBISoucheFactory; safecall;
   function Get_FactorySoucheStock : IBISoucheFactory; safecall;
   function Get_FactoryParamDocVente : IBIParamDocFactory; safecall;
   function Get_FactoryParamDocAchat : IBIParamDocFactory; safecall;
   function Get_FactoryParamDocStock : IBIParamDocFactory; safecall;
   function Get_FactoryParamDocInterne : IBIParamDocFactory; safecall;
   function Get_FactoryBaremeCommission : IBOBaremeCommissionFactory; safecall;
   function Get_FactoryBaremeRabais : IBOBaremeRabaisFactory; safecall;
   function Get_FactoryBaremeSolde : IBOBaremeSoldeFactory; safecall;
   function Get_FactoryArticleStat : IBPArticleStatFactory; safecall;
   function Get_FactoryAgendaConfig : IBPAgendaFactory; safecall;
    // CreateProcess_Document : methode CreateProcess_Document 
   function CreateProcess_Document(DO_Type:DocumentType):IPMDocument;safecall;
    // CreateProcess_AppliquerBareme : methode CreateProcess_AppliquerBareme 
   function CreateProcess_AppliquerBareme(pDoc:IBODocumentPart3):IPMAppliquerBareme;safecall;
    // CreateProcess_ControlerQualite : methode CreateProcess_ControlerQualite 
   function CreateProcess_ControlerQualite:IPMControlerQualite;safecall;
   function Get_FactoryDocumentLigne : IBODocumentLigneAllFactory; safecall;
   function Get_FactoryBaremeRabaisFrs : IBOBaremeRabaisFactory; safecall;
   function Get_FactoryBaremeSoldeFrs : IBOBaremeSoldeFactory; safecall;
   function Get_FactoryAgenda : IBOAgendaFactory; safecall;
   function Get_FactoryRessourceBase : IBIRessourceFactory; safecall;
   function Get_FactoryRessource : IBORessourceFactory; safecall;
   function Get_FactoryRessourceCentre : IBORessourceCentreFactory; safecall;
   function Get_FactoryDossier : IBITypeObjectFactory; safecall;
   function Get_FactoryDossierParam : IBITypeObjectFactory; safecall;
    // ControlQualiteStat : methode ControlQualiteStat 
   function ControlQualiteStat(pArticle:IBOArticle3;pFournisseur:IBOFournisseur3;DateDe:TDateTime;DateA:TDateTime):IControleQualiteStat;safecall;
    // ControlQualiteStatMonoGamme : methode ControlQualiteStatMonoGamme 
   function ControlQualiteStatMonoGamme(pArtGammeEnum:IBOArticleGammeEnum3;pFournisseur:IBOFournisseur3;DateDe:TDateTime;DateA:TDateTime):IControleQualiteStat;safecall;
    // ControlQualiteStatDoubleGamme : methode ControlQualiteStatDoubleGamme 
   function ControlQualiteStatDoubleGamme(pArtGammeEnum1:IBOArticleGammeEnum3;pArtGammeEnum2:IBOArticleGammeEnum3;pFournisseur:IBOFournisseur3;DateDe:TDateTime;DateA:TDateTime):IControleQualiteStat;safecall;
   function Get_Transformation : ITransformation; safecall;
    // CreateProcess_Coliser : methode CreateProcess_Coliser 
   function CreateProcess_Coliser:IPMColiser;safecall;
    // CreateProcess_PreleverLot : methode CreateProcess_PreleverLot 
   function CreateProcess_PreleverLot:IPMPreleverLot;safecall;
    // CreateProcess_DocTransferer : methode CreateProcess_DocTransferer 
   function CreateProcess_DocTransferer:IPMDocTransferer;safecall;
   function Get_FactoryArticleDepotLot : IBOArticleDepotLotAllFactory; safecall;
    // CreateProcess_SousTotal : methode CreateProcess_SousTotal 
   function CreateProcess_SousTotal(pDoc:IBODocumentPart3):IPMDocInsererSousTotal;safecall;
    // CreateProcess_RecalculPrixCompose : methode CreateProcess_RecalculPrixCompose 
   function CreateProcess_RecalculPrixCompose(pDoc:IBODocument3):IPMDocRecalculPrixCompose;safecall;
    // CreateProcess_SortirLots : methode CreateProcess_SortirLots 
   function CreateProcess_SortirLots:IPMSortirLots;safecall;
   function Get_Companies : ICompanies; safecall;
   function Get_CompanyServer : WideString; safecall;
   procedure Set_CompanyServer(const pName:WideString); safecall;
   function Get_CompanyDatabaseName : WideString; safecall;
   procedure Set_CompanyDatabaseName(const pName:WideString); safecall;
   function Get_CompanyName : WideString; safecall;
   procedure Set_CompanyName(const pName:WideString); safecall;
    // Licence : property Licence 
   property Licence:ILicence read Get_Licence;
    // Loggable : property Loggable 
   property Loggable:IBILoggable read Get_Loggable;
    // Name : property Name 
   property Name:WideString read Get_Name write Set_Name;
    // CptaApplication : Fichier comptable 
   property CptaApplication:IBSCPTAApplication3 read Get_CptaApplication write Set_CptaApplication;
    // FactoryArticle : property FactoryArticle 
   property FactoryArticle:IBOArticleFactory3 read Get_FactoryArticle;
    // FactoryFamille : property FactoryFamille 
   property FactoryFamille:IBOFamilleFactory2 read Get_FactoryFamille;
    // FactoryCategorieTarif : property FactoryCategorieTarif 
   property FactoryCategorieTarif:IBPCategorieTarifFactory read Get_FactoryCategorieTarif;
    // FactoryCategorieComptaVente : property FactoryCategorieComptaVente 
   property FactoryCategorieComptaVente:IBPCategorieComptaVenteFactory read Get_FactoryCategorieComptaVente;
    // FactoryCategorieComptaAchat : property FactoryCategorieComptaAchat 
   property FactoryCategorieComptaAchat:IBPCategorieComptaAchatFactory read Get_FactoryCategorieComptaAchat;
    // FactoryCategorieComptaStock : property FactoryCategorieComptaStock 
   property FactoryCategorieComptaStock:IBPCategorieComptaStockFactory read Get_FactoryCategorieComptaStock;
    // FactoryPeriodicite : property FactoryPeriodicite 
   property FactoryPeriodicite:IBPPeriodiciteFactory read Get_FactoryPeriodicite;
    // FactoryExpedition : property FactoryExpedition 
   property FactoryExpedition:IBPExpeditionFactory3 read Get_FactoryExpedition;
    // FactoryConditionLivraison : property FactoryConditionLivraison 
   property FactoryConditionLivraison:IBPConditionLivraisonFactory read Get_FactoryConditionLivraison;
    // FactoryDepot : property FactoryDepot 
   property FactoryDepot:IBODepotFactory2 read Get_FactoryDepot;
    // FactoryUnite : property FactoryUnite 
   property FactoryUnite:IBPUniteFactory read Get_FactoryUnite;
    // FactoryGamme : property FactoryGamme 
   property FactoryGamme:IBPGammeFactory read Get_FactoryGamme;
    // FactoryConditionnement : property FactoryConditionnement 
   property FactoryConditionnement:IBPConditionnementFactory read Get_FactoryConditionnement;
    // FactoryProduit : property FactoryProduit 
   property FactoryProduit:IBPProduitFactory2 read Get_FactoryProduit;
    // FactoryModele : property FactoryModele 
   property FactoryModele:IBOModeleFactory read Get_FactoryModele;
    // FactoryGlossaire : property FactoryGlossaire 
   property FactoryGlossaire:IBOGlossaireFactory read Get_FactoryGlossaire;
    // FactoryArrondi : property FactoryArrondi 
   property FactoryArrondi:IBITypeObjectFactory read Get_FactoryArrondi;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory read Get_FactoryDocument;
    // FactoryDocumentStock : property FactoryDocumentStock 
   property FactoryDocumentStock:IBODocumentStockFactory3 read Get_FactoryDocumentStock;
    // FactoryDocumentAchat : property FactoryDocumentAchat 
   property FactoryDocumentAchat:IBODocumentAchatFactory3 read Get_FactoryDocumentAchat;
    // FactoryDocumentVente : property FactoryDocumentVente 
   property FactoryDocumentVente:IBODocumentVenteFactory3 read Get_FactoryDocumentVente;
    // FactoryDocumentInterne : property FactoryDocumentInterne 
   property FactoryDocumentInterne:IBODocumentInterneFactory3 read Get_FactoryDocumentInterne;
    // DepotPrincipal : Dépot principal 
   property DepotPrincipal:IBODepot3 read Get_DepotPrincipal write Set_DepotPrincipal;
    // FactorySoucheVente : property FactorySoucheVente 
   property FactorySoucheVente:IBISoucheFactory read Get_FactorySoucheVente;
    // FactorySoucheAchat : property FactorySoucheAchat 
   property FactorySoucheAchat:IBISoucheFactory read Get_FactorySoucheAchat;
    // FactorySoucheInterne : property FactorySoucheInterne 
   property FactorySoucheInterne:IBISoucheFactory read Get_FactorySoucheInterne;
    // FactorySoucheStock : property FactorySoucheStock 
   property FactorySoucheStock:IBISoucheFactory read Get_FactorySoucheStock;
    // FactoryParamDocVente : property FactoryParamDocVente 
   property FactoryParamDocVente:IBIParamDocFactory read Get_FactoryParamDocVente;
    // FactoryParamDocAchat : property FactoryParamDocAchat 
   property FactoryParamDocAchat:IBIParamDocFactory read Get_FactoryParamDocAchat;
    // FactoryParamDocStock : property FactoryParamDocStock 
   property FactoryParamDocStock:IBIParamDocFactory read Get_FactoryParamDocStock;
    // FactoryParamDocInterne : property FactoryParamDocInterne 
   property FactoryParamDocInterne:IBIParamDocFactory read Get_FactoryParamDocInterne;
    // FactoryBaremeCommission : property FactoryBaremeCommission 
   property FactoryBaremeCommission:IBOBaremeCommissionFactory read Get_FactoryBaremeCommission;
    // FactoryBaremeRabais : property FactoryBaremeRabais 
   property FactoryBaremeRabais:IBOBaremeRabaisFactory read Get_FactoryBaremeRabais;
    // FactoryBaremeSolde : property FactoryBaremeSolde 
   property FactoryBaremeSolde:IBOBaremeSoldeFactory read Get_FactoryBaremeSolde;
    // FactoryArticleStat : property FactoryArticleStat 
   property FactoryArticleStat:IBPArticleStatFactory read Get_FactoryArticleStat;
    // FactoryAgendaConfig : property FactoryAgendaConfi 
   property FactoryAgendaConfig:IBPAgendaFactory read Get_FactoryAgendaConfig;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneAllFactory read Get_FactoryDocumentLigne;
    // FactoryBaremeRabaisFrs : property FactoryBaremeRabais Fournisseur 
   property FactoryBaremeRabaisFrs:IBOBaremeRabaisFactory read Get_FactoryBaremeRabaisFrs;
    // FactoryBaremeSoldeFrs : property FactoryBaremeSolde Fournisseur 
   property FactoryBaremeSoldeFrs:IBOBaremeSoldeFactory read Get_FactoryBaremeSoldeFrs;
    // FactoryAgenda : property FactoryAgenda 
   property FactoryAgenda:IBOAgendaFactory read Get_FactoryAgenda;
    // FactoryRessourceBase : property FactoryRessourceBase 
   property FactoryRessourceBase:IBIRessourceFactory read Get_FactoryRessourceBase;
    // FactoryRessource : property FactoryRessource 
   property FactoryRessource:IBORessourceFactory read Get_FactoryRessource;
    // FactoryRessourceCentre : property FactoryRessourceCentre 
   property FactoryRessourceCentre:IBORessourceCentreFactory read Get_FactoryRessourceCentre;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory read Get_FactoryDossier;
    // FactoryDossierParam : property FactoryDossierParam 
   property FactoryDossierParam:IBITypeObjectFactory read Get_FactoryDossierParam;
    // Transformation : property Transformation 
   property Transformation:ITransformation read Get_Transformation;
    // FactoryArticleDepotLot : property FactoryArticleDepotLot 
   property FactoryArticleDepotLot:IBOArticleDepotLotAllFactory read Get_FactoryArticleDepotLot;
    // Companies : property Companies 
   property Companies:ICompanies read Get_Companies;
    // CompanyServer : property CompanyServer 
   property CompanyServer:WideString read Get_CompanyServer write Set_CompanyServer;
    // CompanyDatabaseName : property CompanyDatabaseName 
   property CompanyDatabaseName:WideString read Get_CompanyDatabaseName write Set_CompanyDatabaseName;
    // CompanyName : property CompanyName 
   property CompanyName:WideString read Get_CompanyName write Set_CompanyName;
  end;


// IBSCIALApplication3 : Interface fichier commercial

 IBSCIALApplication3Disp = dispinterface
   ['{3FBE6898-EBB1-4D11-B5FF-09AE5301973B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Open : methode Open 
   procedure Open;dispid 2;
    // Close : methode Close 
   procedure Close;dispid 3;
    // Create : methode Create 
   procedure Create;dispid 4;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 7;
    // CreateProcess_Document : methode CreateProcess_Document 
   function CreateProcess_Document(DO_Type:DocumentType):IPMDocument;dispid 100;
    // CreateProcess_AppliquerBareme : methode CreateProcess_AppliquerBareme 
   function CreateProcess_AppliquerBareme(pDoc:IBODocumentPart3):IPMAppliquerBareme;dispid 104;
    // CreateProcess_ControlerQualite : methode CreateProcess_ControlerQualite 
   function CreateProcess_ControlerQualite:IPMControlerQualite;dispid 109;
    // ControlQualiteStat : methode ControlQualiteStat 
   function ControlQualiteStat(pArticle:IBOArticle3;pFournisseur:IBOFournisseur3;DateDe:TDateTime;DateA:TDateTime):IControleQualiteStat;dispid 110;
    // ControlQualiteStatMonoGamme : methode ControlQualiteStatMonoGamme 
   function ControlQualiteStatMonoGamme(pArtGammeEnum:IBOArticleGammeEnum3;pFournisseur:IBOFournisseur3;DateDe:TDateTime;DateA:TDateTime):IControleQualiteStat;dispid 111;
    // ControlQualiteStatDoubleGamme : methode ControlQualiteStatDoubleGamme 
   function ControlQualiteStatDoubleGamme(pArtGammeEnum1:IBOArticleGammeEnum3;pArtGammeEnum2:IBOArticleGammeEnum3;pFournisseur:IBOFournisseur3;DateDe:TDateTime;DateA:TDateTime):IControleQualiteStat;dispid 112;
    // CreateProcess_Coliser : methode CreateProcess_Coliser 
   function CreateProcess_Coliser:IPMColiser;dispid 116;
    // CreateProcess_PreleverLot : methode CreateProcess_PreleverLot 
   function CreateProcess_PreleverLot:IPMPreleverLot;dispid 117;
    // CreateProcess_DocTransferer : methode CreateProcess_DocTransferer 
   function CreateProcess_DocTransferer:IPMDocTransferer;dispid 118;
    // CreateProcess_SousTotal : methode CreateProcess_SousTotal 
   function CreateProcess_SousTotal(pDoc:IBODocumentPart3):IPMDocInsererSousTotal;dispid 120;
    // CreateProcess_RecalculPrixCompose : methode CreateProcess_RecalculPrixCompose 
   function CreateProcess_RecalculPrixCompose(pDoc:IBODocument3):IPMDocRecalculPrixCompose;dispid 121;
    // CreateProcess_SortirLots : methode CreateProcess_SortirLots 
   function CreateProcess_SortirLots:IPMSortirLots;dispid 122;
    // IsOpen : property IsOpen 
   property IsOpen:WordBool  readonly dispid 1;
    // DatabaseInfo : property DatabaseInfo 
   property DatabaseInfo:IDatabaseInfo  readonly dispid 5;
    // Synchro : property Synchro 
   property Synchro:ISynchroStream  readonly dispid 6;
    // Licence : property Licence 
   property Licence:ILicence  readonly dispid 36;
    // Loggable : property Loggable 
   property Loggable:IBILoggable  readonly dispid 37;
    // Name : property Name 
   property Name:WideString dispid 10;
    // CptaApplication : Fichier comptable 
   property CptaApplication:IBSCPTAApplication3 dispid 11;
    // FactoryArticle : property FactoryArticle 
   property FactoryArticle:IBOArticleFactory3  readonly dispid 12;
    // FactoryFamille : property FactoryFamille 
   property FactoryFamille:IBOFamilleFactory2  readonly dispid 13;
    // FactoryCategorieTarif : property FactoryCategorieTarif 
   property FactoryCategorieTarif:IBPCategorieTarifFactory  readonly dispid 15;
    // FactoryCategorieComptaVente : property FactoryCategorieComptaVente 
   property FactoryCategorieComptaVente:IBPCategorieComptaVenteFactory  readonly dispid 16;
    // FactoryCategorieComptaAchat : property FactoryCategorieComptaAchat 
   property FactoryCategorieComptaAchat:IBPCategorieComptaAchatFactory  readonly dispid 17;
    // FactoryCategorieComptaStock : property FactoryCategorieComptaStock 
   property FactoryCategorieComptaStock:IBPCategorieComptaStockFactory  readonly dispid 18;
    // FactoryPeriodicite : property FactoryPeriodicite 
   property FactoryPeriodicite:IBPPeriodiciteFactory  readonly dispid 19;
    // FactoryExpedition : property FactoryExpedition 
   property FactoryExpedition:IBPExpeditionFactory3  readonly dispid 20;
    // FactoryConditionLivraison : property FactoryConditionLivraison 
   property FactoryConditionLivraison:IBPConditionLivraisonFactory  readonly dispid 21;
    // FactoryDepot : property FactoryDepot 
   property FactoryDepot:IBODepotFactory2  readonly dispid 22;
    // FactoryUnite : property FactoryUnite 
   property FactoryUnite:IBPUniteFactory  readonly dispid 23;
    // FactoryGamme : property FactoryGamme 
   property FactoryGamme:IBPGammeFactory  readonly dispid 24;
    // FactoryConditionnement : property FactoryConditionnement 
   property FactoryConditionnement:IBPConditionnementFactory  readonly dispid 25;
    // FactoryProduit : property FactoryProduit 
   property FactoryProduit:IBPProduitFactory2  readonly dispid 26;
    // FactoryModele : property FactoryModele 
   property FactoryModele:IBOModeleFactory  readonly dispid 27;
    // FactoryGlossaire : property FactoryGlossaire 
   property FactoryGlossaire:IBOGlossaireFactory  readonly dispid 28;
    // FactoryArrondi : property FactoryArrondi 
   property FactoryArrondi:IBITypeObjectFactory  readonly dispid 29;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 30;
    // FactoryDocumentStock : property FactoryDocumentStock 
   property FactoryDocumentStock:IBODocumentStockFactory3  readonly dispid 31;
    // FactoryDocumentAchat : property FactoryDocumentAchat 
   property FactoryDocumentAchat:IBODocumentAchatFactory3  readonly dispid 32;
    // FactoryDocumentVente : property FactoryDocumentVente 
   property FactoryDocumentVente:IBODocumentVenteFactory3  readonly dispid 33;
    // FactoryDocumentInterne : property FactoryDocumentInterne 
   property FactoryDocumentInterne:IBODocumentInterneFactory3  readonly dispid 34;
    // DepotPrincipal : Dépot principal 
   property DepotPrincipal:IBODepot3 dispid 38;
    // FactorySoucheVente : property FactorySoucheVente 
   property FactorySoucheVente:IBISoucheFactory  readonly dispid 39;
    // FactorySoucheAchat : property FactorySoucheAchat 
   property FactorySoucheAchat:IBISoucheFactory  readonly dispid 40;
    // FactorySoucheInterne : property FactorySoucheInterne 
   property FactorySoucheInterne:IBISoucheFactory  readonly dispid 41;
    // FactorySoucheStock : property FactorySoucheStock 
   property FactorySoucheStock:IBISoucheFactory  readonly dispid 42;
    // FactoryParamDocVente : property FactoryParamDocVente 
   property FactoryParamDocVente:IBIParamDocFactory  readonly dispid 43;
    // FactoryParamDocAchat : property FactoryParamDocAchat 
   property FactoryParamDocAchat:IBIParamDocFactory  readonly dispid 44;
    // FactoryParamDocStock : property FactoryParamDocStock 
   property FactoryParamDocStock:IBIParamDocFactory  readonly dispid 45;
    // FactoryParamDocInterne : property FactoryParamDocInterne 
   property FactoryParamDocInterne:IBIParamDocFactory  readonly dispid 46;
    // FactoryBaremeCommission : property FactoryBaremeCommission 
   property FactoryBaremeCommission:IBOBaremeCommissionFactory  readonly dispid 47;
    // FactoryBaremeRabais : property FactoryBaremeRabais 
   property FactoryBaremeRabais:IBOBaremeRabaisFactory  readonly dispid 48;
    // FactoryBaremeSolde : property FactoryBaremeSolde 
   property FactoryBaremeSolde:IBOBaremeSoldeFactory  readonly dispid 49;
    // FactoryArticleStat : property FactoryArticleStat 
   property FactoryArticleStat:IBPArticleStatFactory  readonly dispid 50;
    // FactoryAgendaConfig : property FactoryAgendaConfi 
   property FactoryAgendaConfig:IBPAgendaFactory  readonly dispid 51;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneAllFactory  readonly dispid 101;
    // FactoryBaremeRabaisFrs : property FactoryBaremeRabais Fournisseur 
   property FactoryBaremeRabaisFrs:IBOBaremeRabaisFactory  readonly dispid 102;
    // FactoryBaremeSoldeFrs : property FactoryBaremeSolde Fournisseur 
   property FactoryBaremeSoldeFrs:IBOBaremeSoldeFactory  readonly dispid 103;
    // FactoryAgenda : property FactoryAgenda 
   property FactoryAgenda:IBOAgendaFactory  readonly dispid 105;
    // FactoryRessourceBase : property FactoryRessourceBase 
   property FactoryRessourceBase:IBIRessourceFactory  readonly dispid 106;
    // FactoryRessource : property FactoryRessource 
   property FactoryRessource:IBORessourceFactory  readonly dispid 107;
    // FactoryRessourceCentre : property FactoryRessourceCentre 
   property FactoryRessourceCentre:IBORessourceCentreFactory  readonly dispid 108;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory  readonly dispid 113;
    // FactoryDossierParam : property FactoryDossierParam 
   property FactoryDossierParam:IBITypeObjectFactory  readonly dispid 114;
    // Transformation : property Transformation 
   property Transformation:ITransformation  readonly dispid 115;
    // FactoryArticleDepotLot : property FactoryArticleDepotLot 
   property FactoryArticleDepotLot:IBOArticleDepotLotAllFactory  readonly dispid 119;
    // Companies : property Companies 
   property Companies:ICompanies  readonly dispid 123;
    // CompanyServer : property CompanyServer 
   property CompanyServer:WideString dispid 150;
    // CompanyDatabaseName : property CompanyDatabaseName 
   property CompanyDatabaseName:WideString dispid 151;
    // CompanyName : property CompanyName 
   property CompanyName:WideString dispid 152;
  end;


// IBPCategorieComptaVenteFactory : IBPCategorieComptaVenteFactory Interface

 IBPCategorieComptaVenteFactory = interface(IBITypeObjectFactory)
   ['{E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieComptaVente;safecall;
  end;


// IBPCategorieComptaVenteFactory : IBPCategorieComptaVenteFactory Interface

 IBPCategorieComptaVenteFactoryDisp = dispinterface
   ['{E1F2CBDB-6CF9-4A33-A007-3E0FE21496B7}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieComptaVente;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPCategorieComptaVente : IBPCategorieComptaVente Interface

 IBPCategorieComptaVente = interface(IBICategorieCompta)
   ['{3D471238-B9A3-4593-B33F-D0D9F38EBFAF}']
   function Get_FactoryCategorieComptaVente : IBPCategorieComptaVenteFactory; safecall;
    // FactoryCategorieComptaVente : property FactoryCategorieComptaVente 
   property FactoryCategorieComptaVente:IBPCategorieComptaVenteFactory read Get_FactoryCategorieComptaVente;
  end;


// IBPCategorieComptaVente : IBPCategorieComptaVente Interface

 IBPCategorieComptaVenteDisp = dispinterface
   ['{3D471238-B9A3-4593-B33F-D0D9F38EBFAF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // FactoryCategorieComptaVente : property FactoryCategorieComptaVente 
   property FactoryCategorieComptaVente:IBPCategorieComptaVenteFactory  readonly dispid 110;
  end;


// IBPCategorieComptaAchatFactory : IBPCategorieComptaAchatFactory Interface

 IBPCategorieComptaAchatFactory = interface(IBITypeObjectFactory)
   ['{266979EE-CBF1-4268-A9F6-4B409EFC0A71}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieComptaAchat;safecall;
  end;


// IBPCategorieComptaAchatFactory : IBPCategorieComptaAchatFactory Interface

 IBPCategorieComptaAchatFactoryDisp = dispinterface
   ['{266979EE-CBF1-4268-A9F6-4B409EFC0A71}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieComptaAchat;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPCategorieComptaAchat : IBPCategorieComptaAchat Interface

 IBPCategorieComptaAchat = interface(IBICategorieCompta)
   ['{49897345-3D8F-4F09-99C7-CCBFD73969C9}']
   function Get_FactoryCategorieComptaAchat : IBPCategorieComptaAchatFactory; safecall;
    // FactoryCategorieComptaAchat : property FactoryCategorieComptaAchat 
   property FactoryCategorieComptaAchat:IBPCategorieComptaAchatFactory read Get_FactoryCategorieComptaAchat;
  end;


// IBPCategorieComptaAchat : IBPCategorieComptaAchat Interface

 IBPCategorieComptaAchatDisp = dispinterface
   ['{49897345-3D8F-4F09-99C7-CCBFD73969C9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // FactoryCategorieComptaAchat : property FactoryCategorieComptaAchat 
   property FactoryCategorieComptaAchat:IBPCategorieComptaAchatFactory  readonly dispid 110;
  end;


// IBPCategorieComptaStockFactory : IBPCategorieComptaStockFactory Interface

 IBPCategorieComptaStockFactory = interface(IBITypeObjectFactory)
   ['{EC38C20D-EE75-4087-B42B-09FF3EE8AE43}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieComptaStock;safecall;
  end;


// IBPCategorieComptaStockFactory : IBPCategorieComptaStockFactory Interface

 IBPCategorieComptaStockFactoryDisp = dispinterface
   ['{EC38C20D-EE75-4087-B42B-09FF3EE8AE43}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPCategorieComptaStock;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPCategorieComptaStock : IBPCategorieComptaStock Interface

 IBPCategorieComptaStock = interface(IBICategorieCompta)
   ['{892665D1-CA5A-40FD-A33B-C17B150C20DD}']
   function Get_FactoryCategorieComptaStock : IBPCategorieComptaStockFactory; safecall;
    // FactoryCategorieComptaStock : property FactoryCategorieComptaStock 
   property FactoryCategorieComptaStock:IBPCategorieComptaStockFactory read Get_FactoryCategorieComptaStock;
  end;


// IBPCategorieComptaStock : IBPCategorieComptaStock Interface

 IBPCategorieComptaStockDisp = dispinterface
   ['{892665D1-CA5A-40FD-A33B-C17B150C20DD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // FactoryCategorieComptaStock : property FactoryCategorieComptaStock 
   property FactoryCategorieComptaStock:IBPCategorieComptaStockFactory  readonly dispid 110;
  end;


// IBODocumentStockFactory3 : IBODocumentStockFactory3 Interface

 IBODocumentStockFactory3 = interface(IBITypeObjectFactory)
   ['{DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}']
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentStock3;safecall;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;safecall;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;safecall;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;safecall;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentStock3;safecall;
    // QueryDepotOrderType : methode QueryDepotOrderType 
   function QueryDepotOrderType(Depot:IBODepot3):IBICollection;safecall;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;safecall;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
  end;


// IBODocumentStockFactory3 : IBODocumentStockFactory3 Interface

 IBODocumentStockFactory3Disp = dispinterface
   ['{DD1ADDDD-EDDF-4FB5-A614-7BF54A5E9198}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentStock3;dispid 20;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;dispid 21;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;dispid 22;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;dispid 23;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentStock3;dispid 24;
    // QueryDepotOrderType : methode QueryDepotOrderType 
   function QueryDepotOrderType(Depot:IBODepot3):IBICollection;dispid 25;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 26;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;dispid 27;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 28;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODocumentStock3 : IBODocumentStock3 Interface

 IBODocumentStock3 = interface(IBODocument3)
   ['{D53827CA-0296-4948-AD6C-3C334145FDBD}']
   function Get_FactoryDocumentStock : IBODocumentStockFactory3; safecall;
   function Get_DepotOrigine : IBODepot3; safecall;
   function Get_DepotDestination : IBODepot3; safecall;
   procedure Set_DepotOrigine(const pDepot:IBODepot3); safecall;
   procedure Set_DepotDestination(const pDepot:IBODepot3); safecall;
   function Get_DO_DateFabrication : TDateTime; safecall;
   procedure Set_DO_DateFabrication(const pVal:TDateTime); safecall;
    // FactoryDocumentStock : property FactoryDocumentStock 
   property FactoryDocumentStock:IBODocumentStockFactory3 read Get_FactoryDocumentStock;
    // DepotOrigine : property DepotOrigine 
   property DepotOrigine:IBODepot3 read Get_DepotOrigine write Set_DepotOrigine;
    // DepotDestination : property DepotDestination 
   property DepotDestination:IBODepot3 read Get_DepotDestination write Set_DepotDestination;
    // DO_DateFabrication : property DO_DateFabrication 
   property DO_DateFabrication:TDateTime read Get_DO_DateFabrication write Set_DO_DateFabrication;
  end;


// IBODocumentStock3 : IBODocumentStock3 Interface

 IBODocumentStock3Disp = dispinterface
   ['{D53827CA-0296-4948-AD6C-3C334145FDBD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;dispid 115;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 100;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 101;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 104;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 105;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString dispid 106;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 107;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 108;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 dispid 109;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool  readonly dispid 110;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime  readonly dispid 111;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool  readonly dispid 113;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 114;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 116;
    // Souche : property Souche 
   property Souche:IBISouche dispid 117;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 dispid 161;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double  readonly dispid 118;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory  readonly dispid 119;
    // FactoryDocumentStock : property FactoryDocumentStock 
   property FactoryDocumentStock:IBODocumentStockFactory3  readonly dispid 150;
    // DepotOrigine : property DepotOrigine 
   property DepotOrigine:IBODepot3 dispid 152;
    // DepotDestination : property DepotDestination 
   property DepotDestination:IBODepot3 dispid 153;
    // DO_DateFabrication : property DO_DateFabrication 
   property DO_DateFabrication:TDateTime dispid 154;
  end;


// IBODocumentAchatFactory3 : IBODocumentAchatFactory3 Interface

 IBODocumentAchatFactory3 = interface(IBITypeObjectFactory)
   ['{17DB8F80-222C-49EA-9424-53620A49EF4A}']
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentAchat3;safecall;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;safecall;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;safecall;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;safecall;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentAchat3;safecall;
    // CreateFacture : methode CreateFacture 
   function CreateFacture(DO_Provenance:DocumentProvenanceType):IBODocumentAchat3;safecall;
    // QueryTiersOrderDate : methode QueryTiersOrderDate 
   function QueryTiersOrderDate(Fourniss:IBOFournisseur3):IBICollection;safecall;
    // QueryTiersTypeOrderDate : methode QueryTiersTypeOrderDate 
   function QueryTiersTypeOrderDate(Fourniss:IBOFournisseur3;DO_Type:DocumentType):IBICollection;safecall;
    // QueryCollaborateurType : methode QueryCollaborateurType 
   function QueryCollaborateurType(Collab:IBOCollaborateur;DO_Type:DocumentType):IBICollection;safecall;
    // QueryTiersDateOrderDate : methode QueryTiersDateOrderDate 
   function QueryTiersDateOrderDate(Fourniss:IBOFournisseur3;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // QueryTiersTypeDateOrderDate : methode QueryTiersTypeDateOrderDate 
   function QueryTiersTypeDateOrderDate(Fourniss:IBOFournisseur3;DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;safecall;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
  end;


// IBODocumentAchatFactory3 : IBODocumentAchatFactory3 Interface

 IBODocumentAchatFactory3Disp = dispinterface
   ['{17DB8F80-222C-49EA-9424-53620A49EF4A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentAchat3;dispid 20;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;dispid 21;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;dispid 22;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;dispid 23;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentAchat3;dispid 24;
    // CreateFacture : methode CreateFacture 
   function CreateFacture(DO_Provenance:DocumentProvenanceType):IBODocumentAchat3;dispid 25;
    // QueryTiersOrderDate : methode QueryTiersOrderDate 
   function QueryTiersOrderDate(Fourniss:IBOFournisseur3):IBICollection;dispid 26;
    // QueryTiersTypeOrderDate : methode QueryTiersTypeOrderDate 
   function QueryTiersTypeOrderDate(Fourniss:IBOFournisseur3;DO_Type:DocumentType):IBICollection;dispid 27;
    // QueryCollaborateurType : methode QueryCollaborateurType 
   function QueryCollaborateurType(Collab:IBOCollaborateur;DO_Type:DocumentType):IBICollection;dispid 28;
    // QueryTiersDateOrderDate : methode QueryTiersDateOrderDate 
   function QueryTiersDateOrderDate(Fourniss:IBOFournisseur3;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 29;
    // QueryTiersTypeDateOrderDate : methode QueryTiersTypeDateOrderDate 
   function QueryTiersTypeDateOrderDate(Fourniss:IBOFournisseur3;DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 30;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 31;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;dispid 32;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 33;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODocumentPart3 : IBODocumentPart3 Interface

 IBODocumentPart3 = interface(IBODocument3)
   ['{589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}']
   function Get_FactoryDocumentPart : IBITypeObjectFactory; safecall;
   function Get_Tiers : IBOTiersPart3; safecall;
   procedure Set_Tiers(const pTiers:IBOTiersPart3); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_DO_Cours : Double; safecall;
   procedure Set_DO_Cours(const pVal:Double); safecall;
   function Get_TiersPayeur : IBOTiersPart3; safecall;
   procedure Set_TiersPayeur(const pTiers:IBOTiersPart3); safecall;
   function Get_Expedition : IBPExpedition3; safecall;
   procedure Set_Expedition(const pExpedition:IBPExpedition3); safecall;
   function Get_DO_TxEscompte : Double; safecall;
   procedure Set_DO_TxEscompte(const pVal:Double); safecall;
   function Get_DO_Reliquat : WordBool; safecall;
   function Get_DO_Coord(sElt:Smallint) : WideString; safecall;
   procedure Set_DO_Coord(const sElt:Smallint; const parDO_Coord:WideString); safecall;
   function Get_DO_DateLivr : TDateTime; safecall;
   procedure Set_DO_DateLivr(const pVal:TDateTime); safecall;
   function Get_ConditionLivraison : IBPConditionLivraison; safecall;
   procedure Set_ConditionLivraison(const pConditionLivraison:IBPConditionLivraison); safecall;
   function Get_DO_Transaction : Smallint; safecall;
   procedure Set_DO_Transaction(const pVal:Smallint); safecall;
   function Get_DO_Langue : LangueType; safecall;
   procedure Set_DO_Langue(const pVal:LangueType); safecall;
   function Get_DO_Ecart : Double; safecall;
   procedure Set_DO_Ecart(const pVal:Double); safecall;
   function Get_DO_Regime : Smallint; safecall;
   procedure Set_DO_Regime(const pVal:Smallint); safecall;
   function Get_DO_Souche : Smallint; safecall;
   procedure Set_DO_Souche(const pVal:Smallint); safecall;
   function Get_CategorieCompta : IBICategorieCompta; safecall;
   procedure Set_CategorieCompta(const pCategorieCompta:IBICategorieCompta); safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pCompteG:IBOCompteG3); safecall;
   function Get_DO_Statut : DocumentStatutType; safecall;
   procedure Set_DO_Statut(const pVal:DocumentStatutType); safecall;
   function Get_DO_Provenance : DocumentProvenanceType; safecall;
   function Get_CompteAIFRS : IBOCompteA3; safecall;
   procedure Set_CompteAIFRS(const pCompteA:IBOCompteA3); safecall;
   function Get_DO_Contact : WideString; safecall;
   procedure Set_DO_Contact(const pVal:WideString); safecall;
   function Get_FraisExpedition : Double; safecall;
   procedure Set_FraisExpedition(const pVal:Double); safecall;
   function Get_DO_DateLivrRealisee : TDateTime; safecall;
   procedure Set_DO_DateLivrRealisee(const pVal:TDateTime); safecall;
    // FactoryDocumentPart : property FactoryDocumentPart 
   property FactoryDocumentPart:IBITypeObjectFactory read Get_FactoryDocumentPart;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3 read Get_Tiers write Set_Tiers;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // DO_Cours : property DO_Cours 
   property DO_Cours:Double read Get_DO_Cours write Set_DO_Cours;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 read Get_TiersPayeur write Set_TiersPayeur;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 read Get_Expedition write Set_Expedition;
    // DO_TxEscompte : property DO_TxEscompte 
   property DO_TxEscompte:Double read Get_DO_TxEscompte write Set_DO_TxEscompte;
    // DO_Reliquat : property DO_Reliquat 
   property DO_Reliquat:WordBool read Get_DO_Reliquat;
    // DO_Coord : property DO_Coord 
   property DO_Coord[sElt:Smallint]:WideString read Get_DO_Coord write Set_DO_Coord;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime read Get_DO_DateLivr write Set_DO_DateLivr;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison read Get_ConditionLivraison write Set_ConditionLivraison;
    // DO_Transaction : property DO_Transaction 
   property DO_Transaction:Smallint read Get_DO_Transaction write Set_DO_Transaction;
    // DO_Langue : property DO_Langue 
   property DO_Langue:LangueType read Get_DO_Langue write Set_DO_Langue;
    // DO_Ecart : property DO_Ecart 
   property DO_Ecart:Double read Get_DO_Ecart write Set_DO_Ecart;
    // DO_Regime : property DO_Regime 
   property DO_Regime:Smallint read Get_DO_Regime write Set_DO_Regime;
    // DO_Souche : property DO_Souche 
   property DO_Souche:Smallint read Get_DO_Souche write Set_DO_Souche;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta read Get_CategorieCompta write Set_CategorieCompta;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // DO_Statut : property DO_Statut 
   property DO_Statut:DocumentStatutType read Get_DO_Statut write Set_DO_Statut;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType read Get_DO_Provenance;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 read Get_CompteAIFRS write Set_CompteAIFRS;
    // DO_Contact : property DO_Contact 
   property DO_Contact:WideString read Get_DO_Contact write Set_DO_Contact;
    // FraisExpedition : property FraisExpedition 
   property FraisExpedition:Double read Get_FraisExpedition write Set_FraisExpedition;
    // DO_DateLivrRealisee : property DO_DateLivrRealisee 
   property DO_DateLivrRealisee:TDateTime read Get_DO_DateLivrRealisee write Set_DO_DateLivrRealisee;
  end;


// IBODocumentPart3 : IBODocumentPart3 Interface

 IBODocumentPart3Disp = dispinterface
   ['{589F1EF5-419A-46BB-BA5E-EE64B9FD1E39}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;dispid 115;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 100;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 101;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 104;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 105;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString dispid 106;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 107;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 108;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 dispid 109;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool  readonly dispid 110;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime  readonly dispid 111;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool  readonly dispid 113;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 114;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 116;
    // Souche : property Souche 
   property Souche:IBISouche dispid 117;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 dispid 161;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double  readonly dispid 118;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory  readonly dispid 119;
    // FactoryDocumentPart : property FactoryDocumentPart 
   property FactoryDocumentPart:IBITypeObjectFactory  readonly dispid 150;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3 dispid 154;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 155;
    // DO_Cours : property DO_Cours 
   property DO_Cours:Double dispid 156;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 157;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 dispid 158;
    // DO_TxEscompte : property DO_TxEscompte 
   property DO_TxEscompte:Double dispid 159;
    // DO_Reliquat : property DO_Reliquat 
   property DO_Reliquat:WordBool  readonly dispid 160;
    // DO_Coord : property DO_Coord 
   property DO_Coord[sElt:Smallint]:WideString dispid 163;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 164;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison dispid 165;
    // DO_Transaction : property DO_Transaction 
   property DO_Transaction:Smallint dispid 166;
    // DO_Langue : property DO_Langue 
   property DO_Langue:LangueType dispid 167;
    // DO_Ecart : property DO_Ecart 
   property DO_Ecart:Double dispid 168;
    // DO_Regime : property DO_Regime 
   property DO_Regime:Smallint dispid 169;
    // DO_Souche : property DO_Souche 
   property DO_Souche:Smallint dispid 170;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 171;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 172;
    // DO_Statut : property DO_Statut 
   property DO_Statut:DocumentStatutType dispid 173;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType  readonly dispid 174;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 175;
    // DO_Contact : property DO_Contact 
   property DO_Contact:WideString dispid 176;
    // FraisExpedition : property FraisExpedition 
   property FraisExpedition:Double dispid 177;
    // DO_DateLivrRealisee : property DO_DateLivrRealisee 
   property DO_DateLivrRealisee:TDateTime dispid 178;
  end;


// IBODocumentAchat3 : IBODocumentAchat3 Interface

 IBODocumentAchat3 = interface(IBODocumentPart3)
   ['{A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}']
   function Get_FactoryDocumentAchat : IBODocumentAchatFactory3; safecall;
   function Get_FactoryDocumentEcheance : IBITypeObjectFactory; safecall;
   function Get_FactoryDocumentAcompte : IBITypeObjectFactory; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
    // SetDefaultFournisseur : methode SetDefaultFournisseur 
   procedure SetDefaultFournisseur(pFournisseur:IBOFournisseur3);safecall;
   function Get_Valorisation : IDocValorisation; safecall;
   function Get_DO_Motif : WideString; safecall;
   procedure Set_DO_Motif(const pVal:WideString); safecall;
   function Get_ConditionPaiement : DocumentConditionPaiementType; safecall;
   procedure Set_ConditionPaiement(const pVal:DocumentConditionPaiementType); safecall;
   function Get_ModeleReglement : IBOModeleReglement; safecall;
   procedure Set_ModeleReglement(const pModele:IBOModeleReglement); safecall;
    // FactoryDocumentAchat : property FactoryDocumentAchat 
   property FactoryDocumentAchat:IBODocumentAchatFactory3 read Get_FactoryDocumentAchat;
    // FactoryDocumentEcheance : property FactoryDocumentEcheance 
   property FactoryDocumentEcheance:IBITypeObjectFactory read Get_FactoryDocumentEcheance;
    // FactoryDocumentAcompte : property FactoryDocumentAcompte 
   property FactoryDocumentAcompte:IBITypeObjectFactory read Get_FactoryDocumentAcompte;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur;
    // Valorisation : property Valorisation 
   property Valorisation:IDocValorisation read Get_Valorisation;
    // DO_Motif : property DO_Motif 
   property DO_Motif:WideString read Get_DO_Motif write Set_DO_Motif;
    // ConditionPaiement : property ConditionPaiement 
   property ConditionPaiement:DocumentConditionPaiementType read Get_ConditionPaiement write Set_ConditionPaiement;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement read Get_ModeleReglement write Set_ModeleReglement;
  end;

// IBODocumentAchat3 : IBODocumentAchat3 Interface

 IBODocumentAchat3Disp = dispinterface
   ['{A7E0B84E-3FE1-4190-9BC4-D9C92EE6D1D0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;dispid 115;
    // SetDefaultFournisseur : methode SetDefaultFournisseur 
   procedure SetDefaultFournisseur(pFournisseur:IBOFournisseur3);dispid 253;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 100;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 101;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 104;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 105;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString dispid 106;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 107;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 108;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 dispid 109;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool  readonly dispid 110;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime  readonly dispid 111;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool  readonly dispid 113;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 114;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 116;
    // Souche : property Souche 
   property Souche:IBISouche dispid 117;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 dispid 161;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double  readonly dispid 118;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory  readonly dispid 119;
    // FactoryDocumentPart : property FactoryDocumentPart 
   property FactoryDocumentPart:IBITypeObjectFactory  readonly dispid 150;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3 dispid 154;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 155;
    // DO_Cours : property DO_Cours 
   property DO_Cours:Double dispid 156;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 157;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 dispid 158;
    // DO_TxEscompte : property DO_TxEscompte 
   property DO_TxEscompte:Double dispid 159;
    // DO_Reliquat : property DO_Reliquat 
   property DO_Reliquat:WordBool  readonly dispid 160;
    // DO_Coord : property DO_Coord 
   property DO_Coord[sElt:Smallint]:WideString dispid 163;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 164;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison dispid 165;
    // DO_Transaction : property DO_Transaction 
   property DO_Transaction:Smallint dispid 166;
    // DO_Langue : property DO_Langue 
   property DO_Langue:LangueType dispid 167;
    // DO_Ecart : property DO_Ecart 
   property DO_Ecart:Double dispid 168;
    // DO_Regime : property DO_Regime 
   property DO_Regime:Smallint dispid 169;
    // DO_Souche : property DO_Souche 
   property DO_Souche:Smallint dispid 170;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 171;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 172;
    // DO_Statut : property DO_Statut 
   property DO_Statut:DocumentStatutType dispid 173;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType  readonly dispid 174;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 175;
    // DO_Contact : property DO_Contact 
   property DO_Contact:WideString dispid 176;
    // FraisExpedition : property FraisExpedition 
   property FraisExpedition:Double dispid 177;
    // DO_DateLivrRealisee : property DO_DateLivrRealisee 
   property DO_DateLivrRealisee:TDateTime dispid 178;
    // FactoryDocumentAchat : property FactoryDocumentAchat 
   property FactoryDocumentAchat:IBODocumentAchatFactory3  readonly dispid 250;
    // FactoryDocumentEcheance : property FactoryDocumentEcheance 
   property FactoryDocumentEcheance:IBITypeObjectFactory  readonly dispid 254;
    // FactoryDocumentAcompte : property FactoryDocumentAcompte 
   property FactoryDocumentAcompte:IBITypeObjectFactory  readonly dispid 255;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3  readonly dispid 252;
    // Valorisation : property Valorisation 
   property Valorisation:IDocValorisation  readonly dispid 256;
    // DO_Motif : property DO_Motif 
   property DO_Motif:WideString dispid 257;
    // ConditionPaiement : property ConditionPaiement 
   property ConditionPaiement:DocumentConditionPaiementType dispid 269;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement dispid 270;
  end;


// IBODocumentVenteFactory3 : IBODocumentVenteFactory3 Interface

 IBODocumentVenteFactory3 = interface(IBITypeObjectFactory)
   ['{E79A30D6-C657-4190-A3EB-BD04C8B48310}']
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentVente3;safecall;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;safecall;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;safecall;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;safecall;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentVente3;safecall;
    // CreateFacture : methode CreateFacture 
   function CreateFacture(DO_Provenance:DocumentProvenanceType):IBODocumentVente3;safecall;
    // QueryTiersOrderDate : methode QueryTiersOrderDate 
   function QueryTiersOrderDate(Client:IBOClient3):IBICollection;safecall;
    // QueryTiersTypeOrderDate : methode QueryTiersTypeOrderDate 
   function QueryTiersTypeOrderDate(Client:IBOClient3;DO_Type:DocumentType):IBICollection;safecall;
    // QueryCollaborateurType : methode QueryCollaborateurType 
   function QueryCollaborateurType(Collab:IBOCollaborateur;DO_Type:DocumentType):IBICollection;safecall;
    // QueryTiersDateOrderDate : methode QueryTiersDateOrderDate 
   function QueryTiersDateOrderDate(Client:IBOClient3;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // QueryTiersTypeDateOrderDate : methode QueryTiersTypeDateOrderDate 
   function QueryTiersTypeDateOrderDate(Client:IBOClient3;DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;safecall;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
  end;


// IBODocumentVenteFactory3 : IBODocumentVenteFactory3 Interface

 IBODocumentVenteFactory3Disp = dispinterface
   ['{E79A30D6-C657-4190-A3EB-BD04C8B48310}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentVente3;dispid 20;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;dispid 21;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;dispid 22;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;dispid 23;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentVente3;dispid 24;
    // CreateFacture : methode CreateFacture 
   function CreateFacture(DO_Provenance:DocumentProvenanceType):IBODocumentVente3;dispid 25;
    // QueryTiersOrderDate : methode QueryTiersOrderDate 
   function QueryTiersOrderDate(Client:IBOClient3):IBICollection;dispid 26;
    // QueryTiersTypeOrderDate : methode QueryTiersTypeOrderDate 
   function QueryTiersTypeOrderDate(Client:IBOClient3;DO_Type:DocumentType):IBICollection;dispid 27;
    // QueryCollaborateurType : methode QueryCollaborateurType 
   function QueryCollaborateurType(Collab:IBOCollaborateur;DO_Type:DocumentType):IBICollection;dispid 28;
    // QueryTiersDateOrderDate : methode QueryTiersDateOrderDate 
   function QueryTiersDateOrderDate(Client:IBOClient3;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 29;
    // QueryTiersTypeDateOrderDate : methode QueryTiersTypeDateOrderDate 
   function QueryTiersTypeDateOrderDate(Client:IBOClient3;DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 30;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 31;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;dispid 32;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 33;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODocumentVente3 : IBODocumentVente3 Interface

 IBODocumentVente3 = interface(IBODocumentPart3)
   ['{85C765D6-E89D-4F0F-BB30-D49EB3A97660}']
   function Get_FactoryDocumentVente : IBODocumentVenteFactory3; safecall;
   function Get_FactoryDocumentEcheance : IBITypeObjectFactory; safecall;
   function Get_FactoryDocumentAcompte : IBITypeObjectFactory; safecall;
   function Get_Client : IBOClient3; safecall;
   function Get_LieuLivraison : IBOClientLivraison3; safecall;
   procedure Set_LieuLivraison(const pClientLivraison:IBOClientLivraison3); safecall;
   function Get_Periodicite : IBPPeriodicite; safecall;
   procedure Set_Periodicite(const pPeriodicite:IBPPeriodicite); safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
   procedure Set_CategorieTarif(const pCategorieTarif:IBPCategorieTarif); safecall;
   function Get_DO_Colisage : Smallint; safecall;
   procedure Set_DO_Colisage(const pVal:Smallint); safecall;
   function Get_Unite : IBPUnite; safecall;
   procedure Set_Unite(const pUnite:IBPUnite); safecall;
   function Get_DO_BLFact : WordBool; safecall;
   procedure Set_DO_BLFact(const pVal:WordBool); safecall;
   function Get_DO_NbFacture : Smallint; safecall;
   procedure Set_DO_NbFacture(const pVal:Smallint); safecall;
   function Get_DO_NoWeb : WideString; safecall;
   procedure Set_DO_NoWeb(const pVal:WideString); safecall;
   function Get_DO_Cloture : WordBool; safecall;
    // SetDefaultClient : methode SetDefaultClient 
   procedure SetDefaultClient(pClient:IBOClient3);safecall;
   function Get_Valorisation : IDocValorisation; safecall;
   function Get_DO_Motif : WideString; safecall;
   procedure Set_DO_Motif(const pVal:WideString); safecall;
   function Get_CentraleAchat : IBOClient3; safecall;
   procedure Set_CentraleAchat(const pClient:IBOClient3); safecall;
   function Get_ConditionPaiement : DocumentConditionPaiementType; safecall;
   procedure Set_ConditionPaiement(const pVal:DocumentConditionPaiementType); safecall;
   function Get_ModeleReglement : IBOModeleReglement; safecall;
   procedure Set_ModeleReglement(const pModele:IBOModeleReglement); safecall;
   function Get_DO_Valide : WordBool; safecall;
    // FactoryDocumentVente : property FactoryDocumentVente 
   property FactoryDocumentVente:IBODocumentVenteFactory3 read Get_FactoryDocumentVente;
    // FactoryDocumentEcheance : property FactoryDocumentEcheance 
   property FactoryDocumentEcheance:IBITypeObjectFactory read Get_FactoryDocumentEcheance;
    // FactoryDocumentAcompte : property FactoryDocumentAcompte 
   property FactoryDocumentAcompte:IBITypeObjectFactory read Get_FactoryDocumentAcompte;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
    // LieuLivraison : property LieuLivraison 
   property LieuLivraison:IBOClientLivraison3 read Get_LieuLivraison write Set_LieuLivraison;
    // Periodicite : property Periodicite 
   property Periodicite:IBPPeriodicite read Get_Periodicite write Set_Periodicite;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
    // DO_Colisage : property DO_Colisage 
   property DO_Colisage:Smallint read Get_DO_Colisage write Set_DO_Colisage;
    // Unite : property Unite 
   property Unite:IBPUnite read Get_Unite write Set_Unite;
    // DO_BLFact : property DO_BLFact 
   property DO_BLFact:WordBool read Get_DO_BLFact write Set_DO_BLFact;
    // DO_NbFacture : property DO_NbFacture 
   property DO_NbFacture:Smallint read Get_DO_NbFacture write Set_DO_NbFacture;
    // DO_NoWeb : property DO_NoWeb 
   property DO_NoWeb:WideString read Get_DO_NoWeb write Set_DO_NoWeb;
    // DO_Cloture : property DO_Cloture 
   property DO_Cloture:WordBool read Get_DO_Cloture;
    // Valorisation : property Valorisation 
   property Valorisation:IDocValorisation read Get_Valorisation;
    // DO_Motif : property DO_Motif 
   property DO_Motif:WideString read Get_DO_Motif write Set_DO_Motif;
    // CentraleAchat : property CentraleAchat 
   property CentraleAchat:IBOClient3 read Get_CentraleAchat write Set_CentraleAchat;
    // ConditionPaiement : property ConditionPaiement 
   property ConditionPaiement:DocumentConditionPaiementType read Get_ConditionPaiement write Set_ConditionPaiement;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement read Get_ModeleReglement write Set_ModeleReglement;
    // DO_Valide : property DO_Valide 
   property DO_Valide:WordBool read Get_DO_Valide;
  end;


// IBODocumentVente3 : IBODocumentVente3 Interface

 IBODocumentVente3Disp = dispinterface
   ['{85C765D6-E89D-4F0F-BB30-D49EB3A97660}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;dispid 115;
    // SetDefaultClient : methode SetDefaultClient 
   procedure SetDefaultClient(pClient:IBOClient3);dispid 262;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 100;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 101;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 104;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 105;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString dispid 106;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 107;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 108;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 dispid 109;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool  readonly dispid 110;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime  readonly dispid 111;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool  readonly dispid 113;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 114;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 116;
    // Souche : property Souche 
   property Souche:IBISouche dispid 117;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 dispid 161;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double  readonly dispid 118;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory  readonly dispid 119;
    // FactoryDocumentPart : property FactoryDocumentPart 
   property FactoryDocumentPart:IBITypeObjectFactory  readonly dispid 150;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3 dispid 154;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 155;
    // DO_Cours : property DO_Cours 
   property DO_Cours:Double dispid 156;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 157;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 dispid 158;
    // DO_TxEscompte : property DO_TxEscompte 
   property DO_TxEscompte:Double dispid 159;
    // DO_Reliquat : property DO_Reliquat 
   property DO_Reliquat:WordBool  readonly dispid 160;
    // DO_Coord : property DO_Coord 
   property DO_Coord[sElt:Smallint]:WideString dispid 163;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 164;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison dispid 165;
    // DO_Transaction : property DO_Transaction 
   property DO_Transaction:Smallint dispid 166;
    // DO_Langue : property DO_Langue 
   property DO_Langue:LangueType dispid 167;
    // DO_Ecart : property DO_Ecart 
   property DO_Ecart:Double dispid 168;
    // DO_Regime : property DO_Regime 
   property DO_Regime:Smallint dispid 169;
    // DO_Souche : property DO_Souche 
   property DO_Souche:Smallint dispid 170;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 171;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 172;
    // DO_Statut : property DO_Statut 
   property DO_Statut:DocumentStatutType dispid 173;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType  readonly dispid 174;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 175;
    // DO_Contact : property DO_Contact 
   property DO_Contact:WideString dispid 176;
    // FraisExpedition : property FraisExpedition 
   property FraisExpedition:Double dispid 177;
    // DO_DateLivrRealisee : property DO_DateLivrRealisee 
   property DO_DateLivrRealisee:TDateTime dispid 178;
    // FactoryDocumentVente : property FactoryDocumentVente 
   property FactoryDocumentVente:IBODocumentVenteFactory3  readonly dispid 250;
    // FactoryDocumentEcheance : property FactoryDocumentEcheance 
   property FactoryDocumentEcheance:IBITypeObjectFactory  readonly dispid 263;
    // FactoryDocumentAcompte : property FactoryDocumentAcompte 
   property FactoryDocumentAcompte:IBITypeObjectFactory  readonly dispid 264;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 252;
    // LieuLivraison : property LieuLivraison 
   property LieuLivraison:IBOClientLivraison3 dispid 253;
    // Periodicite : property Periodicite 
   property Periodicite:IBPPeriodicite dispid 255;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif dispid 256;
    // DO_Colisage : property DO_Colisage 
   property DO_Colisage:Smallint dispid 257;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 258;
    // DO_BLFact : property DO_BLFact 
   property DO_BLFact:WordBool dispid 259;
    // DO_NbFacture : property DO_NbFacture 
   property DO_NbFacture:Smallint dispid 260;
    // DO_NoWeb : property DO_NoWeb 
   property DO_NoWeb:WideString dispid 261;
    // DO_Cloture : property DO_Cloture 
   property DO_Cloture:WordBool  readonly dispid 265;
    // Valorisation : property Valorisation 
   property Valorisation:IDocValorisation  readonly dispid 266;
    // DO_Motif : property DO_Motif 
   property DO_Motif:WideString dispid 267;
    // CentraleAchat : property CentraleAchat 
   property CentraleAchat:IBOClient3 dispid 268;
    // ConditionPaiement : property ConditionPaiement 
   property ConditionPaiement:DocumentConditionPaiementType dispid 269;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement dispid 270;
    // DO_Valide : property DO_Valide 
   property DO_Valide:WordBool  readonly dispid 271;
  end;


// IBODocumentInterneFactory3 : IBODocumentInterneFactory3 Interface

 IBODocumentInterneFactory3 = interface(IBITypeObjectFactory)
   ['{D8C4D565-F813-4DCD-A57A-87B9033B8174}']
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentInterne3;safecall;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;safecall;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;safecall;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;safecall;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentInterne3;safecall;
    // QueryTiersOrderDate : methode QueryTiersOrderDate 
   function QueryTiersOrderDate(Client:IBOClient3):IBICollection;safecall;
    // QueryTiersTypeOrderDate : methode QueryTiersTypeOrderDate 
   function QueryTiersTypeOrderDate(Client:IBOClient3;DO_Type:DocumentType):IBICollection;safecall;
    // QueryCollaborateurType : methode QueryCollaborateurType 
   function QueryCollaborateurType(Collab:IBOCollaborateur;DO_Type:DocumentType):IBICollection;safecall;
    // QueryTiersDateOrderDate : methode QueryTiersDateOrderDate 
   function QueryTiersDateOrderDate(Client:IBOClient3;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // QueryTiersTypeDateOrderDate : methode QueryTiersTypeDateOrderDate 
   function QueryTiersTypeDateOrderDate(Client:IBOClient3;DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;safecall;
  end;


// IBODocumentInterneFactory3 : IBODocumentInterneFactory3 Interface

 IBODocumentInterneFactory3Disp = dispinterface
   ['{D8C4D565-F813-4DCD-A57A-87B9033B8174}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // CreateType : methode CreateType 
   function CreateType(DO_Type:DocumentType):IBODocumentInterne3;dispid 20;
    // QueryTypeOrderPiece : methode QueryTypeOrderPiece 
   function QueryTypeOrderPiece(DO_Type:DocumentType):IBICollection;dispid 21;
    // QueryTypePieceOrderPiece : methode QueryTypePieceOrderPiece 
   function QueryTypePieceOrderPiece(DO_Type:DocumentType;sDO_PieceDe:WideString;sDO_PieceA:WideString):IBICollection;dispid 22;
    // ExistPiece : methode ExistPiece 
   function ExistPiece(DO_Type:DocumentType;sDO_Piece:WideString):WordBool;dispid 23;
    // ReadPiece : methode ReadPiece 
   function ReadPiece(DO_Type:DocumentType;sDO_Piece:WideString):IBODocumentInterne3;dispid 24;
    // QueryTiersOrderDate : methode QueryTiersOrderDate 
   function QueryTiersOrderDate(Client:IBOClient3):IBICollection;dispid 25;
    // QueryTiersTypeOrderDate : methode QueryTiersTypeOrderDate 
   function QueryTiersTypeOrderDate(Client:IBOClient3;DO_Type:DocumentType):IBICollection;dispid 26;
    // QueryCollaborateurType : methode QueryCollaborateurType 
   function QueryCollaborateurType(Collab:IBOCollaborateur;DO_Type:DocumentType):IBICollection;dispid 27;
    // QueryTiersDateOrderDate : methode QueryTiersDateOrderDate 
   function QueryTiersDateOrderDate(Client:IBOClient3;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 28;
    // QueryTiersTypeDateOrderDate : methode QueryTiersTypeDateOrderDate 
   function QueryTiersTypeDateOrderDate(Client:IBOClient3;DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 29;
    // QueryTypeDateOrderPiece : methode QueryTypeDateOrderPiece 
   function QueryTypeDateOrderPiece(DO_Type:DocumentType;DateDeb:TDateTime;DateFin:TDateTime):IBICollection;dispid 30;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBODocumentInterne3 : IBODocumentInterne3 Interface

 IBODocumentInterne3 = interface(IBODocumentPart3)
   ['{7767F876-4462-45C7-84F6-6F6A28B347DA}']
   function Get_FactoryDocumentInterne : IBODocumentInterneFactory3; safecall;
   function Get_Client : IBOClient3; safecall;
   function Get_LieuLivraison : IBOClientLivraison3; safecall;
   procedure Set_LieuLivraison(const pClientLivraison:IBOClientLivraison3); safecall;
   function Get_Periodicite : IBPPeriodicite; safecall;
   procedure Set_Periodicite(const pPeriodicite:IBPPeriodicite); safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
   procedure Set_CategorieTarif(const pCategorieTarif:IBPCategorieTarif); safecall;
   function Get_DO_NbFacture : Smallint; safecall;
   procedure Set_DO_NbFacture(const pVal:Smallint); safecall;
    // SetDefaultClient : methode SetDefaultClient 
   procedure SetDefaultClient(pClient:IBOClient3);safecall;
   function Get_CentraleAchat : IBOClient3; safecall;
   procedure Set_CentraleAchat(const pClient:IBOClient3); safecall;
    // FactoryDocumentInterne : property FactoryDocumentInterne 
   property FactoryDocumentInterne:IBODocumentInterneFactory3 read Get_FactoryDocumentInterne;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
    // LieuLivraison : property LieuLivraison 
   property LieuLivraison:IBOClientLivraison3 read Get_LieuLivraison write Set_LieuLivraison;
    // Periodicite : property Periodicite 
   property Periodicite:IBPPeriodicite read Get_Periodicite write Set_Periodicite;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
    // DO_NbFacture : property DO_NbFacture 
   property DO_NbFacture:Smallint read Get_DO_NbFacture write Set_DO_NbFacture;
    // CentraleAchat : property CentraleAchat 
   property CentraleAchat:IBOClient3 read Get_CentraleAchat write Set_CentraleAchat;
  end;


// IBODocumentInterne3 : IBODocumentInterne3 Interface

 IBODocumentInterne3Disp = dispinterface
   ['{7767F876-4462-45C7-84F6-6F6A28B347DA}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultDO_Piece : methode SetDefaultDO_Piece 
   procedure SetDefaultDO_Piece;dispid 115;
    // SetDefaultClient : methode SetDefaultClient 
   procedure SetDefaultClient(pClient:IBOClient3);dispid 257;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocument : property FactoryDocument 
   property FactoryDocument:IBODocumentFactory  readonly dispid 100;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 101;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 104;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 105;
    // DO_Piece : property DO_Piece 
   property DO_Piece:WideString dispid 106;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 107;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 108;
    // DepotStockage : property DepotStockage 
   property DepotStockage:IBODepot3 dispid 109;
    // DO_Imprim : property DO_Imprim 
   property DO_Imprim:WordBool  readonly dispid 110;
    // DO_Heure : property DO_Heure 
   property DO_Heure:TDateTime  readonly dispid 111;
    // DO_Transfere : property DO_Transfere 
   property DO_Transfere:WordBool  readonly dispid 113;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 114;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 116;
    // Souche : property Souche 
   property Souche:IBISouche dispid 117;
    // CompteA : property CompteA : Code Affaire 
   property CompteA:IBOCompteA3 dispid 161;
    // DO_TotalHT : property DO_TotalHT 
   property DO_TotalHT:Double  readonly dispid 118;
    // FactoryDocumentMedia : property FactoryDocumentMedia 
   property FactoryDocumentMedia:IBITypeObjectFactory  readonly dispid 119;
    // FactoryDocumentPart : property FactoryDocumentPart 
   property FactoryDocumentPart:IBITypeObjectFactory  readonly dispid 150;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3 dispid 154;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 155;
    // DO_Cours : property DO_Cours 
   property DO_Cours:Double dispid 156;
    // TiersPayeur : property TiersPayeur 
   property TiersPayeur:IBOTiersPart3 dispid 157;
    // Expedition : property Expedition 
   property Expedition:IBPExpedition3 dispid 158;
    // DO_TxEscompte : property DO_TxEscompte 
   property DO_TxEscompte:Double dispid 159;
    // DO_Reliquat : property DO_Reliquat 
   property DO_Reliquat:WordBool  readonly dispid 160;
    // DO_Coord : property DO_Coord 
   property DO_Coord[sElt:Smallint]:WideString dispid 163;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 164;
    // ConditionLivraison : property ConditionLivraison 
   property ConditionLivraison:IBPConditionLivraison dispid 165;
    // DO_Transaction : property DO_Transaction 
   property DO_Transaction:Smallint dispid 166;
    // DO_Langue : property DO_Langue 
   property DO_Langue:LangueType dispid 167;
    // DO_Ecart : property DO_Ecart 
   property DO_Ecart:Double dispid 168;
    // DO_Regime : property DO_Regime 
   property DO_Regime:Smallint dispid 169;
    // DO_Souche : property DO_Souche 
   property DO_Souche:Smallint dispid 170;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 171;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 172;
    // DO_Statut : property DO_Statut 
   property DO_Statut:DocumentStatutType dispid 173;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType  readonly dispid 174;
    // CompteAIFRS : property CompteAIFRS 
   property CompteAIFRS:IBOCompteA3 dispid 175;
    // DO_Contact : property DO_Contact 
   property DO_Contact:WideString dispid 176;
    // FraisExpedition : property FraisExpedition 
   property FraisExpedition:Double dispid 177;
    // DO_DateLivrRealisee : property DO_DateLivrRealisee 
   property DO_DateLivrRealisee:TDateTime dispid 178;
    // FactoryDocumentInterne : property FactoryDocumentInterne 
   property FactoryDocumentInterne:IBODocumentInterneFactory3  readonly dispid 250;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 251;
    // LieuLivraison : property LieuLivraison 
   property LieuLivraison:IBOClientLivraison3 dispid 252;
    // Periodicite : property Periodicite 
   property Periodicite:IBPPeriodicite dispid 254;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif dispid 255;
    // DO_NbFacture : property DO_NbFacture 
   property DO_NbFacture:Smallint dispid 256;
    // CentraleAchat : property CentraleAchat 
   property CentraleAchat:IBOClient3 dispid 258;
  end;


// IBISoucheFactory : IBISoucheFactory Interface

 IBISoucheFactory = interface(IBITypeObjectFactory)
   ['{9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBISouche;safecall;
    // QuerySoucheValide : methode QuerySoucheValide 
   function QuerySoucheValide:IBICollection;safecall;
  end;


// IBISoucheFactory : IBISoucheFactory Interface

 IBISoucheFactoryDisp = dispinterface
   ['{9E13020C-7A1B-4696-9CB8-CCB24B4CC2CD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBISouche;dispid 11;
    // QuerySoucheValide : methode QuerySoucheValide 
   function QuerySoucheValide:IBICollection;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBIParamDocFactory : IBIParamDocFactory Interface

 IBIParamDocFactory = interface(IBITypeObjectFactory)
   ['{F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBIParamDoc;safecall;
    // ReadTypeDocument : methode ReadTypeDocument 
   function ReadTypeDocument(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType):IBIParamDoc;safecall;
  end;


// IBIParamDocFactory : IBIParamDocFactory Interface

 IBIParamDocFactoryDisp = dispinterface
   ['{F11ADFA4-73B9-4DB2-BB5C-7AB2485DCA7B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBIParamDoc;dispid 11;
    // ReadTypeDocument : methode ReadTypeDocument 
   function ReadTypeDocument(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType):IBIParamDoc;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOBaremeCommissionFactory : IBOBaremeCommissionFactory Interface

 IBOBaremeCommissionFactory = interface(IBITypeObjectFactory)
   ['{0B7E40B4-FDE0-4513-955F-AF64B3C24863}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOBaremeCommission;safecall;
    // QueryApplicableDate : methode QueryApplicableDate 
   function QueryApplicableDate(dVal:TDateTime):IBICollection;safecall;
    // QueryApplicableArticleDate : methode QueryApplicableArticleDate 
   function QueryApplicableArticleDate(pArticle:IBOArticle3;dVal:TDateTime):IBICollection;safecall;
  end;


// IBOBaremeCommissionFactory : IBOBaremeCommissionFactory Interface

 IBOBaremeCommissionFactoryDisp = dispinterface
   ['{0B7E40B4-FDE0-4513-955F-AF64B3C24863}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOBaremeCommission;dispid 11;
    // QueryApplicableDate : methode QueryApplicableDate 
   function QueryApplicableDate(dVal:TDateTime):IBICollection;dispid 12;
    // QueryApplicableArticleDate : methode QueryApplicableArticleDate 
   function QueryApplicableArticleDate(pArticle:IBOArticle3;dVal:TDateTime):IBICollection;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOBaremeCommission : IBOBaremeCommission Interface

 IBOBaremeCommission = interface(IBIPersistObject)
   ['{58690C03-8166-406A-920B-A3BE8A726585}']
   function Get_FactoryBaremeCommission : IBOBaremeCommissionFactory; safecall;
   function Get_FactoryBaremeCommissionQte : IBITypeObjectFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_DateDebut : TDateTime; safecall;
   procedure Set_DateDebut(const pVal:TDateTime); safecall;
   function Get_DateFin : TDateTime; safecall;
   procedure Set_DateFin(const pVal:TDateTime); safecall;
   function Get_Interesse : BaremeCommissionInteresse; safecall;
   procedure Set_Interesse(const pVal:BaremeCommissionInteresse); safecall;
   function Get_Objectif : BaremeCommissionObjectif; safecall;
   procedure Set_Objectif(const pVal:BaremeCommissionObjectif); safecall;
   function Get_Base : BaremeCommissionBase; safecall;
   procedure Set_Base(const pVal:BaremeCommissionBase); safecall;
   function Get_Domaine : BaremeCommissionDomaine; safecall;
   procedure Set_Domaine(const pVal:BaremeCommissionDomaine); safecall;
   function Get_Calcul : BaremeCommissionCalcul; safecall;
   procedure Set_Calcul(const pVal:BaremeCommissionCalcul); safecall;
    // FactoryBaremeCommission : property FactoryBaremeCommission 
   property FactoryBaremeCommission:IBOBaremeCommissionFactory read Get_FactoryBaremeCommission;
    // FactoryBaremeCommissionQte : property FactoryBaremeCommissionQte 
   property FactoryBaremeCommissionQte:IBITypeObjectFactory read Get_FactoryBaremeCommissionQte;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime read Get_DateDebut write Set_DateDebut;
    // DateFin : property DateFin 
   property DateFin:TDateTime read Get_DateFin write Set_DateFin;
    // Interesse : property Interesse 
   property Interesse:BaremeCommissionInteresse read Get_Interesse write Set_Interesse;
    // Objectif : property Objectif 
   property Objectif:BaremeCommissionObjectif read Get_Objectif write Set_Objectif;
    // Base : property Base 
   property Base:BaremeCommissionBase read Get_Base write Set_Base;
    // Domaine : property Domaine 
   property Domaine:BaremeCommissionDomaine read Get_Domaine write Set_Domaine;
    // Calcul : property Calcul 
   property Calcul:BaremeCommissionCalcul read Get_Calcul write Set_Calcul;
  end;


// IBOBaremeCommission : IBOBaremeCommission Interface

 IBOBaremeCommissionDisp = dispinterface
   ['{58690C03-8166-406A-920B-A3BE8A726585}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryBaremeCommission : property FactoryBaremeCommission 
   property FactoryBaremeCommission:IBOBaremeCommissionFactory  readonly dispid 100;
    // FactoryBaremeCommissionQte : property FactoryBaremeCommissionQte 
   property FactoryBaremeCommissionQte:IBITypeObjectFactory  readonly dispid 101;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 102;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime dispid 103;
    // DateFin : property DateFin 
   property DateFin:TDateTime dispid 104;
    // Interesse : property Interesse 
   property Interesse:BaremeCommissionInteresse dispid 105;
    // Objectif : property Objectif 
   property Objectif:BaremeCommissionObjectif dispid 106;
    // Base : property Base 
   property Base:BaremeCommissionBase dispid 107;
    // Domaine : property Domaine 
   property Domaine:BaremeCommissionDomaine dispid 108;
    // Calcul : property Calcul 
   property Calcul:BaremeCommissionCalcul dispid 109;
  end;


// IBOBaremeRabaisFactory : IBOBaremeRabaisFactory Interface

 IBOBaremeRabaisFactory = interface(IBITypeObjectFactory)
   ['{F54C7FDE-C060-4583-BACC-5590E613993C}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOBaremeRabais;safecall;
    // QueryApplicableDate : methode QueryApplicableDate 
   function QueryApplicableDate(dVal:TDateTime):IBICollection;safecall;
    // QueryApplicableArticleDate : methode QueryApplicableArticleDate 
   function QueryApplicableArticleDate(pArticle:IBOArticle3;dVal:TDateTime):IBICollection;safecall;
  end;


// IBOBaremeRabaisFactory : IBOBaremeRabaisFactory Interface

 IBOBaremeRabaisFactoryDisp = dispinterface
   ['{F54C7FDE-C060-4583-BACC-5590E613993C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBOBaremeRabais;dispid 11;
    // QueryApplicableDate : methode QueryApplicableDate 
   function QueryApplicableDate(dVal:TDateTime):IBICollection;dispid 12;
    // QueryApplicableArticleDate : methode QueryApplicableArticleDate 
   function QueryApplicableArticleDate(pArticle:IBOArticle3;dVal:TDateTime):IBICollection;dispid 13;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBOBaremeRabais : IBOBaremeRabais Interface

 IBOBaremeRabais = interface(IBIPersistObject)
   ['{61F8D58F-51E5-4B50-8D34-542D2FD72883}']
   function Get_FactoryBaremeRabais : IBOBaremeRabaisFactory; safecall;
   function Get_FactoryBaremeRabaisQte : IBITypeObjectFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_DateDebut : TDateTime; safecall;
   procedure Set_DateDebut(const pVal:TDateTime); safecall;
   function Get_DateFin : TDateTime; safecall;
   procedure Set_DateFin(const pVal:TDateTime); safecall;
   function Get_Objectif : BaremeRabaisObjectif; safecall;
   procedure Set_Objectif(const pVal:BaremeRabaisObjectif); safecall;
   function Get_Calcul : BaremeRabaisCalcul; safecall;
   procedure Set_Calcul(const pVal:BaremeRabaisCalcul); safecall;
   function Get_ArticleRemise : IBOArticle3; safecall;
   procedure Set_ArticleRemise(const pObj:IBOArticle3); safecall;
   function Get_type_ : BaremeRabaisType; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
   procedure Set_Fournisseur(const pObject:IBOFournisseur3); safecall;
    // FactoryBaremeRabais : property FactoryBaremeRabais 
   property FactoryBaremeRabais:IBOBaremeRabaisFactory read Get_FactoryBaremeRabais;
    // FactoryBaremeRabaisQte : property FactoryBaremeRabaisQte 
   property FactoryBaremeRabaisQte:IBITypeObjectFactory read Get_FactoryBaremeRabaisQte;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime read Get_DateDebut write Set_DateDebut;
    // DateFin : property DateFin 
   property DateFin:TDateTime read Get_DateFin write Set_DateFin;
    // Objectif : property Objectif 
   property Objectif:BaremeRabaisObjectif read Get_Objectif write Set_Objectif;
    // Calcul : property Calcul 
   property Calcul:BaremeRabaisCalcul read Get_Calcul write Set_Calcul;
    // ArticleRemise : property ArticleRemise 
   property ArticleRemise:IBOArticle3 read Get_ArticleRemise write Set_ArticleRemise;
    // type : property Type 
   property type_:BaremeRabaisType read Get_type_;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
  end;


// IBOBaremeRabais : IBOBaremeRabais Interface

 IBOBaremeRabaisDisp = dispinterface
   ['{61F8D58F-51E5-4B50-8D34-542D2FD72883}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryBaremeRabais : property FactoryBaremeRabais 
   property FactoryBaremeRabais:IBOBaremeRabaisFactory  readonly dispid 100;
    // FactoryBaremeRabaisQte : property FactoryBaremeRabaisQte 
   property FactoryBaremeRabaisQte:IBITypeObjectFactory  readonly dispid 101;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 102;
    // DateDebut : property DateDebut 
   property DateDebut:TDateTime dispid 103;
    // DateFin : property DateFin 
   property DateFin:TDateTime dispid 104;
    // Objectif : property Objectif 
   property Objectif:BaremeRabaisObjectif dispid 105;
    // Calcul : property Calcul 
   property Calcul:BaremeRabaisCalcul dispid 106;
    // ArticleRemise : property ArticleRemise 
   property ArticleRemise:IBOArticle3 dispid 107;
    // type : property Type 
   property type_:BaremeRabaisType  readonly dispid 108;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 dispid 109;
  end;


// IBPArticleStatFactory : IBPArticleStatFactory Interface

 IBPArticleStatFactory = interface(IBITypeObjectFactory)
   ['{E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPArticleStat;safecall;
  end;


// IBPArticleStatFactory : IBPArticleStatFactory Interface

 IBPArticleStatFactoryDisp = dispinterface
   ['{E8A78219-AC9D-4DDD-9E6D-D7C930F51A8D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPArticleStat;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPArticleStat : IBPArticleStat Interface

 IBPArticleStat = interface(IBIPersistObject)
   ['{24ADFA38-BC1F-4932-9565-470BA40243AF}']
   function Get_FactoryArticleStat : IBPArticleStatFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Enums : IBIValuesInsertable; safecall;
    // FactoryArticleStat : property FactoryArticleStat 
   property FactoryArticleStat:IBPArticleStatFactory read Get_FactoryArticleStat;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable read Get_Enums;
  end;


// IBPArticleStat : IBPArticleStat Interface

 IBPArticleStatDisp = dispinterface
   ['{24ADFA38-BC1F-4932-9565-470BA40243AF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleStat : property FactoryArticleStat 
   property FactoryArticleStat:IBPArticleStatFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable  readonly dispid 102;
  end;


// IBPAgendaFactory : IBPAgendaFactory Interface

 IBPAgendaFactory = interface(IBITypeObjectFactory)
   ['{C2534118-2BAB-47FA-8CF1-A40A9D587D33}']
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;safecall;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPAgenda;safecall;
  end;


// IBPAgendaFactory : IBPAgendaFactory Interface

 IBPAgendaFactoryDisp = dispinterface
   ['{C2534118-2BAB-47FA-8CF1-A40A9D587D33}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistIntitule : methode ExistIntitule 
   function ExistIntitule(sIntitule:WideString):WordBool;dispid 10;
    // ReadIntitule : methode ReadIntitule 
   function ReadIntitule(sIntitule:WideString):IBPAgenda;dispid 11;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBPAgenda : IBPAgenda Interface

 IBPAgenda = interface(IBIPersistObject)
   ['{9DD61766-76EA-4C2D-8137-FAA080DB0F8A}']
   function Get_FactoryAgenda : IBPAgendaFactory; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_type_ : AgendaTypeInteresse; safecall;
   procedure Set_type_(const pVal:AgendaTypeInteresse); safecall;
   function Get_Indisponible : WordBool; safecall;
   procedure Set_Indisponible(const pVal:WordBool); safecall;
   function Get_Enums : IBIValuesInsertable; safecall;
    // FactoryAgenda : property FactoryAgendaConfig 
   property FactoryAgenda:IBPAgendaFactory read Get_FactoryAgenda;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // type : property Type 
   property type_:AgendaTypeInteresse read Get_type_ write Set_type_;
    // Indisponible : Rend la ressource indisponible 
   property Indisponible:WordBool read Get_Indisponible write Set_Indisponible;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable read Get_Enums;
  end;


// IBPAgenda : IBPAgenda Interface

 IBPAgendaDisp = dispinterface
   ['{9DD61766-76EA-4C2D-8137-FAA080DB0F8A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryAgenda : property FactoryAgendaConfig 
   property FactoryAgenda:IBPAgendaFactory  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // type : property Type 
   property type_:AgendaTypeInteresse dispid 102;
    // Indisponible : Rend la ressource indisponible 
   property Indisponible:WordBool dispid 103;
    // Enums : property Enums 
   property Enums:IBIValuesInsertable  readonly dispid 104;
  end;


// IPMDocument : IPMDocument Interface

 IPMDocument = interface(IPMProcess)
   ['{4B1DFF26-1018-4458-9499-C4B84FC548B2}']
   function Get_Document : IBODocument3; safecall;
   function Get_DocumentResult : IBODocument3; safecall;
    // AddArticle : methode AddArticle 
   function AddArticle(pArt:IBOArticle3;DL_Qte:Double):IBODocumentLigne3;safecall;
    // AddArticleReference : methode AddArticleReference 
   function AddArticleReference(sRef:WideString;Qte:Double):IBODocumentLigne3;safecall;
    // AddArticleMonoGamme : methode AddArticleMonoGamme 
   function AddArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double):IBODocumentLigne3;safecall;
    // AddArticleDoubleGamme : methode AddArticleDoubleGamme 
   function AddArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double):IBODocumentLigne3;safecall;
    // AddArticleConditionnement : methode AddArticleConditionnement 
   function AddArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double):IBODocumentLigne3;safecall;
    // Document : property Document 
   property Document:IBODocument3 read Get_Document;
    // DocumentResult : property DocumentResult 
   property DocumentResult:IBODocument3 read Get_DocumentResult;
  end;


// IPMDocument : IPMDocument Interface

 IPMDocumentDisp = dispinterface
   ['{4B1DFF26-1018-4458-9499-C4B84FC548B2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // AddArticle : methode AddArticle 
   function AddArticle(pArt:IBOArticle3;DL_Qte:Double):IBODocumentLigne3;dispid 112;
    // AddArticleReference : methode AddArticleReference 
   function AddArticleReference(sRef:WideString;Qte:Double):IBODocumentLigne3;dispid 113;
    // AddArticleMonoGamme : methode AddArticleMonoGamme 
   function AddArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double):IBODocumentLigne3;dispid 114;
    // AddArticleDoubleGamme : methode AddArticleDoubleGamme 
   function AddArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double):IBODocumentLigne3;dispid 115;
    // AddArticleConditionnement : methode AddArticleConditionnement 
   function AddArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double):IBODocumentLigne3;dispid 116;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 100;
    // DocumentResult : property DocumentResult 
   property DocumentResult:IBODocument3  readonly dispid 101;
  end;


// IPMAppliquerBareme : IPMAppliquerBareme Interface

 IPMAppliquerBareme = interface(IPMProcess)
   ['{791D12AB-8EAA-4BDA-971C-A04BC9326C48}']
   function Get_Document : IBODocumentPart3; safecall;
   procedure Set_Document(const pDocument:IBODocumentPart3); safecall;
    // Document : Document 
   property Document:IBODocumentPart3 read Get_Document write Set_Document;
  end;


// IPMAppliquerBareme : IPMAppliquerBareme Interface

 IPMAppliquerBaremeDisp = dispinterface
   ['{791D12AB-8EAA-4BDA-971C-A04BC9326C48}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // Document : Document 
   property Document:IBODocumentPart3 dispid 100;
  end;


// IPMControlerQualite : IPMControlerQualite Interface

 IPMControlerQualite = interface(IPMProcess)
   ['{42F7A6E0-7123-434D-B9B8-28F081E90D04}']
   function Get_Domaine : DomaineType; safecall;
   procedure Set_Domaine(const pVal:DomaineType); safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pDepot:IBODepot3); safecall;
   function Get_DateValidation : TDateTime; safecall;
   procedure Set_DateValidation(const pVal:TDateTime); safecall;
   function Get_PeriodDO_Date : IDateTimePeriod; safecall;
   procedure Set_PeriodDO_Date(const pTimePeriod:IDateTimePeriod); safecall;
   function Get_PeriodDO_DateLivraison : IDateTimePeriod; safecall;
   procedure Set_PeriodDO_DateLivraison(const pTimePeriod:IDateTimePeriod); safecall;
   function Get_TypeDocumentRetour : DocumentType; safecall;
   procedure Set_TypeDocumentRetour(const pVal:DocumentType); safecall;
   function Get_DO_RefOut : WideString; safecall;
   procedure Set_DO_RefOut(const pVal:WideString); safecall;
   function Get_Controleur : IBOCollaborateur; safecall;
   procedure Set_Controleur(const pCollaborateur:IBOCollaborateur); safecall;
    // QueryLigneEmplacement : methode QueryLigneEmplacement 
   function QueryLigneEmplacement:IBICollection;safecall;
    // Valider : methode Valider 
   function Valider(LigneEmpl:IBODocumentLigneEmplacement;Qte:Double):IPMControlerQualiteInfo;safecall;
    // Retourner : methode Retourner 
   function Retourner(LigneEmpl:IBODocumentLigneEmplacement;Qte:Double;sMotifRetour:WideString):IPMControlerQualiteInfo;safecall;
    // MettreRebut : methode MettreRebut 
   function MettreRebut(LigneEmpl:IBODocumentLigneEmplacement;Qte:Double;sMotifRebut:WideString):IPMControlerQualiteInfo;safecall;
    // RemoveControl : methode RemoveControl 
   procedure RemoveControl(LigneEmpl:IBODocumentLigneEmplacement);safecall;
   function Get_Control(LigneEmpl:IBODocumentLigneEmplacement) : IPMControlerQualiteInfo; safecall;
   function Get_ListMouvementTransfertOut : IBICollection; safecall;
   function Get_ListMouvementSortieOut : IBICollection; safecall;
   function Get_ListRetourOut : IBICollection; safecall;
    // Domaine : property Domaine 
   property Domaine:DomaineType read Get_Domaine write Set_Domaine;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // DateValidation : property DateValidation 
   property DateValidation:TDateTime read Get_DateValidation write Set_DateValidation;
    // PeriodDO_Date : property PeriodDO_Date 
   property PeriodDO_Date:IDateTimePeriod read Get_PeriodDO_Date write Set_PeriodDO_Date;
    // PeriodDO_DateLivraison : property PeriodDO_DateLivraison 
   property PeriodDO_DateLivraison:IDateTimePeriod read Get_PeriodDO_DateLivraison write Set_PeriodDO_DateLivraison;
    // TypeDocumentRetour : property TypeDocumentRetour 
   property TypeDocumentRetour:DocumentType read Get_TypeDocumentRetour write Set_TypeDocumentRetour;
    // DO_RefOut : property DO_RefOut 
   property DO_RefOut:WideString read Get_DO_RefOut write Set_DO_RefOut;
    // Controleur : property Controleur 
   property Controleur:IBOCollaborateur read Get_Controleur write Set_Controleur;
    // Control : property Control 
   property Control[LigneEmpl:IBODocumentLigneEmplacement]:IPMControlerQualiteInfo read Get_Control;
    // ListMouvementTransfertOut : Collection de IBODocumentStock de type Mvt Transfert générés 
   property ListMouvementTransfertOut:IBICollection read Get_ListMouvementTransfertOut;
    // ListMouvementSortieOut : Collection de IBODocumentStock de type Mvt Sortie générés 
   property ListMouvementSortieOut:IBICollection read Get_ListMouvementSortieOut;
    // ListRetourOut : Collection de IBODocumentPart de type Retour (vente ou achat) générés 
   property ListRetourOut:IBICollection read Get_ListRetourOut;
  end;


// IPMControlerQualite : IPMControlerQualite Interface

 IPMControlerQualiteDisp = dispinterface
   ['{42F7A6E0-7123-434D-B9B8-28F081E90D04}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // QueryLigneEmplacement : methode QueryLigneEmplacement 
   function QueryLigneEmplacement:IBICollection;dispid 109;
    // Valider : methode Valider 
   function Valider(LigneEmpl:IBODocumentLigneEmplacement;Qte:Double):IPMControlerQualiteInfo;dispid 110;
    // Retourner : methode Retourner 
   function Retourner(LigneEmpl:IBODocumentLigneEmplacement;Qte:Double;sMotifRetour:WideString):IPMControlerQualiteInfo;dispid 111;
    // MettreRebut : methode MettreRebut 
   function MettreRebut(LigneEmpl:IBODocumentLigneEmplacement;Qte:Double;sMotifRebut:WideString):IPMControlerQualiteInfo;dispid 112;
    // RemoveControl : methode RemoveControl 
   procedure RemoveControl(LigneEmpl:IBODocumentLigneEmplacement);dispid 113;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // Domaine : property Domaine 
   property Domaine:DomaineType dispid 101;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 102;
    // DateValidation : property DateValidation 
   property DateValidation:TDateTime dispid 103;
    // PeriodDO_Date : property PeriodDO_Date 
   property PeriodDO_Date:IDateTimePeriod dispid 104;
    // PeriodDO_DateLivraison : property PeriodDO_DateLivraison 
   property PeriodDO_DateLivraison:IDateTimePeriod dispid 105;
    // TypeDocumentRetour : property TypeDocumentRetour 
   property TypeDocumentRetour:DocumentType dispid 106;
    // DO_RefOut : property DO_RefOut 
   property DO_RefOut:WideString dispid 107;
    // Controleur : property Controleur 
   property Controleur:IBOCollaborateur dispid 108;
    // Control : property Control 
   property Control[LigneEmpl:IBODocumentLigneEmplacement]:IPMControlerQualiteInfo  readonly dispid 114;
    // ListMouvementTransfertOut : Collection de IBODocumentStock de type Mvt Transfert générés 
   property ListMouvementTransfertOut:IBICollection  readonly dispid 115;
    // ListMouvementSortieOut : Collection de IBODocumentStock de type Mvt Sortie générés 
   property ListMouvementSortieOut:IBICollection  readonly dispid 116;
    // ListRetourOut : Collection de IBODocumentPart de type Retour (vente ou achat) générés 
   property ListRetourOut:IBICollection  readonly dispid 117;
  end;


// IBODocumentLigneEmplacement : IBODocumentLigneEmplacement Interface

 IBODocumentLigneEmplacement = interface(IBIPersistObject)
   ['{668D2238-E763-4F38-8FD3-8B88C136B993}']
   function Get_FactoryDocumentLigneEmplacement : IBITypeObjectFactory; safecall;
   function Get_DocumentLigne : IBODocumentLigne3; safecall;
   function Get_Emplacement : IBODepotEmplacement; safecall;
   procedure Set_Emplacement(const pObj:IBODepotEmplacement); safecall;
   function Get_DL_Qte : Double; safecall;
   procedure Set_DL_Qte(const pVal:Double); safecall;
   function Get_DL_QteAControler : Double; safecall;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory read Get_FactoryDocumentLigneEmplacement;
    // DocumentLigne : property DocumentLigne 
   property DocumentLigne:IBODocumentLigne3 read Get_DocumentLigne;
    // Emplacement : property Emplacement 
   property Emplacement:IBODepotEmplacement read Get_Emplacement write Set_Emplacement;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double read Get_DL_Qte write Set_DL_Qte;
    // DL_QteAControler : property DL_QteAControler 
   property DL_QteAControler:Double read Get_DL_QteAControler;
  end;


// IBODocumentLigneEmplacement : IBODocumentLigneEmplacement Interface

 IBODocumentLigneEmplacementDisp = dispinterface
   ['{668D2238-E763-4F38-8FD3-8B88C136B993}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 150;
    // DocumentLigne : property DocumentLigne 
   property DocumentLigne:IBODocumentLigne3  readonly dispid 151;
    // Emplacement : property Emplacement 
   property Emplacement:IBODepotEmplacement dispid 152;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 153;
    // DL_QteAControler : property DL_QteAControler 
   property DL_QteAControler:Double  readonly dispid 154;
  end;


// IPMControlerQualiteInfo : IPMControlerQualiteInfo Interface

 IPMControlerQualiteInfo = interface(IDispatch)
   ['{0D937022-1A73-4627-B25C-B3BEC99804BF}']
   function Get_DocLigneEmpl : IBODocumentLigneEmplacement; safecall;
   function Get_DL_QteValidee : Double; safecall;
   procedure Set_DL_QteValidee(const pVal:Double); safecall;
   function Get_EU_QteValidee : Double; safecall;
   procedure Set_EU_QteValidee(const pVal:Double); safecall;
   function Get_DL_QteRetour : Double; safecall;
   procedure Set_DL_QteRetour(const pVal:Double); safecall;
   function Get_EU_QteRetour : Double; safecall;
   procedure Set_EU_QteRetour(const pVal:Double); safecall;
   function Get_MotifRetour : WideString; safecall;
   procedure Set_MotifRetour(const pVal:WideString); safecall;
   function Get_DL_QteRebut : Double; safecall;
   procedure Set_DL_QteRebut(const pVal:Double); safecall;
   function Get_EU_QteRebut : Double; safecall;
   procedure Set_EU_QteRebut(const pVal:Double); safecall;
   function Get_MotifRebut : WideString; safecall;
   procedure Set_MotifRebut(const pVal:WideString); safecall;
   function Get_DepotEmplDest : IBODepotEmplacement; safecall;
   procedure Set_DepotEmplDest(const DepotEmpl:IBODepotEmplacement); safecall;
    // DocLigneEmpl : property DocLigneEmpl 
   property DocLigneEmpl:IBODocumentLigneEmplacement read Get_DocLigneEmpl;
    // DL_QteValidee : property DL_QteValidee 
   property DL_QteValidee:Double read Get_DL_QteValidee write Set_DL_QteValidee;
    // EU_QteValidee : property EU_QteValidee 
   property EU_QteValidee:Double read Get_EU_QteValidee write Set_EU_QteValidee;
    // DL_QteRetour : property DL_QteRetour 
   property DL_QteRetour:Double read Get_DL_QteRetour write Set_DL_QteRetour;
    // EU_QteRetour : property EU_QteRetour 
   property EU_QteRetour:Double read Get_EU_QteRetour write Set_EU_QteRetour;
    // MotifRetour : property MotifRetour 
   property MotifRetour:WideString read Get_MotifRetour write Set_MotifRetour;
    // DL_QteRebut : property DL_QteRebut 
   property DL_QteRebut:Double read Get_DL_QteRebut write Set_DL_QteRebut;
    // EU_QteRebut : property EU_QteRebut 
   property EU_QteRebut:Double read Get_EU_QteRebut write Set_EU_QteRebut;
    // MotifRebut : property MotifRebut 
   property MotifRebut:WideString read Get_MotifRebut write Set_MotifRebut;
    // DepotEmplDest : property DepotEmplDest 
   property DepotEmplDest:IBODepotEmplacement read Get_DepotEmplDest write Set_DepotEmplDest;
  end;


// IPMControlerQualiteInfo : IPMControlerQualiteInfo Interface

 IPMControlerQualiteInfoDisp = dispinterface
   ['{0D937022-1A73-4627-B25C-B3BEC99804BF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // DocLigneEmpl : property DocLigneEmpl 
   property DocLigneEmpl:IBODocumentLigneEmplacement  readonly dispid 1;
    // DL_QteValidee : property DL_QteValidee 
   property DL_QteValidee:Double dispid 2;
    // EU_QteValidee : property EU_QteValidee 
   property EU_QteValidee:Double dispid 3;
    // DL_QteRetour : property DL_QteRetour 
   property DL_QteRetour:Double dispid 4;
    // EU_QteRetour : property EU_QteRetour 
   property EU_QteRetour:Double dispid 5;
    // MotifRetour : property MotifRetour 
   property MotifRetour:WideString dispid 6;
    // DL_QteRebut : property DL_QteRebut 
   property DL_QteRebut:Double dispid 7;
    // EU_QteRebut : property EU_QteRebut 
   property EU_QteRebut:Double dispid 8;
    // MotifRebut : property MotifRebut 
   property MotifRebut:WideString dispid 9;
    // DepotEmplDest : property DepotEmplDest 
   property DepotEmplDest:IBODepotEmplacement dispid 10;
  end;


// IBODocumentLigneAllFactory : IBODocumentLigneAllFactory Interface

 IBODocumentLigneAllFactory = interface(IBITypeObjectFactory)
   ['{06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}']
   function Get_InfoLibreFields : IBIFields; safecall;
    // QueryMouvementStockArticle : Liste des lignes mouvementant le stock sur une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockArticle(pArticle:IBOArticle3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime):IBICollection;safecall;
    // QueryMouvementStockArticleMonoGamme : Liste des lignes mouvementant le stock sur une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockArticleMonoGamme(pArtGamEnum:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime):IBICollection;safecall;
    // QueryMouvementStockArticleDoubleGamme : Liste des lignes mouvementant le stock sur une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockArticleDoubleGamme(pArtGamEnum1:IBOArticleGammeEnum3;pArtGamEnum2:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime):IBICollection;safecall;
    // QueryMouvementStockPreviArticle : Liste des lignes qui mouvementeront le stock dans une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockPreviArticle(pArticle:IBOArticle3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime;bLigneWithoutDateLivraison:WordBool;bIncludePL:WordBool):IBICollection;safecall;
    // QueryMouvementStockPreviArticleMonoGamme : Liste des lignes qui mouvementeront le stock dans une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockPreviArticleMonoGamme(pArtGamEnum:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime;bLigneWithoutDateLivraison:WordBool;bIncludePL:WordBool):IBICollection;safecall;
    // QueryMouvementStockPreviArticleDoubleGamme : Liste des lignes qui mouvementeront le stock dans une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockPreviArticleDoubleGamme(pArtGamEnum1:IBOArticleGammeEnum3;pArtGamEnum2:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime;bLigneWithoutDateLivraison:WordBool;bIncludePL:WordBool):IBICollection;safecall;
    // QueryTiers : Liste des lignes de documents avec article associées à un tiers. Les éléments sont des IBODocumentPartLigne3 
   function QueryTiers(pTiers:IBOTiers3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // QueryTiersArticle : Liste des lignes de documents avec article associées à un tiers et un article. Les éléments sont des IBODocumentPartLigne3 
   function QueryTiersArticle(pTiers:IBOTiers3;pArticle:IBOArticle3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // QueryLot : Liste des lignes de documents associées à un lot. Les éléments sont des IBODocumentLigne3 
   function QueryLot(pLot:IBOArticleDepotLot):IBICollection;safecall;
    // QueryArticle : Liste des lignes de documents avec article. Les éléments sont des IBODocumentLigne3 
   function QueryArticle(pArticle:IBOArticle3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // QueryArticleMonoGamme : Liste des lignes de documents avec article. Les éléments sont des IBODocumentLigne3 
   function QueryArticleMonoGamme(pArtGamEnum:IBOArticleGammeEnum3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // QueryArticleDoubleGamme : Liste des lignes de documents avec article. Les éléments sont des IBODocumentLigne3 
   function QueryArticleDoubleGamme(pArtGamEnum1:IBOArticleGammeEnum3;pArtGamEnum2:IBOArticleGammeEnum3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
   function Get_AutoSet_PrixLigne : WordBool; safecall;
   procedure Set_AutoSet_PrixLigne(const pVal:WordBool); safecall;
    // QueryType : methode QueryType 
   function QueryType(TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;safecall;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;safecall;
   function Get_AutoSet_FraisLigne : WordBool; safecall;
   procedure Set_AutoSet_FraisLigne(const pVal:WordBool); safecall;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
    // AutoSet_PrixLigne : AutoSet_PrixLigne : Si TRUE, l'affectation d'une des 3 propriétés (DL_PrixUnitaire,DL_PUDevise,DL_PUTTC) entraine l'affectation automatique des 2 autres. FAUX par défaut. 
   property AutoSet_PrixLigne:WordBool read Get_AutoSet_PrixLigne write Set_AutoSet_PrixLigne;
    // AutoSet_FraisLigne : AutoSet_FraisLigne : Si TRUE, l'affectation de la propriété (DL_Frais) entraine l'affectation automatique de DL_PrixRU et DL_CMUP. FAUX par défaut. 
   property AutoSet_FraisLigne:WordBool read Get_AutoSet_FraisLigne write Set_AutoSet_FraisLigne;
  end;


// IBODocumentLigneAllFactory : IBODocumentLigneAllFactory Interface

 IBODocumentLigneAllFactoryDisp = dispinterface
   ['{06FEC9B3-6529-44C5-9EFA-23D1A8B9E85D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryMouvementStockArticle : Liste des lignes mouvementant le stock sur une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockArticle(pArticle:IBOArticle3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime):IBICollection;dispid 11;
    // QueryMouvementStockArticleMonoGamme : Liste des lignes mouvementant le stock sur une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockArticleMonoGamme(pArtGamEnum:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime):IBICollection;dispid 12;
    // QueryMouvementStockArticleDoubleGamme : Liste des lignes mouvementant le stock sur une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockArticleDoubleGamme(pArtGamEnum1:IBOArticleGammeEnum3;pArtGamEnum2:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime):IBICollection;dispid 13;
    // QueryMouvementStockPreviArticle : Liste des lignes qui mouvementeront le stock dans une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockPreviArticle(pArticle:IBOArticle3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime;bLigneWithoutDateLivraison:WordBool;bIncludePL:WordBool):IBICollection;dispid 14;
    // QueryMouvementStockPreviArticleMonoGamme : Liste des lignes qui mouvementeront le stock dans une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockPreviArticleMonoGamme(pArtGamEnum:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime;bLigneWithoutDateLivraison:WordBool;bIncludePL:WordBool):IBICollection;dispid 15;
    // QueryMouvementStockPreviArticleDoubleGamme : Liste des lignes qui mouvementeront le stock dans une période donnée. Les éléments sont des IBODocumentLigne3 
   function QueryMouvementStockPreviArticleDoubleGamme(pArtGamEnum1:IBOArticleGammeEnum3;pArtGamEnum2:IBOArticleGammeEnum3;pDepot:IBODepot3;dValDe:TDateTime;dValA:TDateTime;bLigneWithoutDateLivraison:WordBool;bIncludePL:WordBool):IBICollection;dispid 16;
    // QueryTiers : Liste des lignes de documents avec article associées à un tiers. Les éléments sont des IBODocumentPartLigne3 
   function QueryTiers(pTiers:IBOTiers3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 17;
    // QueryTiersArticle : Liste des lignes de documents avec article associées à un tiers et un article. Les éléments sont des IBODocumentPartLigne3 
   function QueryTiersArticle(pTiers:IBOTiers3;pArticle:IBOArticle3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 18;
    // QueryLot : Liste des lignes de documents associées à un lot. Les éléments sont des IBODocumentLigne3 
   function QueryLot(pLot:IBOArticleDepotLot):IBICollection;dispid 19;
    // QueryArticle : Liste des lignes de documents avec article. Les éléments sont des IBODocumentLigne3 
   function QueryArticle(pArticle:IBOArticle3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 20;
    // QueryArticleMonoGamme : Liste des lignes de documents avec article. Les éléments sont des IBODocumentLigne3 
   function QueryArticleMonoGamme(pArtGamEnum:IBOArticleGammeEnum3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 21;
    // QueryArticleDoubleGamme : Liste des lignes de documents avec article. Les éléments sont des IBODocumentLigne3 
   function QueryArticleDoubleGamme(pArtGamEnum1:IBOArticleGammeEnum3;pArtGamEnum2:IBOArticleGammeEnum3;dValDe:TDateTime;dValA:TDateTime;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 22;
    // QueryType : methode QueryType 
   function QueryType(TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 24;
    // _QuerySynchroType : methode _QuerySynchroType 
   function _QuerySynchroType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollection;dispid 25;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 26;
    // _QuerySynchroOIDType : methode _QuerySynchroOIDType 
   function _QuerySynchroOIDType(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType;TypeDe:DocumentType;TypeA:DocumentType):IBICollectionDispatch;dispid 27;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 10;
    // AutoSet_PrixLigne : AutoSet_PrixLigne : Si TRUE, l'affectation d'une des 3 propriétés (DL_PrixUnitaire,DL_PUDevise,DL_PUTTC) entraine l'affectation automatique des 2 autres. FAUX par défaut. 
   property AutoSet_PrixLigne:WordBool dispid 23;
    // AutoSet_FraisLigne : AutoSet_FraisLigne : Si TRUE, l'affectation de la propriété (DL_Frais) entraine l'affectation automatique de DL_PrixRU et DL_CMUP. FAUX par défaut. 
   property AutoSet_FraisLigne:WordBool dispid 28;
  end;


// IBOAgendaFactory : IBOAgendaFactory Interface

 IBOAgendaFactory = interface(IBITypeObjectFactory)
   ['{A9348A89-02D7-49DB-A006-61906BB23186}']
    // QueryType : methode QueryType 
   function QueryType(sType:AgendaTypeInteresse):IBICollection;safecall;
    // QueryNonEchu : methode QueryNonEchu 
   function QueryNonEchu:IBICollection;safecall;
    // QueryNonEchuType : methode QueryNonEchuType 
   function QueryNonEchuType(sType:AgendaTypeInteresse):IBICollection;safecall;
  end;


// IBOAgendaFactory : IBOAgendaFactory Interface

 IBOAgendaFactoryDisp = dispinterface
   ['{A9348A89-02D7-49DB-A006-61906BB23186}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // QueryType : methode QueryType 
   function QueryType(sType:AgendaTypeInteresse):IBICollection;dispid 10;
    // QueryNonEchu : methode QueryNonEchu 
   function QueryNonEchu:IBICollection;dispid 11;
    // QueryNonEchuType : methode QueryNonEchuType 
   function QueryNonEchuType(sType:AgendaTypeInteresse):IBICollection;dispid 12;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
  end;


// IBORessourceFactory : IBORessourceFactory Interface

 IBORessourceFactory = interface(IBITypeObjectFactory)
   ['{CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}']
   function Get_ListOrderIntitule : IBICollection; safecall;
   function Get_ListOrderType : IBICollection; safecall;
   function Get_ListOrderDepot : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBORessource;safecall;
    // ListOrderIntitule : property ListOrderIntitule 
   property ListOrderIntitule:IBICollection read Get_ListOrderIntitule;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection read Get_ListOrderType;
    // ListOrderDepot : property ListOrderDepot 
   property ListOrderDepot:IBICollection read Get_ListOrderDepot;
  end;


// IBORessourceFactory : IBORessourceFactory Interface

 IBORessourceFactoryDisp = dispinterface
   ['{CBFCC45C-78A9-4F00-AADD-AA7E7FF7DF57}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 13;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBORessource;dispid 14;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderIntitule : property ListOrderIntitule 
   property ListOrderIntitule:IBICollection  readonly dispid 10;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection  readonly dispid 11;
    // ListOrderDepot : property ListOrderDepot 
   property ListOrderDepot:IBICollection  readonly dispid 12;
  end;


// IBORessource : IBORessource Interface

 IBORessource = interface(IBIRessource)
   ['{677C7E65-047F-4147-A575-9950816E45C2}']
   function Get_FactoryRessource : IBORessourceFactory; safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
   function Get_RP_CodeExterne : WideString; safecall;
   procedure Set_RP_CodeExterne(const pVal:WideString); safecall;
    // FactoryRessource : property FactoryRessource 
   property FactoryRessource:IBORessourceFactory read Get_FactoryRessource;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // RP_CodeExterne : property RP_CodeExterne 
   property RP_CodeExterne:WideString read Get_RP_CodeExterne write Set_RP_CodeExterne;
  end;


// IBORessource : IBORessource Interface

 IBORessourceDisp = dispinterface
   ['{677C7E65-047F-4147-A575-9950816E45C2}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryRessourceBase : property FactoryRessourceBase 
   property FactoryRessourceBase:IBIRessourceFactory  readonly dispid 100;
    // FactoryRessourceArticle : Acces aux articles ratachés à la ressource 
   property FactoryRessourceArticle:IBIRessourceArticleFactory  readonly dispid 101;
    // FactoryRessourceRessource : Acces aux sous objets ressources (centre ou ressource selon le type de l'objet parent) 
   property FactoryRessourceRessource:IBIRessourceRessourceFactory  readonly dispid 102;
    // RP_TypeRess : property RP_TypeRess 
   property RP_TypeRess:RessourceType  readonly dispid 103;
    // RP_Code : property RP_Code 
   property RP_Code:WideString dispid 104;
    // RP_Type : property RP_Type 
   property RP_Type:RessourceProdType dispid 105;
    // RP_Intitule : property RP_Intitule 
   property RP_Intitule:WideString dispid 106;
    // RP_Complement : property RP_Complement 
   property RP_Complement:WideString dispid 107;
    // RP_Commentaire : property RP_Commentaire 
   property RP_Commentaire:WideString dispid 108;
    // RessourceCentrale : property RessourceCentrale 
   property RessourceCentrale:IBIRessource dispid 109;
    // RP_Visite : property RP_Visite 
   property RP_Visite:TDateTime dispid 110;
    // RP_Sommeil : property RP_Sommeil 
   property RP_Sommeil:WordBool dispid 111;
    // RP_CoutStd : property RP_CoutStd 
   property RP_CoutStd:Double dispid 112;
    // RP_DateCreation : property RP_DateCreation 
   property RP_DateCreation:TDateTime  readonly dispid 113;
    // RP_Capacite : property RP_Capacite 
   property RP_Capacite:Integer dispid 114;
    // RP_Temps : RP_Temps : Durée en nombre de secondes 
   property RP_Temps:Integer dispid 115;
    // ArticleDefault : property ArticleDefault 
   property ArticleDefault:IBOArticle3 dispid 116;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 117;
    // RP_Continue : property RP_Continue 
   property RP_Continue:WordBool dispid 118;
    // Horaire1 : property Horaire1 
   property Horaire1[iDayOfWeek:Smallint]:IDateTimePeriod dispid 119;
    // Horaire2 : property Horaire2 
   property Horaire2[iDayOfWeek:Smallint]:IDateTimePeriod dispid 120;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 121;
    // RP_Facebook : property RP_Facebook 
   property RP_Facebook:WideString dispid 122;
    // RP_LinkedIn : property RP_LinkedIn 
   property RP_LinkedIn:WideString dispid 123;
    // RP_Skype : property RP_Skype 
   property RP_Skype:WideString dispid 124;
    // FactoryRessource : property FactoryRessource 
   property FactoryRessource:IBORessourceFactory  readonly dispid 299;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 300;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 301;
    // RP_CodeExterne : property RP_CodeExterne 
   property RP_CodeExterne:WideString dispid 305;
  end;


// IBORessourceCentreFactory : Factory des ressources de type Centre de charge

 IBORessourceCentreFactory = interface(IBITypeObjectFactory)
   ['{C4F1A288-C230-49E7-AD37-298A071E7636}']
   function Get_ListOrderIntitule : IBICollection; safecall;
   function Get_ListOrderType : IBICollection; safecall;
   function Get_ListOrderDepot : IBICollection; safecall;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;safecall;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBORessourceCentre;safecall;
    // ListOrderIntitule : property ListOrderIntitule 
   property ListOrderIntitule:IBICollection read Get_ListOrderIntitule;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection read Get_ListOrderType;
    // ListOrderDepot : property ListOrderDepot 
   property ListOrderDepot:IBICollection read Get_ListOrderDepot;
  end;


// IBORessourceCentreFactory : Factory des ressources de type Centre de charge

 IBORessourceCentreFactoryDisp = dispinterface
   ['{C4F1A288-C230-49E7-AD37-298A071E7636}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // ExistNumero : methode ExistNumero 
   function ExistNumero(sNum:WideString):WordBool;dispid 13;
    // ReadNumero : methode ReadNumero 
   function ReadNumero(sNum:WideString):IBORessourceCentre;dispid 14;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // ListOrderIntitule : property ListOrderIntitule 
   property ListOrderIntitule:IBICollection  readonly dispid 10;
    // ListOrderType : property ListOrderType 
   property ListOrderType:IBICollection  readonly dispid 11;
    // ListOrderDepot : property ListOrderDepot 
   property ListOrderDepot:IBICollection  readonly dispid 12;
  end;


// IBORessourceCentre : IBORessourceCentre Interface : Centre de charge

 IBORessourceCentre = interface(IBIRessource)
   ['{F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}']
   function Get_FactoryRessourceCentre : IBORessourceCentreFactory; safecall;
    // FactoryRessourceCentre : property FactoryRessourceCentre 
   property FactoryRessourceCentre:IBORessourceCentreFactory read Get_FactoryRessourceCentre;
  end;


// IBORessourceCentre : IBORessourceCentre Interface : Centre de charge

 IBORessourceCentreDisp = dispinterface
   ['{F5D3BB4D-6691-4F6F-AF87-949A9EEEADDE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryRessourceBase : property FactoryRessourceBase 
   property FactoryRessourceBase:IBIRessourceFactory  readonly dispid 100;
    // FactoryRessourceArticle : Acces aux articles ratachés à la ressource 
   property FactoryRessourceArticle:IBIRessourceArticleFactory  readonly dispid 101;
    // FactoryRessourceRessource : Acces aux sous objets ressources (centre ou ressource selon le type de l'objet parent) 
   property FactoryRessourceRessource:IBIRessourceRessourceFactory  readonly dispid 102;
    // RP_TypeRess : property RP_TypeRess 
   property RP_TypeRess:RessourceType  readonly dispid 103;
    // RP_Code : property RP_Code 
   property RP_Code:WideString dispid 104;
    // RP_Type : property RP_Type 
   property RP_Type:RessourceProdType dispid 105;
    // RP_Intitule : property RP_Intitule 
   property RP_Intitule:WideString dispid 106;
    // RP_Complement : property RP_Complement 
   property RP_Complement:WideString dispid 107;
    // RP_Commentaire : property RP_Commentaire 
   property RP_Commentaire:WideString dispid 108;
    // RessourceCentrale : property RessourceCentrale 
   property RessourceCentrale:IBIRessource dispid 109;
    // RP_Visite : property RP_Visite 
   property RP_Visite:TDateTime dispid 110;
    // RP_Sommeil : property RP_Sommeil 
   property RP_Sommeil:WordBool dispid 111;
    // RP_CoutStd : property RP_CoutStd 
   property RP_CoutStd:Double dispid 112;
    // RP_DateCreation : property RP_DateCreation 
   property RP_DateCreation:TDateTime  readonly dispid 113;
    // RP_Capacite : property RP_Capacite 
   property RP_Capacite:Integer dispid 114;
    // RP_Temps : RP_Temps : Durée en nombre de secondes 
   property RP_Temps:Integer dispid 115;
    // ArticleDefault : property ArticleDefault 
   property ArticleDefault:IBOArticle3 dispid 116;
    // Unite : property Unite 
   property Unite:IBPUnite dispid 117;
    // RP_Continue : property RP_Continue 
   property RP_Continue:WordBool dispid 118;
    // Horaire1 : property Horaire1 
   property Horaire1[iDayOfWeek:Smallint]:IDateTimePeriod dispid 119;
    // Horaire2 : property Horaire2 
   property Horaire2[iDayOfWeek:Smallint]:IDateTimePeriod dispid 120;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 121;
    // RP_Facebook : property RP_Facebook 
   property RP_Facebook:WideString dispid 122;
    // RP_LinkedIn : property RP_LinkedIn 
   property RP_LinkedIn:WideString dispid 123;
    // RP_Skype : property RP_Skype 
   property RP_Skype:WideString dispid 124;
    // FactoryRessourceCentre : property FactoryRessourceCentre 
   property FactoryRessourceCentre:IBORessourceCentreFactory  readonly dispid 299;
  end;


// IControleQualiteStat : IControleQualiteStat Interface

 IControleQualiteStat = interface(IDispatch)
   ['{14E6E6E2-D4D5-44B4-A841-87AD58F62118}']
   function Get_QteAControler : Double; safecall;
   function Get_QteControlee : Double; safecall;
   function Get_QteValidee : Double; safecall;
   function Get_QteRetour : Double; safecall;
   function Get_QteRebut : Double; safecall;
    // QteAControler : property QteAControler 
   property QteAControler:Double read Get_QteAControler;
    // QteControlee : property QteControlee 
   property QteControlee:Double read Get_QteControlee;
    // QteValidee : property QteValidee 
   property QteValidee:Double read Get_QteValidee;
    // QteRetour : property QteRetour 
   property QteRetour:Double read Get_QteRetour;
    // QteRebut : property QteRebut 
   property QteRebut:Double read Get_QteRebut;
  end;


// IControleQualiteStat : IControleQualiteStat Interface

 IControleQualiteStatDisp = dispinterface
   ['{14E6E6E2-D4D5-44B4-A841-87AD58F62118}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // QteAControler : property QteAControler 
   property QteAControler:Double  readonly dispid 7;
    // QteControlee : property QteControlee 
   property QteControlee:Double  readonly dispid 8;
    // QteValidee : property QteValidee 
   property QteValidee:Double  readonly dispid 9;
    // QteRetour : property QteRetour 
   property QteRetour:Double  readonly dispid 10;
    // QteRebut : property QteRebut 
   property QteRebut:Double  readonly dispid 11;
  end;


// IPMColiser : IPMColiser Découpage ligne de PL en plusieurs colis

 IPMColiser = interface(IPMProcess)
   ['{A2D16FA5-8783-4397-9E8B-0736A97CA36F}']
   function Get_LigneOrigine : IBODocumentVenteLigne3; safecall;
   procedure Set_LigneOrigine(const pLigne:IBODocumentVenteLigne3); safecall;
   function Get_UserColis : IBICollectionDispatch; safecall;
   function Get_QteAColiser : Double; safecall;
   function Get_QteRestantAColiser : Double; safecall;
   function Get_ListLignesResult : IBICollection; safecall;
    // LigneOrigine : Ligne de PL 
   property LigneOrigine:IBODocumentVenteLigne3 read Get_LigneOrigine write Set_LigneOrigine;
    // UserColis : Collection des colis paramètrés 
   property UserColis:IBICollectionDispatch read Get_UserColis;
    // QteAColiser : Qté totale à coliser 
   property QteAColiser:Double read Get_QteAColiser;
    // QteRestantAColiser : Qté restant à coliser 
   property QteRestantAColiser:Double read Get_QteRestantAColiser;
    // ListLignesResult : Collection des lignes resultants du split de la ligne d'origine 
   property ListLignesResult:IBICollection read Get_ListLignesResult;
  end;


// IPMColiser : IPMColiser Découpage ligne de PL en plusieurs colis

 IPMColiserDisp = dispinterface
   ['{A2D16FA5-8783-4397-9E8B-0736A97CA36F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // LigneOrigine : Ligne de PL 
   property LigneOrigine:IBODocumentVenteLigne3 dispid 100;
    // UserColis : Collection des colis paramètrés 
   property UserColis:IBICollectionDispatch  readonly dispid 110;
    // QteAColiser : Qté totale à coliser 
   property QteAColiser:Double  readonly dispid 105;
    // QteRestantAColiser : Qté restant à coliser 
   property QteRestantAColiser:Double  readonly dispid 106;
    // ListLignesResult : Collection des lignes resultants du split de la ligne d'origine 
   property ListLignesResult:IBICollection  readonly dispid 107;
  end;


// IBODocumentPartLigne3 : IBODocumentPartLigne3 Interface

 IBODocumentPartLigne3 = interface(IBODocumentLigne3)
   ['{96BCA363-6B12-4DB8-A50D-8692B6F66BBC}']
   function Get_DocumentPart : IBODocumentPart3; safecall;
   function Get_Tiers : IBOTiersPart3; safecall;
   function Get_DL_DateBC : TDateTime; safecall;
   function Get_DL_DateBL : TDateTime; safecall;
   function Get_DL_PieceBC : WideString; safecall;
   function Get_DL_PieceBL : WideString; safecall;
   function Get_IsRemisePied : WordBool; safecall;
   procedure Set_IsRemisePied(const pVal:WordBool); safecall;
   function Get_IsRemiseExceptionnelle : WordBool; safecall;
   procedure Set_IsRemiseExceptionnelle(const pVal:WordBool); safecall;
   function Get_IsTotalisatrice : WordBool; safecall;
   procedure Set_IsTotalisatrice(const pVal:WordBool); safecall;
   function Get_DL_QteBC : Double; safecall;
   procedure Set_DL_QteBC(const pVal:Double); safecall;
   function Get_DL_QteBL : Double; safecall;
   procedure Set_DL_QteBL(const pVal:Double); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
   function Get_DL_PUBC : Double; safecall;
   function Get_AF_RefFourniss : WideString; safecall;
   procedure Set_AF_RefFourniss(const pVal:WideString); safecall;
   function Get_DL_TypePL : DocumentLigneProvenanceType; safecall;
   function Get_DL_Escompte : WordBool; safecall;
   function Get_DL_PUDevise : Double; safecall;
   procedure Set_DL_PUDevise(const pVal:Double); safecall;
   function Get_DL_PUTTC : Double; safecall;
   procedure Set_DL_PUTTC(const pVal:Double); safecall;
   function Get_DO_DateLivr : TDateTime; safecall;
   procedure Set_DO_DateLivr(const pVal:TDateTime); safecall;
   function Get_DL_NonLivre : WordBool; safecall;
   function Get_DL_MontantTTC : Double; safecall;
    // SetDefaultArticleReferenceFournisseur : methode SetDefaultArticleReferenceFournisseur 
   procedure SetDefaultArticleReferenceFournisseur(sRef:WideString;Qte:Double);safecall;
   function Get_Taxe(sElt:Smallint) : IBOTaxe3; safecall;
   procedure Set_Taxe(const sElt:Smallint; const parTaxe:IBOTaxe3); safecall;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3 read Get_DocumentPart;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3 read Get_Tiers;
    // DL_DateBC : property DL_DateBC 
   property DL_DateBC:TDateTime read Get_DL_DateBC;
    // DL_DateBL : property DL_DateBL 
   property DL_DateBL:TDateTime read Get_DL_DateBL;
    // DL_PieceBC : property DL_PieceBC 
   property DL_PieceBC:WideString read Get_DL_PieceBC;
    // DL_PieceBL : property DL_PieceBL 
   property DL_PieceBL:WideString read Get_DL_PieceBL;
    // IsRemisePied : property IsRemisePied 
   property IsRemisePied:WordBool read Get_IsRemisePied write Set_IsRemisePied;
    // IsRemiseExceptionnelle : property IsRemiseExceptionnelle 
   property IsRemiseExceptionnelle:WordBool read Get_IsRemiseExceptionnelle write Set_IsRemiseExceptionnelle;
    // IsTotalisatrice : property IsTotalisatrice 
   property IsTotalisatrice:WordBool read Get_IsTotalisatrice write Set_IsTotalisatrice;
    // DL_QteBC : property DL_QteBC 
   property DL_QteBC:Double read Get_DL_QteBC write Set_DL_QteBC;
    // DL_QteBL : property DL_QteBL 
   property DL_QteBL:Double read Get_DL_QteBL write Set_DL_QteBL;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
    // DL_PUBC : property DL_PUBC 
   property DL_PUBC:Double read Get_DL_PUBC;
    // AF_RefFourniss : property AF_RefFourniss 
   property AF_RefFourniss:WideString read Get_AF_RefFourniss write Set_AF_RefFourniss;
    // DL_TypePL : property DL_TypePL 
   property DL_TypePL:DocumentLigneProvenanceType read Get_DL_TypePL;
    // DL_Escompte : property DL_Escompte 
   property DL_Escompte:WordBool read Get_DL_Escompte;
    // DL_PUDevise : property DL_PUDevise 
   property DL_PUDevise:Double read Get_DL_PUDevise write Set_DL_PUDevise;
    // DL_PUTTC : property DL_PUTTC 
   property DL_PUTTC:Double read Get_DL_PUTTC write Set_DL_PUTTC;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime read Get_DO_DateLivr write Set_DO_DateLivr;
    // DL_NonLivre : property DL_NonLivre 
   property DL_NonLivre:WordBool read Get_DL_NonLivre;
    // DL_MontantTTC : property DL_MontantTTC 
   property DL_MontantTTC:Double read Get_DL_MontantTTC;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 read Get_Taxe write Set_Taxe;
  end;


// IBODocumentPartLigne3 : IBODocumentPartLigne3 Interface

 IBODocumentPartLigne3Disp = dispinterface
   ['{96BCA363-6B12-4DB8-A50D-8692B6F66BBC}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);dispid 126;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);dispid 127;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);dispid 128;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);dispid 129;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);dispid 130;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);dispid 134;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;dispid 141;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;dispid 142;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);dispid 143;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);dispid 144;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);dispid 145;
    // SetDefaultArticleReferenceFournisseur : methode SetDefaultArticleReferenceFournisseur 
   procedure SetDefaultArticleReferenceFournisseur(sRef:WideString;Qte:Double);dispid 224;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 101;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 131;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 102;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 103;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 104;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 105;
    // DL_Design : property DL_Design 
   property DL_Design:WideString dispid 106;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 107;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double dispid 108;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double dispid 109;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double dispid 110;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 111;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 112;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double dispid 113;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double dispid 114;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType  readonly dispid 115;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString dispid 116;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double dispid 117;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 118;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double  readonly dispid 119;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString dispid 120;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime dispid 121;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime dispid 122;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool dispid 123;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool  readonly dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 125;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 132;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot dispid 133;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 135;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString dispid 136;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 137;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 216;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory  readonly dispid 138;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 139;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString  readonly dispid 140;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer dispid 146;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString dispid 147;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double  readonly dispid 148;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3  readonly dispid 200;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3  readonly dispid 201;
    // DL_DateBC : property DL_DateBC 
   property DL_DateBC:TDateTime  readonly dispid 203;
    // DL_DateBL : property DL_DateBL 
   property DL_DateBL:TDateTime  readonly dispid 204;
    // DL_PieceBC : property DL_PieceBC 
   property DL_PieceBC:WideString  readonly dispid 205;
    // DL_PieceBL : property DL_PieceBL 
   property DL_PieceBL:WideString  readonly dispid 206;
    // IsRemisePied : property IsRemisePied 
   property IsRemisePied:WordBool dispid 207;
    // IsRemiseExceptionnelle : property IsRemiseExceptionnelle 
   property IsRemiseExceptionnelle:WordBool dispid 208;
    // IsTotalisatrice : property IsTotalisatrice 
   property IsTotalisatrice:WordBool dispid 209;
    // DL_QteBC : property DL_QteBC 
   property DL_QteBC:Double dispid 210;
    // DL_QteBL : property DL_QteBL 
   property DL_QteBL:Double dispid 211;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 212;
    // DL_PUBC : property DL_PUBC 
   property DL_PUBC:Double  readonly dispid 213;
    // AF_RefFourniss : property AF_RefFourniss 
   property AF_RefFourniss:WideString dispid 214;
    // DL_TypePL : property DL_TypePL 
   property DL_TypePL:DocumentLigneProvenanceType  readonly dispid 215;
    // DL_Escompte : property DL_Escompte 
   property DL_Escompte:WordBool  readonly dispid 217;
    // DL_PUDevise : property DL_PUDevise 
   property DL_PUDevise:Double dispid 218;
    // DL_PUTTC : property DL_PUTTC 
   property DL_PUTTC:Double dispid 219;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 220;
    // DL_NonLivre : property DL_NonLivre 
   property DL_NonLivre:WordBool  readonly dispid 221;
    // DL_MontantTTC : property DL_MontantTTC 
   property DL_MontantTTC:Double  readonly dispid 223;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 225;
  end;


// IBODocumentVenteLigne3 : IBODocumentVenteLigne3 Interface

 IBODocumentVenteLigne3 = interface(IBODocumentPartLigne3)
   ['{5BA16B17-24FF-4FAA-BD06-D014D625E0C6}']
   function Get_DocumentVente : IBODocumentVente3; safecall;
   function Get_Client : IBOClient3; safecall;
   function Get_AC_RefClient : WideString; safecall;
   procedure Set_AC_RefClient(const pVal:WideString); safecall;
   function Get_TTC : WordBool; safecall;
   procedure Set_TTC(const pVal:WordBool); safecall;
   function Get_ArticleCompose : IBOArticle3; safecall;
   procedure Set_ArticleCompose(const pArticle:IBOArticle3); safecall;
   function Get_IsComposeDeCompose : WordBool; safecall;
   function Get_IsComposeDeComposant : WordBool; safecall;
   function Get_LignesComposants : IBICollection; safecall;
   function Get_DL_PiecePL : WideString; safecall;
   function Get_DL_DatePL : TDateTime; safecall;
   function Get_DL_QtePL : Double; safecall;
   procedure Set_DL_QtePL(const pVal:Double); safecall;
    // SetDefaultArticleReferenceClient : methode SetDefaultArticleReferenceClient 
   procedure SetDefaultArticleReferenceClient(sRef:WideString;Qte:Double);safecall;
    // SetDefaultRemise : methode SetDefaultRemise 
   procedure SetDefaultRemise;safecall;
   function Get_Valorisation : IDocLigneValorisation; safecall;
   function Get_DL_QteRessource : Integer; safecall;
   procedure Set_DL_QteRessource(const pVal:Integer); safecall;
   function Get_DL_NoColis : WideString; safecall;
   procedure Set_DL_NoColis(const pVal:WideString); safecall;
   function Get_DL_PieceDE : WideString; safecall;
   function Get_DL_DateDE : TDateTime; safecall;
   function Get_DL_QteDE : Double; safecall;
    // DocumentVente : property DocumentVente 
   property DocumentVente:IBODocumentVente3 read Get_DocumentVente;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
    // AC_RefClient : property AC_RefClient 
   property AC_RefClient:WideString read Get_AC_RefClient write Set_AC_RefClient;
    // TTC : property TTC 
   property TTC:WordBool read Get_TTC write Set_TTC;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 read Get_ArticleCompose write Set_ArticleCompose;
    // IsComposeDeCompose : property IsComposeDeCompose 
   property IsComposeDeCompose:WordBool read Get_IsComposeDeCompose;
    // IsComposeDeComposant : property IsComposeDeComposant 
   property IsComposeDeComposant:WordBool read Get_IsComposeDeComposant;
    // LignesComposants : property LignesComposants 
   property LignesComposants:IBICollection read Get_LignesComposants;
    // DL_PiecePL : property DL_PiecePL 
   property DL_PiecePL:WideString read Get_DL_PiecePL;
    // DL_DatePL : property DL_DatePL 
   property DL_DatePL:TDateTime read Get_DL_DatePL;
    // DL_QtePL : property DL_QtePL 
   property DL_QtePL:Double read Get_DL_QtePL write Set_DL_QtePL;
    // Valorisation : property Valorisation 
   property Valorisation:IDocLigneValorisation read Get_Valorisation;
    // DL_QteRessource : property DL_QteRessource 
   property DL_QteRessource:Integer read Get_DL_QteRessource write Set_DL_QteRessource;
    // DL_NoColis : property DL_NoColis 
   property DL_NoColis:WideString read Get_DL_NoColis write Set_DL_NoColis;
    // DL_PieceDE : property DL_PieceDE 
   property DL_PieceDE:WideString read Get_DL_PieceDE;
    // DL_DateDE : property DL_DateDE 
   property DL_DateDE:TDateTime read Get_DL_DateDE;
    // DL_QteDE : property DL_QteDE 
   property DL_QteDE:Double read Get_DL_QteDE;
  end;

// IBODocumentVenteLigne3 : IBODocumentVenteLigne3 Interface

 IBODocumentVenteLigne3Disp = dispinterface
   ['{5BA16B17-24FF-4FAA-BD06-D014D625E0C6}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);dispid 126;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);dispid 127;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);dispid 128;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);dispid 129;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);dispid 130;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);dispid 134;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;dispid 141;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;dispid 142;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);dispid 143;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);dispid 144;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);dispid 145;
    // SetDefaultArticleReferenceFournisseur : methode SetDefaultArticleReferenceFournisseur 
   procedure SetDefaultArticleReferenceFournisseur(sRef:WideString;Qte:Double);dispid 224;
    // SetDefaultArticleReferenceClient : methode SetDefaultArticleReferenceClient 
   procedure SetDefaultArticleReferenceClient(sRef:WideString;Qte:Double);dispid 309;
    // SetDefaultRemise : methode SetDefaultRemise 
   procedure SetDefaultRemise;dispid 313;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 101;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 131;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 102;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 103;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 104;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 105;
    // DL_Design : property DL_Design 
   property DL_Design:WideString dispid 106;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 107;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double dispid 108;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double dispid 109;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double dispid 110;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 111;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 112;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double dispid 113;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double dispid 114;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType  readonly dispid 115;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString dispid 116;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double dispid 117;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 118;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double  readonly dispid 119;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString dispid 120;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime dispid 121;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime dispid 122;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool dispid 123;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool  readonly dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 125;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 132;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot dispid 133;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 135;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString dispid 136;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 137;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 216;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory  readonly dispid 138;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 139;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString  readonly dispid 140;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer dispid 146;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString dispid 147;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double  readonly dispid 148;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3  readonly dispid 200;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3  readonly dispid 201;
    // DL_DateBC : property DL_DateBC 
   property DL_DateBC:TDateTime  readonly dispid 203;
    // DL_DateBL : property DL_DateBL 
   property DL_DateBL:TDateTime  readonly dispid 204;
    // DL_PieceBC : property DL_PieceBC 
   property DL_PieceBC:WideString  readonly dispid 205;
    // DL_PieceBL : property DL_PieceBL 
   property DL_PieceBL:WideString  readonly dispid 206;
    // IsRemisePied : property IsRemisePied 
   property IsRemisePied:WordBool dispid 207;
    // IsRemiseExceptionnelle : property IsRemiseExceptionnelle 
   property IsRemiseExceptionnelle:WordBool dispid 208;
    // IsTotalisatrice : property IsTotalisatrice 
   property IsTotalisatrice:WordBool dispid 209;
    // DL_QteBC : property DL_QteBC 
   property DL_QteBC:Double dispid 210;
    // DL_QteBL : property DL_QteBL 
   property DL_QteBL:Double dispid 211;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 212;
    // DL_PUBC : property DL_PUBC 
   property DL_PUBC:Double  readonly dispid 213;
    // AF_RefFourniss : property AF_RefFourniss 
   property AF_RefFourniss:WideString dispid 214;
    // DL_TypePL : property DL_TypePL 
   property DL_TypePL:DocumentLigneProvenanceType  readonly dispid 215;
    // DL_Escompte : property DL_Escompte 
   property DL_Escompte:WordBool  readonly dispid 217;
    // DL_PUDevise : property DL_PUDevise 
   property DL_PUDevise:Double dispid 218;
    // DL_PUTTC : property DL_PUTTC 
   property DL_PUTTC:Double dispid 219;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 220;
    // DL_NonLivre : property DL_NonLivre 
   property DL_NonLivre:WordBool  readonly dispid 221;
    // DL_MontantTTC : property DL_MontantTTC 
   property DL_MontantTTC:Double  readonly dispid 223;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 225;
    // DocumentVente : property DocumentVente 
   property DocumentVente:IBODocumentVente3  readonly dispid 300;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 301;
    // AC_RefClient : property AC_RefClient 
   property AC_RefClient:WideString dispid 302;
    // TTC : property TTC 
   property TTC:WordBool dispid 304;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 dispid 305;
    // IsComposeDeCompose : property IsComposeDeCompose 
   property IsComposeDeCompose:WordBool  readonly dispid 306;
    // IsComposeDeComposant : property IsComposeDeComposant 
   property IsComposeDeComposant:WordBool  readonly dispid 307;
    // LignesComposants : property LignesComposants 
   property LignesComposants:IBICollection  readonly dispid 308;
    // DL_PiecePL : property DL_PiecePL 
   property DL_PiecePL:WideString  readonly dispid 310;
    // DL_DatePL : property DL_DatePL 
   property DL_DatePL:TDateTime  readonly dispid 311;
    // DL_QtePL : property DL_QtePL 
   property DL_QtePL:Double dispid 312;
    // Valorisation : property Valorisation 
   property Valorisation:IDocLigneValorisation  readonly dispid 314;
    // DL_QteRessource : property DL_QteRessource 
   property DL_QteRessource:Integer dispid 315;
    // DL_NoColis : property DL_NoColis 
   property DL_NoColis:WideString dispid 316;
    // DL_PieceDE : property DL_PieceDE 
   property DL_PieceDE:WideString  readonly dispid 317;
    // DL_DateDE : property DL_DateDE 
   property DL_DateDE:TDateTime  readonly dispid 318;
    // DL_QteDE : property DL_QteDE 
   property DL_QteDE:Double  readonly dispid 319;
  end;


// IPMPreleverLot : IPMPreleverLot Découpage ligne de PL en plusieurs lot

 IPMPreleverLot = interface(IPMProcess)
   ['{8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}']
   function Get_LigneOrigine : IBODocumentVenteLigne3; safecall;
   procedure Set_LigneOrigine(const pLigne:IBODocumentVenteLigne3); safecall;
   function Get_UserLots : IBICollectionDispatch; safecall;
   function Get_QteARepartir : Double; safecall;
   function Get_QteRestantARepartir : Double; safecall;
   function Get_ListLignesResult : IBICollection; safecall;
    // LigneOrigine : Ligne de PL 
   property LigneOrigine:IBODocumentVenteLigne3 read Get_LigneOrigine write Set_LigneOrigine;
    // UserLots : Collection des lots paramètrés 
   property UserLots:IBICollectionDispatch read Get_UserLots;
    // QteARepartir : Qté totale à répartir 
   property QteARepartir:Double read Get_QteARepartir;
    // QteRestantARepartir : Qté restant à répartir 
   property QteRestantARepartir:Double read Get_QteRestantARepartir;
    // ListLignesResult : Collection des lignes resultants du split de la ligne d'origine 
   property ListLignesResult:IBICollection read Get_ListLignesResult;
  end;


// IPMPreleverLot : IPMPreleverLot Découpage ligne de PL en plusieurs lot

 IPMPreleverLotDisp = dispinterface
   ['{8A2F1F8F-5A2F-4C8F-A683-7759D2E4C2A8}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // LigneOrigine : Ligne de PL 
   property LigneOrigine:IBODocumentVenteLigne3 dispid 100;
    // UserLots : Collection des lots paramètrés 
   property UserLots:IBICollectionDispatch  readonly dispid 110;
    // QteARepartir : Qté totale à répartir 
   property QteARepartir:Double  readonly dispid 105;
    // QteRestantARepartir : Qté restant à répartir 
   property QteRestantARepartir:Double  readonly dispid 106;
    // ListLignesResult : Collection des lignes resultants du split de la ligne d'origine 
   property ListLignesResult:IBICollection  readonly dispid 107;
  end;


// IPMDocTransferer : IPMDocTransferer Interface

 IPMDocTransferer = interface(IPMProcess)
   ['{986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}']
   function Get_Document : IBODocumentStock3; safecall;
   procedure Set_Document(const pDocument:IBODocumentStock3); safecall;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;QteTransfert:Double);safecall;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;QteTransfert:Double);safecall;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;QteTransfert:Double);safecall;
   function Get_UserLotsQteRestantAFournir : Double; safecall;
   function Get_UserLotsToUse : IBICollectionDispatch; safecall;
   function Get_DepotEmplOrigine : IBODepotEmplacement; safecall;
   procedure Set_DepotEmplOrigine(const DepotEmpl:IBODepotEmplacement); safecall;
   function Get_DepotEmplDest : IBODepotEmplacement; safecall;
   procedure Set_DepotEmplDest(const DepotEmpl:IBODepotEmplacement); safecall;
   function Get_ListLignesResult : IBICollection; safecall;
   function Get_UserEmplacementsOrigineToUse : IBICollectionDispatch; safecall;
   function Get_NoSerie : WideString; safecall;
    // SetDefaultArticleNumeroSerie : methode SetDefaultArticleNumeroSerie 
   procedure SetDefaultArticleNumeroSerie(pArticle:IBOArticle3;QteTransfert:Double;sNumSerie:WideString;pDepotEmpl:IBODepotEmplacement);safecall;
    // Document : Document 
   property Document:IBODocumentStock3 read Get_Document write Set_Document;
    // UserLotsQteRestantAFournir : Quantité pour laquelle il reste à fournir des lots 
   property UserLotsQteRestantAFournir:Double read Get_UserLotsQteRestantAFournir;
    // UserLotsToUse : Collection des lots paramètrés pour le transfert 
   property UserLotsToUse:IBICollectionDispatch read Get_UserLotsToUse;
    // DepotEmplOrigine : DepotEmplOrigine 
   property DepotEmplOrigine:IBODepotEmplacement read Get_DepotEmplOrigine write Set_DepotEmplOrigine;
    // DepotEmplDest : DepotEmplDest 
   property DepotEmplDest:IBODepotEmplacement read Get_DepotEmplDest write Set_DepotEmplDest;
    // ListLignesResult : Collection des lignes resultants de l'execution du processus 
   property ListLignesResult:IBICollection read Get_ListLignesResult;
    // UserEmplacementsOrigineToUse : Collection des emplacements d'origine paramètrés pour le transfert 
   property UserEmplacementsOrigineToUse:IBICollectionDispatch read Get_UserEmplacementsOrigineToUse;
    // NoSerie : NoSerie 
   property NoSerie:WideString read Get_NoSerie;
  end;


// IPMDocTransferer : IPMDocTransferer Interface

 IPMDocTransfererDisp = dispinterface
   ['{986E664D-F4E2-4FFC-BC6A-C0747BA72BF0}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;QteTransfert:Double);dispid 101;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;QteTransfert:Double);dispid 102;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;QteTransfert:Double);dispid 103;
    // SetDefaultArticleNumeroSerie : methode SetDefaultArticleNumeroSerie 
   procedure SetDefaultArticleNumeroSerie(pArticle:IBOArticle3;QteTransfert:Double;sNumSerie:WideString;pDepotEmpl:IBODepotEmplacement);dispid 111;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // Document : Document 
   property Document:IBODocumentStock3 dispid 100;
    // UserLotsQteRestantAFournir : Quantité pour laquelle il reste à fournir des lots 
   property UserLotsQteRestantAFournir:Double  readonly dispid 104;
    // UserLotsToUse : Collection des lots paramètrés pour le transfert 
   property UserLotsToUse:IBICollectionDispatch  readonly dispid 105;
    // DepotEmplOrigine : DepotEmplOrigine 
   property DepotEmplOrigine:IBODepotEmplacement dispid 106;
    // DepotEmplDest : DepotEmplDest 
   property DepotEmplDest:IBODepotEmplacement dispid 107;
    // ListLignesResult : Collection des lignes resultants de l'execution du processus 
   property ListLignesResult:IBICollection  readonly dispid 108;
    // UserEmplacementsOrigineToUse : Collection des emplacements d'origine paramètrés pour le transfert 
   property UserEmplacementsOrigineToUse:IBICollectionDispatch  readonly dispid 109;
    // NoSerie : NoSerie 
   property NoSerie:WideString  readonly dispid 110;
  end;


// IBOArticleDepotLotAllFactory : IBOArticleDepotLotAllFactory Interface

 IBOArticleDepotLotAllFactory = interface(IBITypeObjectFactory)
   ['{CD93656D-E510-48EA-ABBD-0C5E39D72F8D}']
   function Get_InfoLibreFields : IBIFields; safecall;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;safecall;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields read Get_InfoLibreFields;
  end;


// IBOArticleDepotLotAllFactory : IBOArticleDepotLotAllFactory Interface

 IBOArticleDepotLotAllFactoryDisp = dispinterface
   ['{CD93656D-E510-48EA-ABBD-0C5E39D72F8D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Create : methode Create 
   function Create:IBIPersistObject;dispid 2;
    // Read_ : methode Read 
   function Read_(pOID:IBIObjectID):IBIPersistObject;dispid 3;
    // _QuerySynchro : methode _QuerySynchro 
   function _QuerySynchro(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollection;dispid 4;
    // _QuerySynchroRemoved : methode _QuerySynchroRemoved 
   function _QuerySynchroRemoved(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 5;
    // ReadFrom : methode ReadFrom 
   function ReadFrom(pStream:IStream):IBIPersistObject;dispid 6;
    // QueryPredicate : methode QueryPredicate Usage reservé non implémenté 
   function QueryPredicate(pPredicate:IDispatch;sSortDescriptors:WideString):IBICollection;dispid 8;
    // _QuerySynchroOID : methode _QuerySynchroOID 
   function _QuerySynchroOID(UIDSideDistant:WideString;TypeAbonnement:Word;TypeExtraction:SynchroExtractType):IBICollectionDispatch;dispid 14;
    // List : property List 
   property List:IBICollection  readonly dispid 1;
    // ListForward : property ListForward Usage reservé non implémenté 
   property ListForward:IBICollection  readonly dispid 7;
    // InfoLibreFields : property InfoLibreFields 
   property InfoLibreFields:IBIFields  readonly dispid 13;
  end;


// IPMDocInsererSousTotal : IPMDocInsererSousTotal Interface

 IPMDocInsererSousTotal = interface(IPMProcess)
   ['{41D5325D-174A-400E-A51A-A35E1A753086}']
    // AddDocumentLigne : methode AddDocumentLigne 
   procedure AddDocumentLigne(pLigne:IBODocumentPartLigne3);safecall;
    // RmvDocumentLigne : methode RmvDocumentLigne 
   procedure RmvDocumentLigne(pLigne:IBODocumentPartLigne3);safecall;
   function Get_Commentaire : WideString; safecall;
   procedure Set_Commentaire(const pName:WideString); safecall;
   function Get_LigneTotal : IBODocumentPartLigne3; safecall;
    // Commentaire : Commentaire 
   property Commentaire:WideString read Get_Commentaire write Set_Commentaire;
    // LigneTotal : LigneTotal 
   property LigneTotal:IBODocumentPartLigne3 read Get_LigneTotal;
  end;


// IPMDocInsererSousTotal : IPMDocInsererSousTotal Interface

 IPMDocInsererSousTotalDisp = dispinterface
   ['{41D5325D-174A-400E-A51A-A35E1A753086}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // AddDocumentLigne : methode AddDocumentLigne 
   procedure AddDocumentLigne(pLigne:IBODocumentPartLigne3);dispid 100;
    // RmvDocumentLigne : methode RmvDocumentLigne 
   procedure RmvDocumentLigne(pLigne:IBODocumentPartLigne3);dispid 101;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // Commentaire : Commentaire 
   property Commentaire:WideString dispid 102;
    // LigneTotal : LigneTotal 
   property LigneTotal:IBODocumentPartLigne3  readonly dispid 103;
  end;


// IPMDocRecalculPrixCompose : IPMDocRecalculPrixCompose Interface

 IPMDocRecalculPrixCompose = interface(IPMProcess)
   ['{EBE47850-78B8-47EF-91BC-57E8CE1865BD}']
    // AddDocumentLigne : methode AddDocumentLigne 
   procedure AddDocumentLigne(pLigne:IBODocumentLigne3);safecall;
    // RmvDocumentLigne : methode RmvDocumentLigne 
   procedure RmvDocumentLigne(pLigne:IBODocumentLigne3);safecall;
  end;


// IPMDocRecalculPrixCompose : IPMDocRecalculPrixCompose Interface

 IPMDocRecalculPrixComposeDisp = dispinterface
   ['{EBE47850-78B8-47EF-91BC-57E8CE1865BD}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // AddDocumentLigne : methode AddDocumentLigne 
   procedure AddDocumentLigne(pLigne:IBODocumentLigne3);dispid 100;
    // RmvDocumentLigne : methode RmvDocumentLigne 
   procedure RmvDocumentLigne(pLigne:IBODocumentLigne3);dispid 101;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
  end;


// IPMSortirLots : IPMSortirLots Sortir une ligne en plusieurs lot

 IPMSortirLots = interface(IPMProcess)
   ['{405385B1-E81A-4AAA-A887-6D4A5C37959B}']
   function Get_LigneOrigine : IBODocumentLigne3; safecall;
    // SetLigneDefaultLot : méthode Sortir une ligne en plusieurs lot 
   procedure SetLigneDefaultLot(pLigne:IBODocumentLigne3;sNumSerie:WideString;pDepotEmpl:IBODepotEmplacement);safecall;
   function Get_UserLots : IBICollectionDispatch; safecall;
   function Get_QteARepartir : Double; safecall;
   function Get_QteRestantARepartir : Double; safecall;
   function Get_ListLignesResult : IBICollection; safecall;
   function Get_NoSerie : WideString; safecall;
   function Get_DepotEmpl : IBODepotEmplacement; safecall;
   function Get_UserEmplacementsOrigineToUse : IBICollectionDispatch; safecall;
    // LigneOrigine : Ligne de sortie de stock  
   property LigneOrigine:IBODocumentLigne3 read Get_LigneOrigine;
    // UserLots : Collection des lots paramètrés 
   property UserLots:IBICollectionDispatch read Get_UserLots;
    // QteARepartir : Qté totale à répartir 
   property QteARepartir:Double read Get_QteARepartir;
    // QteRestantARepartir : Qté restant à répartir 
   property QteRestantARepartir:Double read Get_QteRestantARepartir;
    // ListLignesResult : Collection des lignes resultants du split de la ligne d'origine 
   property ListLignesResult:IBICollection read Get_ListLignesResult;
    // NoSerie : Numéro de série/lot 
   property NoSerie:WideString read Get_NoSerie;
    // DepotEmpl : DepotEmpl 
   property DepotEmpl:IBODepotEmplacement read Get_DepotEmpl;
    // UserEmplacementsOrigineToUse : Collection des emplacements des lots d'entrée  
   property UserEmplacementsOrigineToUse:IBICollectionDispatch read Get_UserEmplacementsOrigineToUse;
  end;


// IPMSortirLots : IPMSortirLots Sortir une ligne en plusieurs lot

 IPMSortirLotsDisp = dispinterface
   ['{405385B1-E81A-4AAA-A887-6D4A5C37959B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Process : property Process 
   procedure Process;dispid 10;
    // SetLigneDefaultLot : méthode Sortir une ligne en plusieurs lot 
   procedure SetLigneDefaultLot(pLigne:IBODocumentLigne3;sNumSerie:WideString;pDepotEmpl:IBODepotEmplacement);dispid 103;
    // CanProcess : property CanProcess 
   property CanProcess:WordBool  readonly dispid 11;
    // Errors : property Errors 
   property Errors:IFailInfoCol  readonly dispid 12;
    // LigneOrigine : Ligne de sortie de stock  
   property LigneOrigine:IBODocumentLigne3  readonly dispid 100;
    // UserLots : Collection des lots paramètrés 
   property UserLots:IBICollectionDispatch  readonly dispid 110;
    // QteARepartir : Qté totale à répartir 
   property QteARepartir:Double  readonly dispid 105;
    // QteRestantARepartir : Qté restant à répartir 
   property QteRestantARepartir:Double  readonly dispid 106;
    // ListLignesResult : Collection des lignes resultants du split de la ligne d'origine 
   property ListLignesResult:IBICollection  readonly dispid 107;
    // NoSerie : Numéro de série/lot 
   property NoSerie:WideString  readonly dispid 111;
    // DepotEmpl : DepotEmpl 
   property DepotEmpl:IBODepotEmplacement  readonly dispid 112;
    // UserEmplacementsOrigineToUse : Collection des emplacements des lots d'entrée  
   property UserEmplacementsOrigineToUse:IBICollectionDispatch  readonly dispid 113;
  end;


// IBPConditionnementEnum : IBPConditionnementEnum Interface

 IBPConditionnementEnum = interface(IBIPersistObject)
   ['{19135D34-742C-4715-9200-2B7F5CF89770}']
   function Get_Conditionnement : IBPConditionnement; safecall;
   function Get_Intitule : WideString; safecall;
   procedure Set_Intitule(const pVal:WideString); safecall;
   function Get_Quantite : Double; safecall;
   procedure Set_Quantite(const pVal:Double); safecall;
   function Get_EC_EDICode : WideString; safecall;
   procedure Set_EC_EDICode(const pVal:WideString); safecall;
    // Conditionnement : property Conditionnement 
   property Conditionnement:IBPConditionnement read Get_Conditionnement;
    // Intitule : property Intitule 
   property Intitule:WideString read Get_Intitule write Set_Intitule;
    // Quantite : property Quantite 
   property Quantite:Double read Get_Quantite write Set_Quantite;
    // EC_EDICode : property EC_EDICode 
   property EC_EDICode:WideString read Get_EC_EDICode write Set_EC_EDICode;
  end;


// IBPConditionnementEnum : IBPConditionnementEnum Interface

 IBPConditionnementEnumDisp = dispinterface
   ['{19135D34-742C-4715-9200-2B7F5CF89770}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Conditionnement : property Conditionnement 
   property Conditionnement:IBPConditionnement  readonly dispid 100;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 101;
    // Quantite : property Quantite 
   property Quantite:Double dispid 102;
    // EC_EDICode : property EC_EDICode 
   property EC_EDICode:WideString dispid 103;
  end;


// IBPDossier2 : IBPDossier2 Interface

 IBPDossier2 = interface(IBIPersistObject)
   ['{A5202655-3815-4EC7-BFD1-5D9F6C7DD656}']
   function Get_FactoryDossier : IBITypeObjectFactory; safecall;
   function Get_D_RaisonSoc : WideString; safecall;
   procedure Set_D_RaisonSoc(const pVal:WideString); safecall;
   function Get_D_Profession : WideString; safecall;
   procedure Set_D_Profession(const pVal:WideString); safecall;
   function Get_Adresse : IAdresse; safecall;
   procedure Set_Adresse(const pAdresse:IAdresse); safecall;
   function Get_D_Commentaire : WideString; safecall;
   procedure Set_D_Commentaire(const pVal:WideString); safecall;
   function Get_D_Siret : WideString; safecall;
   procedure Set_D_Siret(const pVal:WideString); safecall;
   function Get_D_Ape : WideString; safecall;
   procedure Set_D_Ape(const pVal:WideString); safecall;
   function Get_D_Identifiant : WideString; safecall;
   procedure Set_D_Identifiant(const pVal:WideString); safecall;
   function Get_D_DebutExo(sElt:Smallint) : TDateTime; safecall;
   procedure Set_D_DebutExo(const sElt:Smallint; const parD_DebutExo:TDateTime); safecall;
   function Get_D_FinExo(sElt:Smallint) : TDateTime; safecall;
   procedure Set_D_FinExo(const sElt:Smallint; const parD_FinExo:TDateTime); safecall;
   function Get_D_LgCg : Smallint; safecall;
   procedure Set_D_LgCg(const pVal:Smallint); safecall;
   function Get_D_LgAn : Smallint; safecall;
   procedure Set_D_LgAn(const pVal:Smallint); safecall;
   function Get_D_FormatQtes : WideString; safecall;
   procedure Set_D_FormatQtes(const pVal:WideString); safecall;
   function Get_DeviseCompte : IBPDevise2; safecall;
   procedure Set_DeviseCompte(const pDevise:IBPDevise2); safecall;
   function Get_DeviseEquivalence : IBPDevise2; safecall;
   procedure Set_DeviseEquivalence(const pDevise:IBPDevise2); safecall;
   function Get_D_NumDossier : WideString; safecall;
   procedure Set_D_NumDossier(const pVal:WideString); safecall;
   function Get_D_EMail : WideString; safecall;
   procedure Set_D_EMail(const pVal:WideString); safecall;
   function Get_D_EMailExpert : WideString; safecall;
   procedure Set_D_EMailExpert(const pVal:WideString); safecall;
   function Get_D_Expert : WideString; safecall;
   procedure Set_D_Expert(const pVal:WideString); safecall;
   function Get_Telecom : ITelecom; safecall;
   procedure Set_Telecom(const pTelecom:ITelecom); safecall;
   function Get_D_ArchivePeriod : TDateTime; safecall;
   function Get_D_CloturePeriod : TDateTime; safecall;
   function Get_D_ProtPiece : WordBool; safecall;
   procedure Set_D_ProtPiece(const pVal:WordBool); safecall;
   function Get_IsExoCloture(sElt:Smallint) : WordBool; safecall;
   function Get_IsInterditSommeil : WordBool; safecall;
   function Get_Exercice : IDossierExercice; safecall;
   function Get_Tiers : IDossierTiers; safecall;
   function Get_AnalytiqueIFRS : IBPAnalytique3; safecall;
   procedure Set_AnalytiqueIFRS(const pObj:IBPAnalytique3); safecall;
   function Get_D_Facebook : WideString; safecall;
   procedure Set_D_Facebook(const pVal:WideString); safecall;
   function Get_D_LinkedIn : WideString; safecall;
   procedure Set_D_LinkedIn(const pVal:WideString); safecall;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory read Get_FactoryDossier;
    // D_RaisonSoc : property D_RaisonSoc 
   property D_RaisonSoc:WideString read Get_D_RaisonSoc write Set_D_RaisonSoc;
    // D_Profession : property D_Profession 
   property D_Profession:WideString read Get_D_Profession write Set_D_Profession;
    // Adresse : property Adresse 
   property Adresse:IAdresse read Get_Adresse write Set_Adresse;
    // D_Commentaire : property D_Commentaire 
   property D_Commentaire:WideString read Get_D_Commentaire write Set_D_Commentaire;
    // D_Siret : property D_Siret 
   property D_Siret:WideString read Get_D_Siret write Set_D_Siret;
    // D_Ape : property D_Ape 
   property D_Ape:WideString read Get_D_Ape write Set_D_Ape;
    // D_Identifiant : property D_Identifiant 
   property D_Identifiant:WideString read Get_D_Identifiant write Set_D_Identifiant;
    // D_DebutExo : property D_DebutExo 
   property D_DebutExo[sElt:Smallint]:TDateTime read Get_D_DebutExo write Set_D_DebutExo;
    // D_FinExo : property D_FinExo 
   property D_FinExo[sElt:Smallint]:TDateTime read Get_D_FinExo write Set_D_FinExo;
    // D_LgCg : property D_LgCg 
   property D_LgCg:Smallint read Get_D_LgCg write Set_D_LgCg;
    // D_LgAn : property D_LgAn 
   property D_LgAn:Smallint read Get_D_LgAn write Set_D_LgAn;
    // D_FormatQtes : property D_FormatQtes 
   property D_FormatQtes:WideString read Get_D_FormatQtes write Set_D_FormatQtes;
    // DeviseCompte : property DeviseCompte 
   property DeviseCompte:IBPDevise2 read Get_DeviseCompte write Set_DeviseCompte;
    // DeviseEquivalence : property DeviseEquivalence 
   property DeviseEquivalence:IBPDevise2 read Get_DeviseEquivalence write Set_DeviseEquivalence;
    // D_NumDossier : property D_NumDossier 
   property D_NumDossier:WideString read Get_D_NumDossier write Set_D_NumDossier;
    // D_EMail : property D_EMail 
   property D_EMail:WideString read Get_D_EMail write Set_D_EMail;
    // D_EMailExpert : property D_EMailExpert 
   property D_EMailExpert:WideString read Get_D_EMailExpert write Set_D_EMailExpert;
    // D_Expert : property D_Expert 
   property D_Expert:WideString read Get_D_Expert write Set_D_Expert;
    // Telecom : property Telecom 
   property Telecom:ITelecom read Get_Telecom write Set_Telecom;
    // D_ArchivePeriod : property D_ArchivePeriod 
   property D_ArchivePeriod:TDateTime read Get_D_ArchivePeriod;
    // D_CloturePeriod : property D_CloturePeriod 
   property D_CloturePeriod:TDateTime read Get_D_CloturePeriod;
    // D_ProtPiece : property D_ProtPiece 
   property D_ProtPiece:WordBool read Get_D_ProtPiece write Set_D_ProtPiece;
    // IsExoCloture : property IsExoCloture (D_Archivage) 
   property IsExoCloture[sElt:Smallint]:WordBool read Get_IsExoCloture;
    // IsInterditSommeil : property IsInterditSommeil 
   property IsInterditSommeil:WordBool read Get_IsInterditSommeil;
    // Exercice : property Exercice 
   property Exercice:IDossierExercice read Get_Exercice;
    // Tiers : property Tiers 
   property Tiers:IDossierTiers read Get_Tiers;
    // AnalytiqueIFRS : property Plan Analytique IFRS 
   property AnalytiqueIFRS:IBPAnalytique3 read Get_AnalytiqueIFRS write Set_AnalytiqueIFRS;
    // D_Facebook : property D_Facebook 
   property D_Facebook:WideString read Get_D_Facebook write Set_D_Facebook;
    // D_LinkedIn : property D_LinkedIn 
   property D_LinkedIn:WideString read Get_D_LinkedIn write Set_D_LinkedIn;
  end;


// IBPDossier2 : IBPDossier2 Interface

 IBPDossier2Disp = dispinterface
   ['{A5202655-3815-4EC7-BFD1-5D9F6C7DD656}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory  readonly dispid 100;
    // D_RaisonSoc : property D_RaisonSoc 
   property D_RaisonSoc:WideString dispid 101;
    // D_Profession : property D_Profession 
   property D_Profession:WideString dispid 102;
    // Adresse : property Adresse 
   property Adresse:IAdresse dispid 103;
    // D_Commentaire : property D_Commentaire 
   property D_Commentaire:WideString dispid 109;
    // D_Siret : property D_Siret 
   property D_Siret:WideString dispid 110;
    // D_Ape : property D_Ape 
   property D_Ape:WideString dispid 111;
    // D_Identifiant : property D_Identifiant 
   property D_Identifiant:WideString dispid 112;
    // D_DebutExo : property D_DebutExo 
   property D_DebutExo[sElt:Smallint]:TDateTime dispid 113;
    // D_FinExo : property D_FinExo 
   property D_FinExo[sElt:Smallint]:TDateTime dispid 114;
    // D_LgCg : property D_LgCg 
   property D_LgCg:Smallint dispid 115;
    // D_LgAn : property D_LgAn 
   property D_LgAn:Smallint dispid 116;
    // D_FormatQtes : property D_FormatQtes 
   property D_FormatQtes:WideString dispid 117;
    // DeviseCompte : property DeviseCompte 
   property DeviseCompte:IBPDevise2 dispid 118;
    // DeviseEquivalence : property DeviseEquivalence 
   property DeviseEquivalence:IBPDevise2 dispid 119;
    // D_NumDossier : property D_NumDossier 
   property D_NumDossier:WideString dispid 120;
    // D_EMail : property D_EMail 
   property D_EMail:WideString dispid 121;
    // D_EMailExpert : property D_EMailExpert 
   property D_EMailExpert:WideString dispid 122;
    // D_Expert : property D_Expert 
   property D_Expert:WideString dispid 123;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 124;
    // D_ArchivePeriod : property D_ArchivePeriod 
   property D_ArchivePeriod:TDateTime  readonly dispid 128;
    // D_CloturePeriod : property D_CloturePeriod 
   property D_CloturePeriod:TDateTime  readonly dispid 129;
    // D_ProtPiece : property D_ProtPiece 
   property D_ProtPiece:WordBool dispid 130;
    // IsExoCloture : property IsExoCloture (D_Archivage) 
   property IsExoCloture[sElt:Smallint]:WordBool  readonly dispid 131;
    // IsInterditSommeil : property IsInterditSommeil 
   property IsInterditSommeil:WordBool  readonly dispid 132;
    // Exercice : property Exercice 
   property Exercice:IDossierExercice  readonly dispid 133;
    // Tiers : property Tiers 
   property Tiers:IDossierTiers  readonly dispid 134;
    // AnalytiqueIFRS : property Plan Analytique IFRS 
   property AnalytiqueIFRS:IBPAnalytique3 dispid 135;
    // D_Facebook : property D_Facebook 
   property D_Facebook:WideString dispid 136;
    // D_LinkedIn : property D_LinkedIn 
   property D_LinkedIn:WideString dispid 137;
  end;


// IBPSoucheVente : IBPSoucheVente Interface

 IBPSoucheVente = interface(IBISouche)
   ['{F421273D-939C-4E59-9585-0471D6814506}']
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pJournal:IBOJournal3); safecall;
   function Get_JournalSituation : IBOJournal3; safecall;
   procedure Set_JournalSituation(const pJournal:IBOJournal3); safecall;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
    // JournalSituation : property JournalSituation 
   property JournalSituation:IBOJournal3 read Get_JournalSituation write Set_JournalSituation;
  end;


// IBPSoucheVente : IBPSoucheVente Interface

 IBPSoucheVenteDisp = dispinterface
   ['{F421273D-939C-4E59-9585-0471D6814506}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType):WideString;dispid 103;
    // WriteCurrentPiece : methode WriteCurrentPiece 
   procedure WriteCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType;sVal:WideString);dispid 104;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // IsValide : property IsValide 
   property IsValide:WordBool dispid 102;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 121;
    // JournalSituation : property JournalSituation 
   property JournalSituation:IBOJournal3 dispid 122;
  end;


// IBPSoucheAchat : IBPSoucheAchat Interface

 IBPSoucheAchat = interface(IBISouche)
   ['{DD7ED7B5-8337-4443-A258-CD14BC624221}']
   function Get_Journal : IBOJournal3; safecall;
   procedure Set_Journal(const pJournal:IBOJournal3); safecall;
   function Get_JournalSituation : IBOJournal3; safecall;
   procedure Set_JournalSituation(const pJournal:IBOJournal3); safecall;
    // Journal : property Journal 
   property Journal:IBOJournal3 read Get_Journal write Set_Journal;
    // JournalSituation : property JournalSituation 
   property JournalSituation:IBOJournal3 read Get_JournalSituation write Set_JournalSituation;
  end;


// IBPSoucheAchat : IBPSoucheAchat Interface

 IBPSoucheAchatDisp = dispinterface
   ['{DD7ED7B5-8337-4443-A258-CD14BC624221}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType):WideString;dispid 103;
    // WriteCurrentPiece : methode WriteCurrentPiece 
   procedure WriteCurrentPiece(DO_Type:DocumentType;DO_Provenance:DocumentProvenanceType;sVal:WideString);dispid 104;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // IsValide : property IsValide 
   property IsValide:WordBool dispid 102;
    // Journal : property Journal 
   property Journal:IBOJournal3 dispid 121;
    // JournalSituation : property JournalSituation 
   property JournalSituation:IBOJournal3 dispid 122;
  end;


// IBPParamDocInterne : IBPParamDocInterne Interface

 IBPParamDocInterne = interface(IBIParamDoc)
   ['{D765AB8F-E436-47FA-84E8-C997DC6B671A}']
   function Get_D_MvtStock : DocumentInterneMvtType; safecall;
   procedure Set_D_MvtStock(const pVal:DocumentInterneMvtType); safecall;
   function Get_DefaultDepot : IBODepot3; safecall;
   procedure Set_DefaultDepot(const pObject:IBODepot3); safecall;
    // D_MvtStock : property D_MvtStock 
   property D_MvtStock:DocumentInterneMvtType read Get_D_MvtStock write Set_D_MvtStock;
    // DefaultDepot : Dépot par défaut 
   property DefaultDepot:IBODepot3 read Get_DefaultDepot write Set_DefaultDepot;
  end;


// IBPParamDocInterne : IBPParamDocInterne Interface

 IBPParamDocInterneDisp = dispinterface
   ['{D765AB8F-E436-47FA-84E8-C997DC6B671A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // ReadCurrentPiece : methode ReadCurrentPiece 
   function ReadCurrentPiece(pSouche:IBISouche):WideString;dispid 106;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Intitule : property Intitule 
   property Intitule:WideString dispid 100;
    // Domaine : property Domaine 
   property Domaine:DomaineType  readonly dispid 101;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 102;
    // DO_Provenance : property DO_Provenance 
   property DO_Provenance:DocumentProvenanceType  readonly dispid 103;
    // Validation : property Validation 
   property Validation[sElt:Smallint]:WordBool dispid 104;
    // DefaultSouche : Souche par default 
   property DefaultSouche:IBISouche dispid 105;
    // ValidationStr : property ValidationStr 
   property ValidationStr[sElt:Smallint]:WideString dispid 107;
    // D_MvtStock : property D_MvtStock 
   property D_MvtStock:DocumentInterneMvtType dispid 121;
    // DefaultDepot : Dépot par défaut 
   property DefaultDepot:IBODepot3 dispid 122;
  end;


// IBPDossierCial : IBPDossierCial Interface

 IBPDossierCial = interface(IBIPersistObject)
   ['{A89B56F5-26F8-4A6E-8A14-76AA6560F759}']
   function Get_FactoryDossier : IBITypeObjectFactory; safecall;
   function Get_D_RaisonS : WideString; safecall;
   procedure Set_D_RaisonS(const pVal:WideString); safecall;
   function Get_D_FormatQte : WideString; safecall;
   procedure Set_D_FormatQte(const pVal:WideString); safecall;
   function Get_D_FormatPrix : WideString; safecall;
   procedure Set_D_FormatPrix(const pVal:WideString); safecall;
   function Get_DeviseCompte : IBPDevise2; safecall;
   procedure Set_DeviseCompte(const pDevise:IBPDevise2); safecall;
   function Get_DeviseEquivalence : IBPDevise2; safecall;
   procedure Set_DeviseEquivalence(const pDevise:IBPDevise2); safecall;
   function Get_D_ArchivePeriod : TDateTime; safecall;
   function Get_D_ValiditePeriod : Smallint; safecall;
   procedure Set_D_ValiditePeriod(const pVal:Smallint); safecall;
   function Get_D_DerniereCloture : TDateTime; safecall;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory read Get_FactoryDossier;
    // D_RaisonS : property D_RaisonS 
   property D_RaisonS:WideString read Get_D_RaisonS write Set_D_RaisonS;
    // D_FormatQte : property D_FormatQte 
   property D_FormatQte:WideString read Get_D_FormatQte write Set_D_FormatQte;
    // D_FormatPrix : property D_FormatPrix 
   property D_FormatPrix:WideString read Get_D_FormatPrix write Set_D_FormatPrix;
    // DeviseCompte : property DeviseCompte 
   property DeviseCompte:IBPDevise2 read Get_DeviseCompte write Set_DeviseCompte;
    // DeviseEquivalence : property DeviseEquivalence 
   property DeviseEquivalence:IBPDevise2 read Get_DeviseEquivalence write Set_DeviseEquivalence;
    // D_ArchivePeriod : property D_ArchivePeriod 
   property D_ArchivePeriod:TDateTime read Get_D_ArchivePeriod;
    // D_ValiditePeriod : property D_ValiditePeriod 
   property D_ValiditePeriod:Smallint read Get_D_ValiditePeriod write Set_D_ValiditePeriod;
    // D_DerniereCloture : property D_DerniereCloture 
   property D_DerniereCloture:TDateTime read Get_D_DerniereCloture;
  end;


// IBPDossierCial : IBPDossierCial Interface

 IBPDossierCialDisp = dispinterface
   ['{A89B56F5-26F8-4A6E-8A14-76AA6560F759}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDossier : property FactoryDossier 
   property FactoryDossier:IBITypeObjectFactory  readonly dispid 100;
    // D_RaisonS : property D_RaisonS 
   property D_RaisonS:WideString dispid 101;
    // D_FormatQte : property D_FormatQte 
   property D_FormatQte:WideString dispid 102;
    // D_FormatPrix : property D_FormatPrix 
   property D_FormatPrix:WideString dispid 103;
    // DeviseCompte : property DeviseCompte 
   property DeviseCompte:IBPDevise2 dispid 104;
    // DeviseEquivalence : property DeviseEquivalence 
   property DeviseEquivalence:IBPDevise2 dispid 105;
    // D_ArchivePeriod : property D_ArchivePeriod 
   property D_ArchivePeriod:TDateTime  readonly dispid 106;
    // D_ValiditePeriod : property D_ValiditePeriod 
   property D_ValiditePeriod:Smallint dispid 107;
    // D_DerniereCloture : property D_DerniereCloture 
   property D_DerniereCloture:TDateTime  readonly dispid 108;
  end;


// IBPDossierParamCial : IBPDossierParamCial Interface

 IBPDossierParamCial = interface(IBIPersistObject)
   ['{9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}']
   function Get_FactoryDossierParam : IBITypeObjectFactory; safecall;
   function Get_AnalytiqueArticle : IBPAnalytique3; safecall;
   procedure Set_AnalytiqueArticle(const pAnalytique:IBPAnalytique3); safecall;
   function Get_AnalytiqueAffaire : IBPAnalytique3; safecall;
   procedure Set_AnalytiqueAffaire(const pAnalytique:IBPAnalytique3); safecall;
   function Get_Emplacement_IsMulti : WordBool; safecall;
   function Get_Emplacement_PrioriteDestockage : DossierParamEmplacementPriorite; safecall;
   procedure Set_Emplacement_PrioriteDestockage(const pVal:DossierParamEmplacementPriorite); safecall;
   function Get_Emplacement_CanBeControle : WordBool; safecall;
   procedure Set_Emplacement_CanBeControle(const pVal:WordBool); safecall;
   function Get_IsInterditSommeil : WordBool; safecall;
   function Get_DebutExercice : TDateTime; safecall;
   function Get_FinExercice : TDateTime; safecall;
   function Get_DebutExerciceFirst : TDateTime; safecall;
   function Get_FinExerciceFirst : TDateTime; safecall;
   function Get_TypeZoneSerie : DossierParamTypeZone; safecall;
   procedure Set_TypeZoneSerie(const pVal:DossierParamTypeZone); safecall;
   function Get_TypeZoneComplement : DossierParamTypeZone; safecall;
   procedure Set_TypeZoneComplement(const pVal:DossierParamTypeZone); safecall;
    // FactoryDossierParam : property FactoryDossierParam 
   property FactoryDossierParam:IBITypeObjectFactory read Get_FactoryDossierParam;
    // AnalytiqueArticle : property Plan Analytique Article 
   property AnalytiqueArticle:IBPAnalytique3 read Get_AnalytiqueArticle write Set_AnalytiqueArticle;
    // AnalytiqueAffaire : property Plan Analytique Affaire 
   property AnalytiqueAffaire:IBPAnalytique3 read Get_AnalytiqueAffaire write Set_AnalytiqueAffaire;
    // Emplacement_IsMulti : property Emplacement_IsMulti 
   property Emplacement_IsMulti:WordBool read Get_Emplacement_IsMulti;
    // Emplacement_PrioriteDestockage : property Emplacement_PrioriteDestockage 
   property Emplacement_PrioriteDestockage:DossierParamEmplacementPriorite read Get_Emplacement_PrioriteDestockage write Set_Emplacement_PrioriteDestockage;
    // Emplacement_CanBeControle : property Emplacement_CanBeControle 
   property Emplacement_CanBeControle:WordBool read Get_Emplacement_CanBeControle write Set_Emplacement_CanBeControle;
    // IsInterditSommeil : property IsInterditSommeil 
   property IsInterditSommeil:WordBool read Get_IsInterditSommeil;
    // DebutExercice : property DebutExercice 
   property DebutExercice:TDateTime read Get_DebutExercice;
    // FinExercice : property FinExercice 
   property FinExercice:TDateTime read Get_FinExercice;
    // DebutExerciceFirst : property DebutExerciceFirst 
   property DebutExerciceFirst:TDateTime read Get_DebutExerciceFirst;
    // FinExerciceFirst : property FinExerciceFirst 
   property FinExerciceFirst:TDateTime read Get_FinExerciceFirst;
    // TypeZoneSerie : property TypeZoneSerie 
   property TypeZoneSerie:DossierParamTypeZone read Get_TypeZoneSerie write Set_TypeZoneSerie;
    // TypeZoneComplement : property TypeZoneComplement 
   property TypeZoneComplement:DossierParamTypeZone read Get_TypeZoneComplement write Set_TypeZoneComplement;
  end;


// IBPDossierParamCial : IBPDossierParamCial Interface

 IBPDossierParamCialDisp = dispinterface
   ['{9AF841CA-59E6-4EAC-95B7-B9B8F48A3EE7}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDossierParam : property FactoryDossierParam 
   property FactoryDossierParam:IBITypeObjectFactory  readonly dispid 100;
    // AnalytiqueArticle : property Plan Analytique Article 
   property AnalytiqueArticle:IBPAnalytique3 dispid 101;
    // AnalytiqueAffaire : property Plan Analytique Affaire 
   property AnalytiqueAffaire:IBPAnalytique3 dispid 102;
    // Emplacement_IsMulti : property Emplacement_IsMulti 
   property Emplacement_IsMulti:WordBool  readonly dispid 103;
    // Emplacement_PrioriteDestockage : property Emplacement_PrioriteDestockage 
   property Emplacement_PrioriteDestockage:DossierParamEmplacementPriorite dispid 104;
    // Emplacement_CanBeControle : property Emplacement_CanBeControle 
   property Emplacement_CanBeControle:WordBool dispid 105;
    // IsInterditSommeil : property IsInterditSommeil 
   property IsInterditSommeil:WordBool  readonly dispid 106;
    // DebutExercice : property DebutExercice 
   property DebutExercice:TDateTime  readonly dispid 107;
    // FinExercice : property FinExercice 
   property FinExercice:TDateTime  readonly dispid 108;
    // DebutExerciceFirst : property DebutExerciceFirst 
   property DebutExerciceFirst:TDateTime  readonly dispid 109;
    // FinExerciceFirst : property FinExerciceFirst 
   property FinExerciceFirst:TDateTime  readonly dispid 110;
    // TypeZoneSerie : property TypeZoneSerie 
   property TypeZoneSerie:DossierParamTypeZone dispid 111;
    // TypeZoneComplement : property TypeZoneComplement 
   property TypeZoneComplement:DossierParamTypeZone dispid 112;
  end;


// IBPLibelleCpta : IBPLibelleCpta Interface

 IBPLibelleCpta = interface(IBIPersistObject)
   ['{041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}']
   function Get_LangueStr(sLangueType:LangueType) : WideString; safecall;
   procedure Set_LangueStr(const sLangueType:LangueType; const parLangueStr:WideString); safecall;
    // LangueStr : property LangueStr 
   property LangueStr[sLangueType:LangueType]:WideString read Get_LangueStr write Set_LangueStr;
  end;


// IBPLibelleCpta : IBPLibelleCpta Interface

 IBPLibelleCptaDisp = dispinterface
   ['{041ADEC3-DB1F-4CCD-BB99-A4970EFC0DE9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // LangueStr : property LangueStr 
   property LangueStr[sLangueType:LangueType]:WideString dispid 101;
  end;


// IBOTiersReglement3 : IBOTiersReglement3 Interface

 IBOTiersReglement3 = interface(IBIReglement)
   ['{DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}']
   function Get_FactoryTiersReglement : IBITypeObjectFactory; safecall;
   function Get_Tiers : IBOTiers3; safecall;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory read Get_FactoryTiersReglement;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3 read Get_Tiers;
  end;


// IBOTiersReglement3 : IBOTiersReglement3 Interface

 IBOTiersReglement3Disp = dispinterface
   ['{DCE180EC-1F59-47C0-AAE7-56C2A1CEC8DE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Echeance : methode Echeance 
   function Echeance(dDate:TDateTime):TDateTime;dispid 106;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 100;
    // Condition : property Condition 
   property Condition:ReglementConditionType dispid 101;
    // NbJour : property NbJour 
   property NbJour:Smallint dispid 102;
    // JourTb : property JourTb 
   property JourTb[sElt:Smallint]:Smallint dispid 103;
    // TRepart : property TRepart 
   property TRepart:ReglementRepartitionType dispid 104;
    // VRepart : property VRepart 
   property VRepart:Double dispid 105;
    // FactoryTiersReglement : property FactoryTiersReglement 
   property FactoryTiersReglement:IBITypeObjectFactory  readonly dispid 200;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3  readonly dispid 201;
  end;


// IBOTiersContact3 : IBOTiersContact3 Interface

 IBOTiersContact3 = interface(IBIContact2)
   ['{AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}']
   function Get_FactoryTiersContact : IBITypeObjectFactory; safecall;
   function Get_Tiers : IBOTiers3; safecall;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory read Get_FactoryTiersContact;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3 read Get_Tiers;
  end;


// IBOTiersContact3 : IBOTiersContact3 Interface

 IBOTiersContact3Disp = dispinterface
   ['{AA5F6996-2DAE-4E36-9A51-26BFD1457CB9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Nom : property Nom 
   property Nom:WideString dispid 100;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 101;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 104;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite dispid 108;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact dispid 109;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 122;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 123;
    // Skype : property Skype 
   property Skype:WideString dispid 124;
    // FactoryTiersContact : property FactoryTiersContact 
   property FactoryTiersContact:IBITypeObjectFactory  readonly dispid 110;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3  readonly dispid 111;
  end;


// IBOTiersMedia3 : IBOTiersMedia3 Interface

 IBOTiersMedia3 = interface(IBIMedia)
   ['{1A5D8A40-515B-47E1-A6BD-D7F5822484F5}']
   function Get_FactoryTiersMedia : IBITypeObjectFactory; safecall;
   function Get_Tiers : IBOTiers3; safecall;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory read Get_FactoryTiersMedia;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3 read Get_Tiers;
  end;


// IBOTiersMedia3 : IBOTiersMedia3 Interface

 IBOTiersMedia3Disp = dispinterface
   ['{1A5D8A40-515B-47E1-A6BD-D7F5822484F5}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString dispid 100;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString dispid 101;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString  readonly dispid 102;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString dispid 103;
    // FactoryTiersMedia : property FactoryTiersMedia 
   property FactoryTiersMedia:IBITypeObjectFactory  readonly dispid 200;
    // Tiers : property Tiers 
   property Tiers:IBOTiers3  readonly dispid 201;
  end;


// IBOEcritureA3 : IBOEcritureA3 Interface

 IBOEcritureA3 = interface(IBIPersistObject)
   ['{070D4C75-2DD3-4D5D-A286-86093425C9CF}']
   function Get_FactoryEcritureA : IBOEcritureAFactory2; safecall;
   function Get_Ecriture : IBOEcriture3; safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pCompteA:IBOCompteA3); safecall;
   function Get_EA_Montant : Double; safecall;
   procedure Set_EA_Montant(const pVal:Double); safecall;
   function Get_EA_Quantite : Double; safecall;
   procedure Set_EA_Quantite(const pVal:Double); safecall;
    // FactoryEcritureA : property FactoryEcritureA 
   property FactoryEcritureA:IBOEcritureAFactory2 read Get_FactoryEcritureA;
    // Ecriture : property Ecriture 
   property Ecriture:IBOEcriture3 read Get_Ecriture;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // EA_Montant : property EA_Montant 
   property EA_Montant:Double read Get_EA_Montant write Set_EA_Montant;
    // EA_Quantite : property EA_Quantite 
   property EA_Quantite:Double read Get_EA_Quantite write Set_EA_Quantite;
  end;


// IBOEcritureA3 : IBOEcritureA3 Interface

 IBOEcritureA3Disp = dispinterface
   ['{070D4C75-2DD3-4D5D-A286-86093425C9CF}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryEcritureA : property FactoryEcritureA 
   property FactoryEcritureA:IBOEcritureAFactory2  readonly dispid 100;
    // Ecriture : property Ecriture 
   property Ecriture:IBOEcriture3  readonly dispid 101;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 102;
    // EA_Montant : property EA_Montant 
   property EA_Montant:Double dispid 103;
    // EA_Quantite : property EA_Quantite 
   property EA_Quantite:Double dispid 104;
  end;


// IBOArticleTarifQteFournisseur3 : IBOArticleTarifQteFournisseur3 Interface

 IBOArticleTarifQteFournisseur3 = interface(IBIArticleTarifQte3)
   ['{3B9E7020-62B3-4A9E-9B17-F646A2B2588B}']
   function Get_FactoryArticleTarifQteFournisseur : IBITypeObjectFactory; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
    // FactoryArticleTarifQteFournisseur : property FactoryArticleTarifQteFournisseur 
   property FactoryArticleTarifQteFournisseur:IBITypeObjectFactory read Get_FactoryArticleTarifQteFournisseur;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur;
  end;


// IBOArticleTarifQteFournisseur3 : IBOArticleTarifQteFournisseur3 Interface

 IBOArticleTarifQteFournisseur3Disp = dispinterface
   ['{3B9E7020-62B3-4A9E-9B17-F646A2B2588B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
    // PrixNet : property PrixNet 
   property PrixNet:Double dispid 104;
    // FactoryArticleTarifQteFournisseur : property FactoryArticleTarifQteFournisseur 
   property FactoryArticleTarifQteFournisseur:IBITypeObjectFactory  readonly dispid 120;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3  readonly dispid 121;
  end;


// IBOArticleTarifGammeFournisseur3 : IBOArticleTarifGammeFournisseur3 Interface

 IBOArticleTarifGammeFournisseur3 = interface(IBIArticleTarifGamme3)
   ['{ADD705FD-9C81-492E-BD20-A38B5B05101E}']
   function Get_FactoryArticleTarifGammeFournisseur : IBITypeObjectFactory; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
   function Get_TG_Ref : WideString; safecall;
   procedure Set_TG_Ref(const pVal:WideString); safecall;
   function Get_TG_CodeBarre : WideString; safecall;
   procedure Set_TG_CodeBarre(const pVal:WideString); safecall;
    // FactoryArticleTarifGammeFournisseur : property FactoryArticleTarifGammeFournisseur 
   property FactoryArticleTarifGammeFournisseur:IBITypeObjectFactory read Get_FactoryArticleTarifGammeFournisseur;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur;
    // TG_Ref : property TG_Ref 
   property TG_Ref:WideString read Get_TG_Ref write Set_TG_Ref;
    // TG_CodeBarre : property TG_CodeBarre 
   property TG_CodeBarre:WideString read Get_TG_CodeBarre write Set_TG_CodeBarre;
  end;


// IBOArticleTarifGammeFournisseur3 : IBOArticleTarifGammeFournisseur3 Interface

 IBOArticleTarifGammeFournisseur3Disp = dispinterface
   ['{ADD705FD-9C81-492E-BD20-A38B5B05101E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 dispid 102;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 dispid 103;
    // Prix : property Prix 
   property Prix:Double dispid 104;
    // FactoryArticleTarifGammeFournisseur : property FactoryArticleTarifGammeFournisseur 
   property FactoryArticleTarifGammeFournisseur:IBITypeObjectFactory  readonly dispid 120;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3  readonly dispid 121;
    // TG_Ref : property TG_Ref 
   property TG_Ref:WideString dispid 122;
    // TG_CodeBarre : property TG_CodeBarre 
   property TG_CodeBarre:WideString dispid 123;
  end;


// IBOArticleMedia3 : IBOArticleMedia3 Interface

 IBOArticleMedia3 = interface(IBIMedia)
   ['{D930E138-156E-4DFA-92F8-42A986242C6D}']
   function Get_FactoryArticleMedia : IBITypeObjectFactory; safecall;
   function Get_Article : IBOArticle3; safecall;
    // FactoryArticleMedia : property FactoryArticleMedia 
   property FactoryArticleMedia:IBITypeObjectFactory read Get_FactoryArticleMedia;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
  end;


// IBOArticleMedia3 : IBOArticleMedia3 Interface

 IBOArticleMedia3Disp = dispinterface
   ['{D930E138-156E-4DFA-92F8-42A986242C6D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString dispid 100;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString dispid 101;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString  readonly dispid 102;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString dispid 103;
    // FactoryArticleMedia : property FactoryArticleMedia 
   property FactoryArticleMedia:IBITypeObjectFactory  readonly dispid 200;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 201;
  end;


// IBOArticleGammeEnumRef3 : IBOArticleGammeEnumRef3 Interface

 IBOArticleGammeEnumRef3 = interface(IBIPersistObject)
   ['{9295FEC0-B808-492D-A768-0207A1364732}']
   function Get_FactoryArticleGammeEnumRef : IBITypeObjectFactory; safecall;
   function Get_ArticleGammeEnum1 : IBOArticleGammeEnum3; safecall;
   function Get_ArticleGammeEnum2 : IBOArticleGammeEnum3; safecall;
   function Get_Article : IBOArticle3; safecall;
   function Get_AE_Ref : WideString; safecall;
   procedure Set_AE_Ref(const pVal:WideString); safecall;
   function Get_AE_PrixAch : Double; safecall;
   procedure Set_AE_PrixAch(const pVal:Double); safecall;
   function Get_AE_CodeBarre : WideString; safecall;
   procedure Set_AE_CodeBarre(const pVal:WideString); safecall;
   function Get_AR_PUNet : Double; safecall;
   procedure Set_AR_PUNet(const pVal:Double); safecall;
   function Get_AR_CoutStd : Double; safecall;
   procedure Set_AR_CoutStd(const pVal:Double); safecall;
   function Get_AE_Sommeil : WordBool; safecall;
   procedure Set_AE_Sommeil(const pVal:WordBool); safecall;
    // FactoryArticleGammeEnumRef : property FactoryArticleGammeEnumRef 
   property FactoryArticleGammeEnumRef:IBITypeObjectFactory read Get_FactoryArticleGammeEnumRef;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleGammeEnum1;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleGammeEnum2;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article;
    // AE_Ref : property AE_Ref 
   property AE_Ref:WideString read Get_AE_Ref write Set_AE_Ref;
    // AE_PrixAch : property AE_PrixAch 
   property AE_PrixAch:Double read Get_AE_PrixAch write Set_AE_PrixAch;
    // AE_CodeBarre : property AE_CodeBarre 
   property AE_CodeBarre:WideString read Get_AE_CodeBarre write Set_AE_CodeBarre;
    // AR_PUNet : property AR_PUNet 
   property AR_PUNet:Double read Get_AR_PUNet write Set_AR_PUNet;
    // AR_CoutStd : property AR_CoutStd 
   property AR_CoutStd:Double read Get_AR_CoutStd write Set_AR_CoutStd;
    // AE_Sommeil : property AE_Sommeil 
   property AE_Sommeil:WordBool read Get_AE_Sommeil write Set_AE_Sommeil;
  end;


// IBOArticleGammeEnumRef3 : IBOArticleGammeEnumRef3 Interface

 IBOArticleGammeEnumRef3Disp = dispinterface
   ['{9295FEC0-B808-492D-A768-0207A1364732}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleGammeEnumRef : property FactoryArticleGammeEnumRef 
   property FactoryArticleGammeEnumRef:IBITypeObjectFactory  readonly dispid 100;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 101;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 102;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 103;
    // AE_Ref : property AE_Ref 
   property AE_Ref:WideString dispid 104;
    // AE_PrixAch : property AE_PrixAch 
   property AE_PrixAch:Double dispid 105;
    // AE_CodeBarre : property AE_CodeBarre 
   property AE_CodeBarre:WideString dispid 106;
    // AR_PUNet : property AR_PUNet 
   property AR_PUNet:Double dispid 107;
    // AR_CoutStd : property AR_CoutStd 
   property AR_CoutStd:Double dispid 108;
    // AE_Sommeil : property AE_Sommeil 
   property AE_Sommeil:WordBool dispid 109;
  end;


// IBOArticleNomenclature3 : IBOArticleNomenclature3 Interface

 IBOArticleNomenclature3 = interface(IBIPersistObject)
   ['{2D056C64-66BA-453E-A0ED-EC5DB6FFC189}']
   function Get_FactoryArticleNomenclature : IBITypeObjectFactory; safecall;
   function Get_Article : IBOArticle3; safecall;
   function Get_ArticleComposant : IBOArticle3; safecall;
   procedure Set_ArticleComposant(const pArticle:IBOArticle3); safecall;
   function Get_ArticleGammeEnum1 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleGammeEnum1(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_ArticleGammeEnum2 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleGammeEnum2(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_NO_Qte : Double; safecall;
   procedure Set_NO_Qte(const pVal:Double); safecall;
   function Get_NO_Type : ComposantType; safecall;
   procedure Set_NO_Type(const pVal:ComposantType); safecall;
   function Get_NO_Repartition : Double; safecall;
   procedure Set_NO_Repartition(const pVal:Double); safecall;
   function Get_NO_Operation : WideString; safecall;
   procedure Set_NO_Operation(const pVal:WideString); safecall;
   function Get_NO_Commentaire : WideString; safecall;
   procedure Set_NO_Commentaire(const pVal:WideString); safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pObject:IBODepot3); safecall;
   function Get_ArticleComposeGammeEnum1 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleComposeGammeEnum1(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_ArticleComposeGammeEnum2 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleComposeGammeEnum2(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_SousTraitance : WordBool; safecall;
   procedure Set_SousTraitance(const pVal:WordBool); safecall;
   function Get_ArticleCompose : IBOArticle3; safecall;
   function Get_ArticleComposantGammeEnum1 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleComposantGammeEnum1(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
   function Get_ArticleComposantGammeEnum2 : IBOArticleGammeEnum3; safecall;
   procedure Set_ArticleComposantGammeEnum2(const pArticleGammeEnum:IBOArticleGammeEnum3); safecall;
    // FactoryArticleNomenclature : property FactoryArticleNomenclature 
   property FactoryArticleNomenclature:IBITypeObjectFactory read Get_FactoryArticleNomenclature;
    // Article : property DEPRECATED : Use ArticleCompose 
   property Article:IBOArticle3 read Get_Article;
    // ArticleComposant : property ArticleComposant 
   property ArticleComposant:IBOArticle3 read Get_ArticleComposant write Set_ArticleComposant;
    // ArticleGammeEnum1 : property DEPRECATED : Use ArticleComposantGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleGammeEnum1 write Set_ArticleGammeEnum1;
    // ArticleGammeEnum2 : property DEPRECATED : Use ArticleComposantGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleGammeEnum2 write Set_ArticleGammeEnum2;
    // NO_Qte : property NO_Qte 
   property NO_Qte:Double read Get_NO_Qte write Set_NO_Qte;
    // NO_Type : property NO_Type 
   property NO_Type:ComposantType read Get_NO_Type write Set_NO_Type;
    // NO_Repartition : property NO_Repartition 
   property NO_Repartition:Double read Get_NO_Repartition write Set_NO_Repartition;
    // NO_Operation : property NO_Operation 
   property NO_Operation:WideString read Get_NO_Operation write Set_NO_Operation;
    // NO_Commentaire : property NO_Commentaire 
   property NO_Commentaire:WideString read Get_NO_Commentaire write Set_NO_Commentaire;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // ArticleComposeGammeEnum1 : property ArticleComposeGammeEnum1 
   property ArticleComposeGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleComposeGammeEnum1 write Set_ArticleComposeGammeEnum1;
    // ArticleComposeGammeEnum2 : property ArticleComposeGammeEnum2 
   property ArticleComposeGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleComposeGammeEnum2 write Set_ArticleComposeGammeEnum2;
    // SousTraitance : property SousTraitance 
   property SousTraitance:WordBool read Get_SousTraitance write Set_SousTraitance;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 read Get_ArticleCompose;
    // ArticleComposantGammeEnum1 : property ArticleComposantGammeEnum1 
   property ArticleComposantGammeEnum1:IBOArticleGammeEnum3 read Get_ArticleComposantGammeEnum1 write Set_ArticleComposantGammeEnum1;
    // ArticleComposantGammeEnum2 : property ArticleComposantGammeEnum2 
   property ArticleComposantGammeEnum2:IBOArticleGammeEnum3 read Get_ArticleComposantGammeEnum2 write Set_ArticleComposantGammeEnum2;
  end;


// IBOArticleNomenclature3 : IBOArticleNomenclature3 Interface

 IBOArticleNomenclature3Disp = dispinterface
   ['{2D056C64-66BA-453E-A0ED-EC5DB6FFC189}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleNomenclature : property FactoryArticleNomenclature 
   property FactoryArticleNomenclature:IBITypeObjectFactory  readonly dispid 100;
    // Article : property DEPRECATED : Use ArticleCompose 
   property Article:IBOArticle3  readonly dispid 101;
    // ArticleComposant : property ArticleComposant 
   property ArticleComposant:IBOArticle3 dispid 102;
    // ArticleGammeEnum1 : property DEPRECATED : Use ArticleComposantGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 dispid 103;
    // ArticleGammeEnum2 : property DEPRECATED : Use ArticleComposantGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 dispid 104;
    // NO_Qte : property NO_Qte 
   property NO_Qte:Double dispid 105;
    // NO_Type : property NO_Type 
   property NO_Type:ComposantType dispid 106;
    // NO_Repartition : property NO_Repartition 
   property NO_Repartition:Double dispid 107;
    // NO_Operation : property NO_Operation 
   property NO_Operation:WideString dispid 108;
    // NO_Commentaire : property NO_Commentaire 
   property NO_Commentaire:WideString dispid 109;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 110;
    // ArticleComposeGammeEnum1 : property ArticleComposeGammeEnum1 
   property ArticleComposeGammeEnum1:IBOArticleGammeEnum3 dispid 111;
    // ArticleComposeGammeEnum2 : property ArticleComposeGammeEnum2 
   property ArticleComposeGammeEnum2:IBOArticleGammeEnum3 dispid 112;
    // SousTraitance : property SousTraitance 
   property SousTraitance:WordBool dispid 113;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3  readonly dispid 114;
    // ArticleComposantGammeEnum1 : property ArticleComposantGammeEnum1 
   property ArticleComposantGammeEnum1:IBOArticleGammeEnum3 dispid 115;
    // ArticleComposantGammeEnum2 : property ArticleComposantGammeEnum2 
   property ArticleComposantGammeEnum2:IBOArticleGammeEnum3 dispid 116;
  end;


// IBOArticleTarifQteClient3 : IBOArticleTarifQteClient3 Interface

 IBOArticleTarifQteClient3 = interface(IBIArticleTarifQte3)
   ['{91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}']
   function Get_FactoryArticleTarifQteClient : IBITypeObjectFactory; safecall;
   function Get_Client : IBOClient3; safecall;
    // FactoryArticleTarifQteClient : property FactoryArticleTarifQteClient 
   property FactoryArticleTarifQteClient:IBITypeObjectFactory read Get_FactoryArticleTarifQteClient;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
  end;


// IBOArticleTarifQteClient3 : IBOArticleTarifQteClient3 Interface

 IBOArticleTarifQteClient3Disp = dispinterface
   ['{91F61DDA-99C3-4DAD-86BE-4F630F9FCB3B}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
    // PrixNet : property PrixNet 
   property PrixNet:Double dispid 104;
    // FactoryArticleTarifQteClient : property FactoryArticleTarifQteClient 
   property FactoryArticleTarifQteClient:IBITypeObjectFactory  readonly dispid 120;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 121;
  end;


// IBOArticleTarifCondClient3 : IBOArticleTarifCondClient3 Interface

 IBOArticleTarifCondClient3 = interface(IBIArticleTarifCond3)
   ['{7C538B42-6E4C-4021-AE5B-25D4BD133FE5}']
   function Get_FactoryArticleTarifCondClient : IBITypeObjectFactory; safecall;
   function Get_Client : IBOClient3; safecall;
    // FactoryArticleTarifCondClient : property FactoryArticleTarifCond 
   property FactoryArticleTarifCondClient:IBITypeObjectFactory read Get_FactoryArticleTarifCondClient;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
  end;


// IBOArticleTarifCondClient3 : IBOArticleTarifCondClient3 Interface

 IBOArticleTarifCondClient3Disp = dispinterface
   ['{7C538B42-6E4C-4021-AE5B-25D4BD133FE5}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleCond : property ArticleCond 
   property ArticleCond:IBOArticleCond3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // FactoryArticleTarifCondClient : property FactoryArticleTarifCond 
   property FactoryArticleTarifCondClient:IBITypeObjectFactory  readonly dispid 120;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 121;
  end;


// IBOArticleTarifGammeClient3 : IBOArticleTarifGammeClient3 Interface

 IBOArticleTarifGammeClient3 = interface(IBIArticleTarifGamme3)
   ['{1F28C5A0-214C-4D9D-A889-28D13271889E}']
   function Get_FactoryArticleTarifGammeClient : IBITypeObjectFactory; safecall;
   function Get_Client : IBOClient3; safecall;
   function Get_TG_Ref : WideString; safecall;
   procedure Set_TG_Ref(const pVal:WideString); safecall;
    // FactoryArticleTarifGammeClient : property FactoryArticleTarifGammeClient 
   property FactoryArticleTarifGammeClient:IBITypeObjectFactory read Get_FactoryArticleTarifGammeClient;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client;
    // TG_Ref : property TG_Ref 
   property TG_Ref:WideString read Get_TG_Ref write Set_TG_Ref;
  end;


// IBOArticleTarifGammeClient3 : IBOArticleTarifGammeClient3 Interface

 IBOArticleTarifGammeClient3Disp = dispinterface
   ['{1F28C5A0-214C-4D9D-A889-28D13271889E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 dispid 102;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 dispid 103;
    // Prix : property Prix 
   property Prix:Double dispid 104;
    // FactoryArticleTarifGammeClient : property FactoryArticleTarifGammeClient 
   property FactoryArticleTarifGammeClient:IBITypeObjectFactory  readonly dispid 120;
    // Client : property Client 
   property Client:IBOClient3  readonly dispid 121;
    // TG_Ref : property TG_Ref 
   property TG_Ref:WideString dispid 122;
  end;


// IBOArticleTarifCategorie3 : IBOArticleTarifCategorie3 Interface

 IBOArticleTarifCategorie3 = interface(IBIArticleTarifVente3)
   ['{CD62459C-9BBB-4CC1-8E15-5124022916B9}']
   function Get_FactoryArticleTarifCategorie : IBITypeObjectFactory; safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
   procedure Set_CategorieTarif(const pCategorieTarif:IBPCategorieTarif); safecall;
    // FactoryArticleTarifCategorie : property FactoryArticleTarifCategorie 
   property FactoryArticleTarifCategorie:IBITypeObjectFactory read Get_FactoryArticleTarifCategorie;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
  end;


// IBOArticleTarifCategorie3 : IBOArticleTarifCategorie3 Interface

 IBOArticleTarifCategorie3Disp = dispinterface
   ['{CD62459C-9BBB-4CC1-8E15-5124022916B9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryArticleTarifGamme : property FactoryArticleTarifGamme 
   property FactoryArticleTarifGamme:IBITypeObjectFactory  readonly dispid 100;
    // FactoryArticleTarifQte : property FactoryArticleTarifQte 
   property FactoryArticleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Article : property Article 
   property Article:IBOArticle3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // PrixDevise : property PrixDevise 
   property PrixDevise:Double dispid 105;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // FactoryArticleTarifCond : property FactoryArticleTarifCond 
   property FactoryArticleTarifCond:IBITypeObjectFactory  readonly dispid 120;
    // Coefficient : property Coefficient 
   property Coefficient:Double dispid 121;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool dispid 122;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi dispid 123;
    // Calcul : property Calcul 
   property Calcul:WordBool dispid 124;
    // FactoryArticleTarifCategorie : property FactoryArticleTarifCategorie 
   property FactoryArticleTarifCategorie:IBITypeObjectFactory  readonly dispid 130;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif dispid 131;
  end;


// IBOArticleTarifQteCategorie3 : IBOArticleTarifQteCategorie3 Interface

 IBOArticleTarifQteCategorie3 = interface(IBIArticleTarifQte3)
   ['{15AAEFA4-1358-4005-8CBB-4E2386E1801E}']
   function Get_FactoryArticleTarifQteCategorie : IBITypeObjectFactory; safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
    // FactoryArticleTarifQteCategorie : property FactoryArticleTarifQte 
   property FactoryArticleTarifQteCategorie:IBITypeObjectFactory read Get_FactoryArticleTarifQteCategorie;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif;
  end;


// IBOArticleTarifQteCategorie3 : IBOArticleTarifQteCategorie3 Interface

 IBOArticleTarifQteCategorie3Disp = dispinterface
   ['{15AAEFA4-1358-4005-8CBB-4E2386E1801E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
    // PrixNet : property PrixNet 
   property PrixNet:Double dispid 104;
    // FactoryArticleTarifQteCategorie : property FactoryArticleTarifQte 
   property FactoryArticleTarifQteCategorie:IBITypeObjectFactory  readonly dispid 130;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif  readonly dispid 131;
  end;


// IBOArticleTarifCondCategorie3 : IBOArticleTarifCondCategorie3 Interface

 IBOArticleTarifCondCategorie3 = interface(IBIArticleTarifCond3)
   ['{3A3278F2-42EC-4601-9DD1-02C93112E872}']
   function Get_FactoryArticleTarifCondCategorie : IBITypeObjectFactory; safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
    // FactoryArticleTarifCondCategorie : property FactoryTarifCondCategorie 
   property FactoryArticleTarifCondCategorie:IBITypeObjectFactory read Get_FactoryArticleTarifCondCategorie;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif;
  end;


// IBOArticleTarifCondCategorie3 : IBOArticleTarifCondCategorie3 Interface

 IBOArticleTarifCondCategorie3Disp = dispinterface
   ['{3A3278F2-42EC-4601-9DD1-02C93112E872}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleCond : property ArticleCond 
   property ArticleCond:IBOArticleCond3 dispid 102;
    // Prix : property Prix 
   property Prix:Double dispid 103;
    // FactoryArticleTarifCondCategorie : property FactoryTarifCondCategorie 
   property FactoryArticleTarifCondCategorie:IBITypeObjectFactory  readonly dispid 120;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif  readonly dispid 121;
  end;


// IBOArticleTarifGammeCategorie3 : IBOArticleTarifGammeCategorie3 Interface

 IBOArticleTarifGammeCategorie3 = interface(IBIArticleTarifGamme3)
   ['{425F2822-D9A5-4E58-97B4-81495E9744A4}']
   function Get_FactoryArticleTarifGammeCategorie : IBITypeObjectFactory; safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
    // FactoryArticleTarifGammeCategorie : property FactoryArticleTarifGammeCategorie 
   property FactoryArticleTarifGammeCategorie:IBITypeObjectFactory read Get_FactoryArticleTarifGammeCategorie;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif;
  end;


// IBOArticleTarifGammeCategorie3 : IBOArticleTarifGammeCategorie3 Interface

 IBOArticleTarifGammeCategorie3Disp = dispinterface
   ['{425F2822-D9A5-4E58-97B4-81495E9744A4}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 100;
    // ArticleTarif : property ArticleTarif 
   property ArticleTarif:IBIArticleTarif3  readonly dispid 101;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3 dispid 102;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3 dispid 103;
    // Prix : property Prix 
   property Prix:Double dispid 104;
    // FactoryArticleTarifGammeCategorie : property FactoryArticleTarifGammeCategorie 
   property FactoryArticleTarifGammeCategorie:IBITypeObjectFactory  readonly dispid 120;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif  readonly dispid 121;
  end;


// IBOFamilleParamCompta3 : IBOFamilleParamCompta3 Interface

 IBOFamilleParamCompta3 = interface(IBIParamCompta3)
   ['{296446E4-C983-4082-B6E3-E9AF2555F92A}']
   function Get_FactoryFamilleParamCompta : IBITypeObjectFactory; safecall;
   function Get_Famille : IBOFamille3; safecall;
    // FactoryFamilleParamCompta : property FactoryFamilleParamCompta 
   property FactoryFamilleParamCompta:IBITypeObjectFactory read Get_FactoryFamilleParamCompta;
    // Famille : property Famille 
   property Famille:IBOFamille3 read Get_Famille;
  end;


// IBOFamilleParamCompta3 : IBOFamilleParamCompta3 Interface

 IBOFamilleParamCompta3Disp = dispinterface
   ['{296446E4-C983-4082-B6E3-E9AF2555F92A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // CategorieCompta : property CategorieCompta 
   property CategorieCompta:IBICategorieCompta dispid 100;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 101;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 102;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 103;
    // OldTaxe : property OldTaxe 
   property OldTaxe[sElt:Smallint]:IBOTaxe3 dispid 104;
    // DateApplication : property DateApplication 
   property DateApplication[sElt:Smallint]:TDateTime dispid 105;
    // TaxeDateApplication : property TaxeDateApplication 
   property TaxeDateApplication[sElt:Smallint]:IBOTaxe3  readonly dispid 106;
    // FactoryFamilleParamCompta : property FactoryFamilleParamCompta 
   property FactoryFamilleParamCompta:IBITypeObjectFactory  readonly dispid 120;
    // Famille : property Famille 
   property Famille:IBOFamille3  readonly dispid 121;
  end;


// IBODepotContact3 : IBODepotContact3 Interface

 IBODepotContact3 = interface(IBIContact2)
   ['{2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}']
   function Get_FactoryDepotContact : IBITypeObjectFactory; safecall;
   function Get_Depot : IBODepot3; safecall;
    // FactoryDepotContact : property FactoryDepotContact 
   property FactoryDepotContact:IBITypeObjectFactory read Get_FactoryDepotContact;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot;
  end;


// IBODepotContact3 : IBODepotContact3 Interface

 IBODepotContact3Disp = dispinterface
   ['{2ED3CFC4-616F-44C2-829F-5DE7BDD3A040}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Nom : property Nom 
   property Nom:WideString dispid 100;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 101;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 104;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite dispid 108;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact dispid 109;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 122;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 123;
    // Skype : property Skype 
   property Skype:WideString dispid 124;
    // FactoryDepotContact : property FactoryDepotContact 
   property FactoryDepotContact:IBITypeObjectFactory  readonly dispid 120;
    // Depot : property Depot 
   property Depot:IBODepot3  readonly dispid 121;
  end;


// IBODocumentLigneLienCM : IBODocumentLigneLienCM Interface contremarque

 IBODocumentLigneLienCM = interface(IBIPersistObject)
   ['{5801365B-8A41-40CE-A251-1DC6A24346BE}']
   function Get_DocumentLigneIn : IBODocumentLigne3; safecall;
   function Get_DocumentLigneOut : IBODocumentLigne3; safecall;
   function Get_Qte : Double; safecall;
    // DocumentLigneIn : property DocumentLigne entree 
   property DocumentLigneIn:IBODocumentLigne3 read Get_DocumentLigneIn;
    // DocumentLigneOut : property DocumentLigne sortie 
   property DocumentLigneOut:IBODocumentLigne3 read Get_DocumentLigneOut;
    // Qte : property Qte 
   property Qte:Double read Get_Qte;
  end;


// IBODocumentLigneLienCM : IBODocumentLigneLienCM Interface contremarque

 IBODocumentLigneLienCMDisp = dispinterface
   ['{5801365B-8A41-40CE-A251-1DC6A24346BE}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // DocumentLigneIn : property DocumentLigne entree 
   property DocumentLigneIn:IBODocumentLigne3  readonly dispid 151;
    // DocumentLigneOut : property DocumentLigne sortie 
   property DocumentLigneOut:IBODocumentLigne3  readonly dispid 152;
    // Qte : property Qte 
   property Qte:Double  readonly dispid 153;
  end;


// IBODocumentStockLigne3 : IBODocumentStockLigne3 Interface

 IBODocumentStockLigne3 = interface(IBODocumentLigne3)
   ['{91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}']
   function Get_DocumentStock : IBODocumentStock3; safecall;
   function Get_DL_NoColis : WideString; safecall;
   procedure Set_DL_NoColis(const pVal:WideString); safecall;
   function Get_DL_TNomencl : WordBool; safecall;
   function Get_ArticleCompose : IBOArticle3; safecall;
   procedure Set_ArticleCompose(const pArticle:IBOArticle3); safecall;
   function Get_DL_DateAvancement : TDateTime; safecall;
   procedure Set_DL_DateAvancement(const pVal:TDateTime); safecall;
   function Get_DO_DateFabrication : TDateTime; safecall;
   procedure Set_DO_DateFabrication(const pVal:TDateTime); safecall;
    // DocumentStock : property DocumentStock 
   property DocumentStock:IBODocumentStock3 read Get_DocumentStock;
    // DL_NoColis : property DL_NoColis 
   property DL_NoColis:WideString read Get_DL_NoColis write Set_DL_NoColis;
    // DL_TNomencl : property DL_TNomencl 
   property DL_TNomencl:WordBool read Get_DL_TNomencl;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 read Get_ArticleCompose write Set_ArticleCompose;
    // DL_DateAvancement : property DL_DateAvancement 
   property DL_DateAvancement:TDateTime read Get_DL_DateAvancement write Set_DL_DateAvancement;
    // DO_DateFabrication : property DO_DateFabrication 
   property DO_DateFabrication:TDateTime read Get_DO_DateFabrication write Set_DO_DateFabrication;
  end;


// IBODocumentStockLigne3 : IBODocumentStockLigne3 Interface

 IBODocumentStockLigne3Disp = dispinterface
   ['{91CC00D3-8F8A-41ED-8F98-1B5AFB96CD7F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);dispid 126;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);dispid 127;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);dispid 128;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);dispid 129;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);dispid 130;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);dispid 134;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;dispid 141;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;dispid 142;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);dispid 143;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);dispid 144;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);dispid 145;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 101;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 131;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 102;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 103;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 104;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 105;
    // DL_Design : property DL_Design 
   property DL_Design:WideString dispid 106;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 107;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double dispid 108;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double dispid 109;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double dispid 110;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 111;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 112;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double dispid 113;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double dispid 114;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType  readonly dispid 115;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString dispid 116;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double dispid 117;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 118;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double  readonly dispid 119;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString dispid 120;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime dispid 121;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime dispid 122;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool dispid 123;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool  readonly dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 125;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 132;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot dispid 133;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 135;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString dispid 136;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 137;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 216;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory  readonly dispid 138;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 139;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString  readonly dispid 140;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer dispid 146;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString dispid 147;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double  readonly dispid 148;
    // DocumentStock : property DocumentStock 
   property DocumentStock:IBODocumentStock3  readonly dispid 200;
    // DL_NoColis : property DL_NoColis 
   property DL_NoColis:WideString dispid 204;
    // DL_TNomencl : property DL_TNomencl 
   property DL_TNomencl:WordBool  readonly dispid 205;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 dispid 206;
    // DL_DateAvancement : property DL_DateAvancement 
   property DL_DateAvancement:TDateTime dispid 207;
    // DO_DateFabrication : property DO_DateFabrication 
   property DO_DateFabrication:TDateTime dispid 208;
  end;


// IBODocumentAcompte3 : IBODocumentAcompte3 Interface

 IBODocumentAcompte3 = interface(IBIPersistObject)
   ['{6703E377-CF13-4F07-8675-FBEF6D668F46}']
   function Get_FactoryDocumentAcompte : IBITypeObjectFactory; safecall;
   function Get_DocumentPart : IBODocumentPart3; safecall;
   function Get_DR_Date : TDateTime; safecall;
   procedure Set_DR_Date(const pVal:TDateTime); safecall;
   function Get_DR_Libelle : WideString; safecall;
   procedure Set_DR_Libelle(const pVal:WideString); safecall;
   function Get_DR_Montant : Double; safecall;
   procedure Set_DR_Montant(const pVal:Double); safecall;
   function Get_DR_MontantDev : Double; safecall;
   procedure Set_DR_MontantDev(const pVal:Double); safecall;
   function Get_Reglement : IBPReglement3; safecall;
   procedure Set_Reglement(const pReglement:IBPReglement3); safecall;
    // FactoryDocumentAcompte : property FactoryDocumentAcompte 
   property FactoryDocumentAcompte:IBITypeObjectFactory read Get_FactoryDocumentAcompte;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3 read Get_DocumentPart;
    // DR_Date : property DR_Date 
   property DR_Date:TDateTime read Get_DR_Date write Set_DR_Date;
    // DR_Libelle : property DR_Libelle 
   property DR_Libelle:WideString read Get_DR_Libelle write Set_DR_Libelle;
    // DR_Montant : property DR_Montant 
   property DR_Montant:Double read Get_DR_Montant write Set_DR_Montant;
    // DR_MontantDev : property DR_MontantDev 
   property DR_MontantDev:Double read Get_DR_MontantDev write Set_DR_MontantDev;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 read Get_Reglement write Set_Reglement;
  end;


// IBODocumentAcompte3 : IBODocumentAcompte3 Interface

 IBODocumentAcompte3Disp = dispinterface
   ['{6703E377-CF13-4F07-8675-FBEF6D668F46}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocumentAcompte : property FactoryDocumentAcompte 
   property FactoryDocumentAcompte:IBITypeObjectFactory  readonly dispid 100;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3  readonly dispid 101;
    // DR_Date : property DR_Date 
   property DR_Date:TDateTime dispid 102;
    // DR_Libelle : property DR_Libelle 
   property DR_Libelle:WideString dispid 103;
    // DR_Montant : property DR_Montant 
   property DR_Montant:Double dispid 104;
    // DR_MontantDev : property DR_MontantDev 
   property DR_MontantDev:Double dispid 105;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 106;
  end;


// IBODocumentEcheance3 : IBODocumentEcheance3 Interface

 IBODocumentEcheance3 = interface(IBIPersistObject)
   ['{CEA4D379-037A-4085-8DA9-B53C1B7FB30E}']
   function Get_FactoryDocumentEcheance : IBITypeObjectFactory; safecall;
   function Get_DocumentPart : IBODocumentPart3; safecall;
   function Get_DR_Date : TDateTime; safecall;
   procedure Set_DR_Date(const pVal:TDateTime); safecall;
   function Get_DR_Pourcent : Double; safecall;
   procedure Set_DR_Pourcent(const pVal:Double); safecall;
   function Get_DR_Montant : Double; safecall;
   procedure Set_DR_Montant(const pVal:Double); safecall;
   function Get_DR_MontantDev : Double; safecall;
   procedure Set_DR_MontantDev(const pVal:Double); safecall;
   function Get_Reglement : IBPReglement3; safecall;
   procedure Set_Reglement(const pReglement:IBPReglement3); safecall;
   function Get_DR_Equil : WordBool; safecall;
   function Get_DR_MontantCalcule : Double; safecall;
   function Get_DR_MontantCalculeDev : Double; safecall;
    // FactoryDocumentEcheance : property FactoryDocumentEcheance 
   property FactoryDocumentEcheance:IBITypeObjectFactory read Get_FactoryDocumentEcheance;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3 read Get_DocumentPart;
    // DR_Date : property DR_Date 
   property DR_Date:TDateTime read Get_DR_Date write Set_DR_Date;
    // DR_Pourcent : property DR_Pourcent 
   property DR_Pourcent:Double read Get_DR_Pourcent write Set_DR_Pourcent;
    // DR_Montant : property DR_Montant 
   property DR_Montant:Double read Get_DR_Montant write Set_DR_Montant;
    // DR_MontantDev : property DR_MontantDev 
   property DR_MontantDev:Double read Get_DR_MontantDev write Set_DR_MontantDev;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 read Get_Reglement write Set_Reglement;
    // DR_Equil : property DR_Equil 
   property DR_Equil:WordBool read Get_DR_Equil;
    // DR_MontantCalcule : DR_Montant calculé en fonction du NetAPayé du document 
   property DR_MontantCalcule:Double read Get_DR_MontantCalcule;
    // DR_MontantCalculeDev : DR_MontantDev calculé en fonction du NetAPayé du document 
   property DR_MontantCalculeDev:Double read Get_DR_MontantCalculeDev;
  end;


// IBODocumentEcheance3 : IBODocumentEcheance3 Interface

 IBODocumentEcheance3Disp = dispinterface
   ['{CEA4D379-037A-4085-8DA9-B53C1B7FB30E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryDocumentEcheance : property FactoryDocumentEcheance 
   property FactoryDocumentEcheance:IBITypeObjectFactory  readonly dispid 100;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3  readonly dispid 102;
    // DR_Date : property DR_Date 
   property DR_Date:TDateTime dispid 103;
    // DR_Pourcent : property DR_Pourcent 
   property DR_Pourcent:Double dispid 104;
    // DR_Montant : property DR_Montant 
   property DR_Montant:Double dispid 105;
    // DR_MontantDev : property DR_MontantDev 
   property DR_MontantDev:Double dispid 106;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 107;
    // DR_Equil : property DR_Equil 
   property DR_Equil:WordBool  readonly dispid 108;
    // DR_MontantCalcule : DR_Montant calculé en fonction du NetAPayé du document 
   property DR_MontantCalcule:Double  readonly dispid 109;
    // DR_MontantCalculeDev : DR_MontantDev calculé en fonction du NetAPayé du document 
   property DR_MontantCalculeDev:Double  readonly dispid 110;
  end;


// IBODocumentAchatLigne3 : IBODocumentAchatLigne3 Interface

 IBODocumentAchatLigne3 = interface(IBODocumentPartLigne3)
   ['{B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}']
   function Get_DocumentAchat : IBODocumentAchat3; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
   function Get_StockValeur : Double; safecall;
   function Get_DL_Frais : Double; safecall;
   procedure Set_DL_Frais(const pVal:Double); safecall;
    // SetDefaultRemise : methode SetDefaultRemise 
   procedure SetDefaultRemise;safecall;
   function Get_Valorisation : IDocLigneValorisation; safecall;
    // DocumentAchat : property DocumentAchat 
   property DocumentAchat:IBODocumentAchat3 read Get_DocumentAchat;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur;
    // StockValeur : property StockValeur 
   property StockValeur:Double read Get_StockValeur;
    // DL_Frais : property DL_Frais 
   property DL_Frais:Double read Get_DL_Frais write Set_DL_Frais;
    // Valorisation : property Valorisation 
   property Valorisation:IDocLigneValorisation read Get_Valorisation;
  end;


// IBODocumentAchatLigne3 : IBODocumentAchatLigne3 Interface

 IBODocumentAchatLigne3Disp = dispinterface
   ['{B8FCBA5A-B91C-469A-8FE3-3BA2A3D59275}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);dispid 126;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);dispid 127;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);dispid 128;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);dispid 129;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);dispid 130;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);dispid 134;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;dispid 141;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;dispid 142;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);dispid 143;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);dispid 144;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);dispid 145;
    // SetDefaultArticleReferenceFournisseur : methode SetDefaultArticleReferenceFournisseur 
   procedure SetDefaultArticleReferenceFournisseur(sRef:WideString;Qte:Double);dispid 224;
    // SetDefaultRemise : methode SetDefaultRemise 
   procedure SetDefaultRemise;dispid 304;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 101;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 131;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 102;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 103;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 104;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 105;
    // DL_Design : property DL_Design 
   property DL_Design:WideString dispid 106;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 107;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double dispid 108;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double dispid 109;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double dispid 110;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 111;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 112;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double dispid 113;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double dispid 114;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType  readonly dispid 115;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString dispid 116;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double dispid 117;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 118;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double  readonly dispid 119;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString dispid 120;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime dispid 121;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime dispid 122;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool dispid 123;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool  readonly dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 125;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 132;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot dispid 133;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 135;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString dispid 136;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 137;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 216;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory  readonly dispid 138;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 139;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString  readonly dispid 140;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer dispid 146;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString dispid 147;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double  readonly dispid 148;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3  readonly dispid 200;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3  readonly dispid 201;
    // DL_DateBC : property DL_DateBC 
   property DL_DateBC:TDateTime  readonly dispid 203;
    // DL_DateBL : property DL_DateBL 
   property DL_DateBL:TDateTime  readonly dispid 204;
    // DL_PieceBC : property DL_PieceBC 
   property DL_PieceBC:WideString  readonly dispid 205;
    // DL_PieceBL : property DL_PieceBL 
   property DL_PieceBL:WideString  readonly dispid 206;
    // IsRemisePied : property IsRemisePied 
   property IsRemisePied:WordBool dispid 207;
    // IsRemiseExceptionnelle : property IsRemiseExceptionnelle 
   property IsRemiseExceptionnelle:WordBool dispid 208;
    // IsTotalisatrice : property IsTotalisatrice 
   property IsTotalisatrice:WordBool dispid 209;
    // DL_QteBC : property DL_QteBC 
   property DL_QteBC:Double dispid 210;
    // DL_QteBL : property DL_QteBL 
   property DL_QteBL:Double dispid 211;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 212;
    // DL_PUBC : property DL_PUBC 
   property DL_PUBC:Double  readonly dispid 213;
    // AF_RefFourniss : property AF_RefFourniss 
   property AF_RefFourniss:WideString dispid 214;
    // DL_TypePL : property DL_TypePL 
   property DL_TypePL:DocumentLigneProvenanceType  readonly dispid 215;
    // DL_Escompte : property DL_Escompte 
   property DL_Escompte:WordBool  readonly dispid 217;
    // DL_PUDevise : property DL_PUDevise 
   property DL_PUDevise:Double dispid 218;
    // DL_PUTTC : property DL_PUTTC 
   property DL_PUTTC:Double dispid 219;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 220;
    // DL_NonLivre : property DL_NonLivre 
   property DL_NonLivre:WordBool  readonly dispid 221;
    // DL_MontantTTC : property DL_MontantTTC 
   property DL_MontantTTC:Double  readonly dispid 223;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 225;
    // DocumentAchat : property DocumentAchat 
   property DocumentAchat:IBODocumentAchat3  readonly dispid 300;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3  readonly dispid 301;
    // StockValeur : property StockValeur 
   property StockValeur:Double  readonly dispid 302;
    // DL_Frais : property DL_Frais 
   property DL_Frais:Double dispid 303;
    // Valorisation : property Valorisation 
   property Valorisation:IDocLigneValorisation  readonly dispid 305;
  end;


// IBODocumentInterneLigne3 : IBODocumentInterneLigne3 Interface

 IBODocumentInterneLigne3 = interface(IBODocumentPartLigne3)
   ['{5CECD75E-537E-421D-B851-BB0EEA6C0E09}']
   function Get_DocumentInterne : IBODocumentInterne3; safecall;
   function Get_Client : IBOClient3; safecall;
   procedure Set_Client(const pClient:IBOClient3); safecall;
   function Get_AC_RefClient : WideString; safecall;
   procedure Set_AC_RefClient(const pVal:WideString); safecall;
   function Get_ArticleCompose : IBOArticle3; safecall;
   procedure Set_ArticleCompose(const pArticle:IBOArticle3); safecall;
   function Get_IsComposeDeCompose : WordBool; safecall;
   function Get_IsComposeDeComposant : WordBool; safecall;
   function Get_LignesComposants : IBICollection; safecall;
   function Get_DL_QteRessource : Integer; safecall;
   procedure Set_DL_QteRessource(const pVal:Integer); safecall;
   function Get_Marge : Double; safecall;
   function Get_PrixRevient : Double; safecall;
    // SetDefaultArticleReferenceClient : methode SetDefaultArticleReferenceClient 
   procedure SetDefaultArticleReferenceClient(sRef:WideString;Qte:Double);safecall;
    // DocumentInterne : property DocumentInterne 
   property DocumentInterne:IBODocumentInterne3 read Get_DocumentInterne;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client write Set_Client;
    // AC_RefClient : property AC_RefClient 
   property AC_RefClient:WideString read Get_AC_RefClient write Set_AC_RefClient;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 read Get_ArticleCompose write Set_ArticleCompose;
    // IsComposeDeCompose : property IsComposeDeCompose 
   property IsComposeDeCompose:WordBool read Get_IsComposeDeCompose;
    // IsComposeDeComposant : property IsComposeDeComposant 
   property IsComposeDeComposant:WordBool read Get_IsComposeDeComposant;
    // LignesComposants : property LignesComposants 
   property LignesComposants:IBICollection read Get_LignesComposants;
    // DL_QteRessource : property DL_QteRessource 
   property DL_QteRessource:Integer read Get_DL_QteRessource write Set_DL_QteRessource;
    // Marge : Marge en valeur 
   property Marge:Double read Get_Marge;
    // PrixRevient : Prix de revient 
   property PrixRevient:Double read Get_PrixRevient;
  end;


// IBODocumentInterneLigne3 : IBODocumentInterneLigne3 Interface

 IBODocumentInterneLigne3Disp = dispinterface
   ['{5CECD75E-537E-421D-B851-BB0EEA6C0E09}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // SetDefaultArticleReference : methode SetDefaultArticleReference 
   procedure SetDefaultArticleReference(sRef:WideString;Qte:Double);dispid 126;
    // SetDefaultArticle : methode SetDefaultArticle 
   procedure SetDefaultArticle(pArticle:IBOArticle3;Qte:Double);dispid 127;
    // SetDefaultArticleMonoGamme : methode SetDefaultArticleMonoGamme 
   procedure SetDefaultArticleMonoGamme(pEnum:IBOArticleGammeEnum3;Qte:Double);dispid 128;
    // SetDefaultArticleDoubleGamme : methode SetDefaultArticleDoubleGamme 
   procedure SetDefaultArticleDoubleGamme(pEnum1:IBOArticleGammeEnum3;pEnum2:IBOArticleGammeEnum3;Qte:Double);dispid 129;
    // SetDefaultArticleConditionnement : methode SetDefaultArticleConditionnement 
   procedure SetDefaultArticleConditionnement(pArtCond:IBOArticleCond3;Qte:Double);dispid 130;
    // SetDefaultLot : methode SetDefaultLot 
   procedure SetDefaultLot(pLot:IBOArticleDepotLot;Qte:Double);dispid 134;
    // MoveUp : methode MoveUp 
   function MoveUp:WordBool;dispid 141;
    // MoveDown : methode MoveDown 
   function MoveDown:WordBool;dispid 142;
    // WriteBefore : methode WriteBefore 
   procedure WriteBefore(pNextLigne:IBODocumentLigne3);dispid 143;
    // WriteDefaultBefore : methode WriteDefaultBefore 
   procedure WriteDefaultBefore(pNextLigne:IBODocumentLigne3);dispid 144;
    // SetRessourceDefault : methode SetRessourceDefault 
   procedure SetRessourceDefault(pRessource:IBIRessource);dispid 145;
    // SetDefaultArticleReferenceFournisseur : methode SetDefaultArticleReferenceFournisseur 
   procedure SetDefaultArticleReferenceFournisseur(sRef:WideString;Qte:Double);dispid 224;
    // SetDefaultArticleReferenceClient : methode SetDefaultArticleReferenceClient 
   procedure SetDefaultArticleReferenceClient(sRef:WideString;Qte:Double);dispid 318;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 101;
    // FactoryDocumentLigne : property FactoryDocumentLigne 
   property FactoryDocumentLigne:IBODocumentLigneFactory  readonly dispid 131;
    // DO_Domaine : property DO_Domaine 
   property DO_Domaine:DomaineType  readonly dispid 102;
    // DO_Type : property DO_Type 
   property DO_Type:DocumentType  readonly dispid 103;
    // DO_Ref : property DO_Ref 
   property DO_Ref:WideString dispid 104;
    // Article : property Article 
   property Article:IBOArticle3  readonly dispid 105;
    // DL_Design : property DL_Design 
   property DL_Design:WideString dispid 106;
    // DL_Qte : property DL_Qte 
   property DL_Qte:Double dispid 107;
    // DL_PoidsNet : property DL_PoidsNet 
   property DL_PoidsNet:Double dispid 108;
    // DL_PoidsBrut : property DL_PoidsBrut 
   property DL_PoidsBrut:Double dispid 109;
    // DL_PrixUnitaire : property DL_PrixUnitaire 
   property DL_PrixUnitaire:Double dispid 110;
    // ArticleGammeEnum1 : property ArticleGammeEnum1 
   property ArticleGammeEnum1:IBOArticleGammeEnum3  readonly dispid 111;
    // ArticleGammeEnum2 : property ArticleGammeEnum2 
   property ArticleGammeEnum2:IBOArticleGammeEnum3  readonly dispid 112;
    // DL_PrixRU : property DL_PrixRU 
   property DL_PrixRU:Double dispid 113;
    // DL_CMUP : property DL_CMUP 
   property DL_CMUP:Double dispid 114;
    // DL_MvtStock : property DL_MvtStock 
   property DL_MvtStock:DocumentLigneMvtStockType  readonly dispid 115;
    // EU_Enumere : property EU_Enumere 
   property EU_Enumere:WideString dispid 116;
    // EU_Qte : property EU_Qte 
   property EU_Qte:Double dispid 117;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 118;
    // DL_MontantHT : property DL_MontantHT 
   property DL_MontantHT:Double  readonly dispid 119;
    // LS_NoSerie : property LS_NoSerie 
   property LS_NoSerie:WideString dispid 120;
    // LS_Peremption : property LS_Peremption 
   property LS_Peremption:TDateTime dispid 121;
    // LS_Fabrication : property LS_Fabrication 
   property LS_Fabrication:TDateTime dispid 122;
    // Valorisee : property Valorisee 
   property Valorisee:WordBool dispid 123;
    // DL_FactPoids : property DL_FactPoids 
   property DL_FactPoids:WordBool  readonly dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre:IBIValues  readonly dispid 125;
    // FactoryDocumentLigneEmplacement : property FactoryDocumentLigneEmplacement 
   property FactoryDocumentLigneEmplacement:IBITypeObjectFactory  readonly dispid 132;
    // Lot : property Lot 
   property Lot:IBOArticleDepotLot dispid 133;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 135;
    // TxtComplementaire : property TxtComplementaire 
   property TxtComplementaire:WideString dispid 136;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 137;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 216;
    // FactoryDocumentLigneLienCM : property FactoryDocumentLigneLienCM 
   property FactoryDocumentLigneLienCM:IBITypeObjectFactory  readonly dispid 138;
    // DO_Date : property DO_Date 
   property DO_Date:TDateTime dispid 139;
    // LS_ComplementOut : property LS_ComplementOut 
   property LS_ComplementOut:WideString  readonly dispid 140;
    // DL_PieceOFProd : property DL_PieceOFProd 
   property DL_PieceOFProd:Integer dispid 146;
    // DL_Operation : property DL_Operation 
   property DL_Operation:WideString dispid 147;
    // DefaultCMUP : property DefaultCMUP 
   property DefaultCMUP:Double  readonly dispid 148;
    // DocumentPart : property DocumentPart 
   property DocumentPart:IBODocumentPart3  readonly dispid 200;
    // Tiers : property Tiers 
   property Tiers:IBOTiersPart3  readonly dispid 201;
    // DL_DateBC : property DL_DateBC 
   property DL_DateBC:TDateTime  readonly dispid 203;
    // DL_DateBL : property DL_DateBL 
   property DL_DateBL:TDateTime  readonly dispid 204;
    // DL_PieceBC : property DL_PieceBC 
   property DL_PieceBC:WideString  readonly dispid 205;
    // DL_PieceBL : property DL_PieceBL 
   property DL_PieceBL:WideString  readonly dispid 206;
    // IsRemisePied : property IsRemisePied 
   property IsRemisePied:WordBool dispid 207;
    // IsRemiseExceptionnelle : property IsRemiseExceptionnelle 
   property IsRemiseExceptionnelle:WordBool dispid 208;
    // IsTotalisatrice : property IsTotalisatrice 
   property IsTotalisatrice:WordBool dispid 209;
    // DL_QteBC : property DL_QteBC 
   property DL_QteBC:Double dispid 210;
    // DL_QteBL : property DL_QteBL 
   property DL_QteBL:Double dispid 211;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 212;
    // DL_PUBC : property DL_PUBC 
   property DL_PUBC:Double  readonly dispid 213;
    // AF_RefFourniss : property AF_RefFourniss 
   property AF_RefFourniss:WideString dispid 214;
    // DL_TypePL : property DL_TypePL 
   property DL_TypePL:DocumentLigneProvenanceType  readonly dispid 215;
    // DL_Escompte : property DL_Escompte 
   property DL_Escompte:WordBool  readonly dispid 217;
    // DL_PUDevise : property DL_PUDevise 
   property DL_PUDevise:Double dispid 218;
    // DL_PUTTC : property DL_PUTTC 
   property DL_PUTTC:Double dispid 219;
    // DO_DateLivr : property DO_DateLivr 
   property DO_DateLivr:TDateTime dispid 220;
    // DL_NonLivre : property DL_NonLivre 
   property DL_NonLivre:WordBool  readonly dispid 221;
    // DL_MontantTTC : property DL_MontantTTC 
   property DL_MontantTTC:Double  readonly dispid 223;
    // Taxe : property Taxe 
   property Taxe[sElt:Smallint]:IBOTaxe3 dispid 225;
    // DocumentInterne : property DocumentInterne 
   property DocumentInterne:IBODocumentInterne3  readonly dispid 300;
    // Client : property Client 
   property Client:IBOClient3 dispid 301;
    // AC_RefClient : property AC_RefClient 
   property AC_RefClient:WideString dispid 302;
    // ArticleCompose : property ArticleCompose 
   property ArticleCompose:IBOArticle3 dispid 305;
    // IsComposeDeCompose : property IsComposeDeCompose 
   property IsComposeDeCompose:WordBool  readonly dispid 306;
    // IsComposeDeComposant : property IsComposeDeComposant 
   property IsComposeDeComposant:WordBool  readonly dispid 307;
    // LignesComposants : property LignesComposants 
   property LignesComposants:IBICollection  readonly dispid 308;
    // DL_QteRessource : property DL_QteRessource 
   property DL_QteRessource:Integer dispid 315;
    // Marge : Marge en valeur 
   property Marge:Double  readonly dispid 316;
    // PrixRevient : Prix de revient 
   property PrixRevient:Double  readonly dispid 317;
  end;


// IBOModeleEcritureLigne3 : IBOModeleEcritureLigne3 Interface

 IBOModeleEcritureLigne3 = interface(IBIPersistObject)
   ['{4792B8D7-633B-4133-8002-B9BB0DF4BD95}']
   function Get_FactoryModeleEcritureLigne : IBITypeObjectFactory; safecall;
   function Get_FactoryModeleEcritureLigneA : IBITypeObjectFactory; safecall;
   function Get_ModeleEcriture : IBOModeleEcriture3; safecall;
   function Get_PG_Jour : WideString; safecall;
   procedure Set_PG_Jour(const pVal:WideString); safecall;
   function Get_PG_Piece : WideString; safecall;
   procedure Set_PG_Piece(const pVal:WideString); safecall;
   function Get_PG_RefPiece : WideString; safecall;
   procedure Set_PG_RefPiece(const pVal:WideString); safecall;
   function Get_CG_Num : WideString; safecall;
   procedure Set_CG_Num(const pVal:WideString); safecall;
   function Get_CG_NumCont : WideString; safecall;
   procedure Set_CG_NumCont(const pVal:WideString); safecall;
   function Get_CT_Num : WideString; safecall;
   procedure Set_CT_Num(const pVal:WideString); safecall;
   function Get_PG_Intitule : WideString; safecall;
   procedure Set_PG_Intitule(const pVal:WideString); safecall;
   function Get_Reglement : IBPReglement3; safecall;
   procedure Set_Reglement(const pReglement:IBPReglement3); safecall;
   function Get_CalculReglement : WordBool; safecall;
   procedure Set_CalculReglement(const pVal:WordBool); safecall;
   function Get_PG_Echeance : WideString; safecall;
   procedure Set_PG_Echeance(const pVal:WideString); safecall;
   function Get_PG_Parite : WideString; safecall;
   procedure Set_PG_Parite(const pVal:WideString); safecall;
   function Get_PG_Quantite : WideString; safecall;
   procedure Set_PG_Quantite(const pVal:WideString); safecall;
   function Get_PG_Sens : EcritureSensType; safecall;
   procedure Set_PG_Sens(const pVal:EcritureSensType); safecall;
   function Get_PG_Montant : WideString; safecall;
   procedure Set_PG_Montant(const pVal:WideString); safecall;
   function Get_CT_NumCont : WideString; safecall;
   procedure Set_CT_NumCont(const pVal:WideString); safecall;
   function Get_PG_Devise : WideString; safecall;
   procedure Set_PG_Devise(const pVal:WideString); safecall;
   function Get_TA_Code : WideString; safecall;
   procedure Set_TA_Code(const pVal:WideString); safecall;
   function Get_TA_Provenance : TaxeProvenanceType; safecall;
   procedure Set_TA_Provenance(const pVal:TaxeProvenanceType); safecall;
   function Get_HasTA_Provenance : WordBool; safecall;
   procedure Set_HasTA_Provenance(const pVal:WordBool); safecall;
   function Get_CalculTA_Provenance : WordBool; safecall;
   procedure Set_CalculTA_Provenance(const pVal:WordBool); safecall;
   function Get_Devise : IBPDevise2; safecall;
   procedure Set_Devise(const pDevise:IBPDevise2); safecall;
   function Get_CalculDevise : WordBool; safecall;
   procedure Set_CalculDevise(const pVal:WordBool); safecall;
   function Get_InfoLibre(sElt:Smallint) : WideString; safecall;
   procedure Set_InfoLibre(const sElt:Smallint; const parInfoLibre:WideString); safecall;
   function Get_PG_Reference : WideString; safecall;
   procedure Set_PG_Reference(const pVal:WideString); safecall;
    // FactoryModeleEcritureLigne : property FactoryModeleEcritureLigne 
   property FactoryModeleEcritureLigne:IBITypeObjectFactory read Get_FactoryModeleEcritureLigne;
    // FactoryModeleEcritureLigneA : property FactoryModeleEcritureLigneA 
   property FactoryModeleEcritureLigneA:IBITypeObjectFactory read Get_FactoryModeleEcritureLigneA;
    // ModeleEcriture : property ModeleEcriture 
   property ModeleEcriture:IBOModeleEcriture3 read Get_ModeleEcriture;
    // PG_Jour : property PG_Jour 
   property PG_Jour:WideString read Get_PG_Jour write Set_PG_Jour;
    // PG_Piece : property PG_Piece 
   property PG_Piece:WideString read Get_PG_Piece write Set_PG_Piece;
    // PG_RefPiece : property PG_RefPiece 
   property PG_RefPiece:WideString read Get_PG_RefPiece write Set_PG_RefPiece;
    // CG_Num : property CG_Num 
   property CG_Num:WideString read Get_CG_Num write Set_CG_Num;
    // CG_NumCont : property CG_NumCont 
   property CG_NumCont:WideString read Get_CG_NumCont write Set_CG_NumCont;
    // CT_Num : property CT_Num 
   property CT_Num:WideString read Get_CT_Num write Set_CT_Num;
    // PG_Intitule : property PG_Intitule 
   property PG_Intitule:WideString read Get_PG_Intitule write Set_PG_Intitule;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 read Get_Reglement write Set_Reglement;
    // CalculReglement : property CalculReglement 
   property CalculReglement:WordBool read Get_CalculReglement write Set_CalculReglement;
    // PG_Echeance : property PG_Echeance 
   property PG_Echeance:WideString read Get_PG_Echeance write Set_PG_Echeance;
    // PG_Parite : property PG_Parite 
   property PG_Parite:WideString read Get_PG_Parite write Set_PG_Parite;
    // PG_Quantite : property PG_Quantite 
   property PG_Quantite:WideString read Get_PG_Quantite write Set_PG_Quantite;
    // PG_Sens : property PG_Sens 
   property PG_Sens:EcritureSensType read Get_PG_Sens write Set_PG_Sens;
    // PG_Montant : property PG_Montant 
   property PG_Montant:WideString read Get_PG_Montant write Set_PG_Montant;
    // CT_NumCont : property CT_NumCont 
   property CT_NumCont:WideString read Get_CT_NumCont write Set_CT_NumCont;
    // PG_Devise : property PG_Devise 
   property PG_Devise:WideString read Get_PG_Devise write Set_PG_Devise;
    // TA_Code : property TA_Code 
   property TA_Code:WideString read Get_TA_Code write Set_TA_Code;
    // TA_Provenance : property TA_Provenance 
   property TA_Provenance:TaxeProvenanceType read Get_TA_Provenance write Set_TA_Provenance;
    // HasTA_Provenance : property HasTA_Provenance 
   property HasTA_Provenance:WordBool read Get_HasTA_Provenance write Set_HasTA_Provenance;
    // CalculTA_Provenance : property CalculTA_Provenance 
   property CalculTA_Provenance:WordBool read Get_CalculTA_Provenance write Set_CalculTA_Provenance;
    // Devise : property Devise 
   property Devise:IBPDevise2 read Get_Devise write Set_Devise;
    // CalculDevise : property CalculDevise 
   property CalculDevise:WordBool read Get_CalculDevise write Set_CalculDevise;
    // InfoLibre : property InfoLibre 
   property InfoLibre[sElt:Smallint]:WideString read Get_InfoLibre write Set_InfoLibre;
    // PG_Reference : property PG_Reference 
   property PG_Reference:WideString read Get_PG_Reference write Set_PG_Reference;
  end;


// IBOModeleEcritureLigne3 : IBOModeleEcritureLigne3 Interface

 IBOModeleEcritureLigne3Disp = dispinterface
   ['{4792B8D7-633B-4133-8002-B9BB0DF4BD95}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModeleEcritureLigne : property FactoryModeleEcritureLigne 
   property FactoryModeleEcritureLigne:IBITypeObjectFactory  readonly dispid 100;
    // FactoryModeleEcritureLigneA : property FactoryModeleEcritureLigneA 
   property FactoryModeleEcritureLigneA:IBITypeObjectFactory  readonly dispid 101;
    // ModeleEcriture : property ModeleEcriture 
   property ModeleEcriture:IBOModeleEcriture3  readonly dispid 102;
    // PG_Jour : property PG_Jour 
   property PG_Jour:WideString dispid 103;
    // PG_Piece : property PG_Piece 
   property PG_Piece:WideString dispid 104;
    // PG_RefPiece : property PG_RefPiece 
   property PG_RefPiece:WideString dispid 105;
    // CG_Num : property CG_Num 
   property CG_Num:WideString dispid 106;
    // CG_NumCont : property CG_NumCont 
   property CG_NumCont:WideString dispid 107;
    // CT_Num : property CT_Num 
   property CT_Num:WideString dispid 108;
    // PG_Intitule : property PG_Intitule 
   property PG_Intitule:WideString dispid 109;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 110;
    // CalculReglement : property CalculReglement 
   property CalculReglement:WordBool dispid 111;
    // PG_Echeance : property PG_Echeance 
   property PG_Echeance:WideString dispid 112;
    // PG_Parite : property PG_Parite 
   property PG_Parite:WideString dispid 113;
    // PG_Quantite : property PG_Quantite 
   property PG_Quantite:WideString dispid 114;
    // PG_Sens : property PG_Sens 
   property PG_Sens:EcritureSensType dispid 115;
    // PG_Montant : property PG_Montant 
   property PG_Montant:WideString dispid 116;
    // CT_NumCont : property CT_NumCont 
   property CT_NumCont:WideString dispid 117;
    // PG_Devise : property PG_Devise 
   property PG_Devise:WideString dispid 118;
    // TA_Code : property TA_Code 
   property TA_Code:WideString dispid 119;
    // TA_Provenance : property TA_Provenance 
   property TA_Provenance:TaxeProvenanceType dispid 120;
    // HasTA_Provenance : property HasTA_Provenance 
   property HasTA_Provenance:WordBool dispid 121;
    // CalculTA_Provenance : property CalculTA_Provenance 
   property CalculTA_Provenance:WordBool dispid 122;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 123;
    // CalculDevise : property CalculDevise 
   property CalculDevise:WordBool dispid 124;
    // InfoLibre : property InfoLibre 
   property InfoLibre[sElt:Smallint]:WideString dispid 125;
    // PG_Reference : property PG_Reference 
   property PG_Reference:WideString dispid 126;
  end;


// IBOModeleEcritureLigneA3 : IBOModeleEcritureLigneA3 Interface

 IBOModeleEcritureLigneA3 = interface(IBIPersistObject)
   ['{6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}']
   function Get_FactoryModeleEcritureLigneA : IBITypeObjectFactory; safecall;
   function Get_ModeleEcritureLigne : IBOModeleEcritureLigne3; safecall;
   function Get_Analytique : IBPAnalytique3; safecall;
   procedure Set_Analytique(const pVal:IBPAnalytique3); safecall;
   function Get_CA_Num : WideString; safecall;
   procedure Set_CA_Num(const pVal:WideString); safecall;
   function Get_PA_Montant : WideString; safecall;
   procedure Set_PA_Montant(const pVal:WideString); safecall;
   function Get_PA_Quantite : WideString; safecall;
   procedure Set_PA_Quantite(const pVal:WideString); safecall;
    // FactoryModeleEcritureLigneA : property FactoryModeleEcritureLigneA 
   property FactoryModeleEcritureLigneA:IBITypeObjectFactory read Get_FactoryModeleEcritureLigneA;
    // ModeleEcritureLigne : property ModeleEcritureLigne 
   property ModeleEcritureLigne:IBOModeleEcritureLigne3 read Get_ModeleEcritureLigne;
    // Analytique : property Analytique 
   property Analytique:IBPAnalytique3 read Get_Analytique write Set_Analytique;
    // CA_Num : property CA_Num 
   property CA_Num:WideString read Get_CA_Num write Set_CA_Num;
    // PA_Montant : property PA_Montant 
   property PA_Montant:WideString read Get_PA_Montant write Set_PA_Montant;
    // PA_Quantite : property PA_Quantite 
   property PA_Quantite:WideString read Get_PA_Quantite write Set_PA_Quantite;
  end;


// IBOModeleEcritureLigneA3 : IBOModeleEcritureLigneA3 Interface

 IBOModeleEcritureLigneA3Disp = dispinterface
   ['{6CFCA978-7FC5-41C1-97CA-79AF7F74B12F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModeleEcritureLigneA : property FactoryModeleEcritureLigneA 
   property FactoryModeleEcritureLigneA:IBITypeObjectFactory  readonly dispid 100;
    // ModeleEcritureLigne : property ModeleEcritureLigne 
   property ModeleEcritureLigne:IBOModeleEcritureLigne3  readonly dispid 101;
    // Analytique : property Analytique 
   property Analytique:IBPAnalytique3 dispid 102;
    // CA_Num : property CA_Num 
   property CA_Num:WideString dispid 105;
    // PA_Montant : property PA_Montant 
   property PA_Montant:WideString dispid 103;
    // PA_Quantite : property PA_Quantite 
   property PA_Quantite:WideString dispid 104;
  end;


// IBOFamilleTarifCategorie : IBOFamilleTarifCategorie Interface

 IBOFamilleTarifCategorie = interface(IBIFamilleTarifVente)
   ['{6F3F0DB1-7921-45AC-B002-23AED4EA291C}']
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
   procedure Set_CategorieTarif(const pCategorieTarif:IBPCategorieTarif); safecall;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif write Set_CategorieTarif;
  end;


// IBOFamilleTarifCategorie : IBOFamilleTarifCategorie Interface

 IBOFamilleTarifCategorieDisp = dispinterface
   ['{6F3F0DB1-7921-45AC-B002-23AED4EA291C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryFamilleTarifQte : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQte:IBITypeObjectFactory  readonly dispid 101;
    // Famille : property Famille 
   property Famille:IBOFamille3 dispid 102;
    // GammeRemise : property GammeRemise 
   property GammeRemise:IBPGamme dispid 104;
    // Devise : property Devise 
   property Devise:IBPDevise2 dispid 106;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 107;
    // IsHorsRemise : property IsHorsRemise 
   property IsHorsRemise:WordBool dispid 108;
    // Coefficient : property Coefficient 
   property Coefficient:Double dispid 121;
    // PrixTTC : property PrixTTC 
   property PrixTTC:WordBool dispid 122;
    // Arrondi : property Arrondi 
   property Arrondi:IBPArrondi dispid 123;
    // Calcul : property Calcul 
   property Calcul:WordBool dispid 124;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif dispid 131;
  end;


// IBOFamilleTarifQteCategorie : IBOFamilleTarifQteCategorie Interface

 IBOFamilleTarifQteCategorie = interface(IBIFamilleTarifQte)
   ['{5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}']
   function Get_FactoryFamilleTarifQteCategorie : IBITypeObjectFactory; safecall;
   function Get_CategorieTarif : IBPCategorieTarif; safecall;
    // FactoryFamilleTarifQteCategorie : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQteCategorie:IBITypeObjectFactory read Get_FactoryFamilleTarifQteCategorie;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif read Get_CategorieTarif;
  end;


// IBOFamilleTarifQteCategorie : IBOFamilleTarifQteCategorie Interface

 IBOFamilleTarifQteCategorieDisp = dispinterface
   ['{5CFDB24E-7FB9-48FA-A4C8-F3670D80DD99}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Famille : property Famille 
   property Famille:IBOFamille3  readonly dispid 100;
    // FamilleTarif : property FamilleTarif 
   property FamilleTarif:IBIFamilleTarif  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
    // FactoryFamilleTarifQteCategorie : property FactoryFamilleTarifQte 
   property FactoryFamilleTarifQteCategorie:IBITypeObjectFactory  readonly dispid 130;
    // CategorieTarif : property CategorieTarif 
   property CategorieTarif:IBPCategorieTarif  readonly dispid 131;
  end;


// IBOFamilleTarifQteFournisseur : IBOFamilleTarifQteFournisseur Interface

 IBOFamilleTarifQteFournisseur = interface(IBIFamilleTarifQte)
   ['{B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}']
   function Get_FactoryFamilleTarifQteFournisseur : IBITypeObjectFactory; safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
    // FactoryFamilleTarifQteFournisseur : property FactoryFamilleTarifQteFournisseur 
   property FactoryFamilleTarifQteFournisseur:IBITypeObjectFactory read Get_FactoryFamilleTarifQteFournisseur;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur;
  end;


// IBOFamilleTarifQteFournisseur : IBOFamilleTarifQteFournisseur Interface

 IBOFamilleTarifQteFournisseurDisp = dispinterface
   ['{B0E09EDC-DB04-4F0A-9AB4-1BB575D41C88}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Famille : property Famille 
   property Famille:IBOFamille3  readonly dispid 100;
    // FamilleTarif : property FamilleTarif 
   property FamilleTarif:IBIFamilleTarif  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
    // FactoryFamilleTarifQteFournisseur : property FactoryFamilleTarifQteFournisseur 
   property FactoryFamilleTarifQteFournisseur:IBITypeObjectFactory  readonly dispid 120;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3  readonly dispid 121;
  end;


// IBOModeleGrilleLigne : IBOModeleGrilleLigne Interface

 IBOModeleGrilleLigne = interface(IBIPersistObject)
   ['{7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}']
   function Get_FactoryModeleGrilleLigne : IBOModeleGrilleLigneFactory; safecall;
   function Get_ModeleGrille : IBOModeleGrille; safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pCompteG:IBOCompteG3); safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pCompteA:IBOCompteA3); safecall;
   function Get_EG_TRepart : RepartitionType; safecall;
   procedure Set_EG_TRepart(const pVal:RepartitionType); safecall;
   function Get_EG_VRepart : Double; safecall;
   procedure Set_EG_VRepart(const pVal:Double); safecall;
    // FactoryModeleGrilleLigne : property FactoryModeleGrilleLigne 
   property FactoryModeleGrilleLigne:IBOModeleGrilleLigneFactory read Get_FactoryModeleGrilleLigne;
    // ModeleGrille : property ModeleGrille 
   property ModeleGrille:IBOModeleGrille read Get_ModeleGrille;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // EG_TRepart : property EG_TRepart 
   property EG_TRepart:RepartitionType read Get_EG_TRepart write Set_EG_TRepart;
    // EG_VRepart : property EG_VRepart 
   property EG_VRepart:Double read Get_EG_VRepart write Set_EG_VRepart;
  end;


// IBOModeleGrilleLigne : IBOModeleGrilleLigne Interface

 IBOModeleGrilleLigneDisp = dispinterface
   ['{7B17FAE8-DABF-4CFB-9567-B3BEDCED138E}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryModeleGrilleLigne : property FactoryModeleGrilleLigne 
   property FactoryModeleGrilleLigne:IBOModeleGrilleLigneFactory  readonly dispid 100;
    // ModeleGrille : property ModeleGrille 
   property ModeleGrille:IBOModeleGrille  readonly dispid 101;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 102;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 103;
    // EG_TRepart : property EG_TRepart 
   property EG_TRepart:RepartitionType dispid 104;
    // EG_VRepart : property EG_VRepart 
   property EG_VRepart:Double dispid 105;
  end;


// IBOModeleReglementLigne : IBOModeleReglementLigne Interface

 IBOModeleReglementLigne = interface(IBIReglement)
   ['{37820001-5870-449F-981C-1BDF4C12F35A}']
   function Get_FactoryModeleReglementLigne : IBITypeObjectFactory; safecall;
   function Get_ModeleReglement : IBOModeleReglement; safecall;
    // FactoryModeleReglementLigne : property FactoryModeleReglementLigne 
   property FactoryModeleReglementLigne:IBITypeObjectFactory read Get_FactoryModeleReglementLigne;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement read Get_ModeleReglement;
  end;


// IBOModeleReglementLigne : IBOModeleReglementLigne Interface

 IBOModeleReglementLigneDisp = dispinterface
   ['{37820001-5870-449F-981C-1BDF4C12F35A}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Echeance : methode Echeance 
   function Echeance(dDate:TDateTime):TDateTime;dispid 106;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Reglement : property Reglement 
   property Reglement:IBPReglement3 dispid 100;
    // Condition : property Condition 
   property Condition:ReglementConditionType dispid 101;
    // NbJour : property NbJour 
   property NbJour:Smallint dispid 102;
    // JourTb : property JourTb 
   property JourTb[sElt:Smallint]:Smallint dispid 103;
    // TRepart : property TRepart 
   property TRepart:ReglementRepartitionType dispid 104;
    // VRepart : property VRepart 
   property VRepart:Double dispid 105;
    // FactoryModeleReglementLigne : property FactoryModeleReglementLigne 
   property FactoryModeleReglementLigne:IBITypeObjectFactory  readonly dispid 200;
    // ModeleReglement : property ModeleReglement 
   property ModeleReglement:IBOModeleReglement  readonly dispid 201;
  end;


// IBOBaremeCommissionQte : IBOBaremeCommissionQte Interface

 IBOBaremeCommissionQte = interface(IBIPersistObject)
   ['{89E28BE1-2A85-460A-97DE-925D385DDB03}']
   function Get_BaremeCommission : IBOBaremeCommission; safecall;
   function Get_BorneSup : Double; safecall;
   procedure Set_BorneSup(const pVal:Double); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
    // BaremeCommission : property BaremeCommission 
   property BaremeCommission:IBOBaremeCommission read Get_BaremeCommission;
    // BorneSup : property BorneSup 
   property BorneSup:Double read Get_BorneSup write Set_BorneSup;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
  end;


// IBOBaremeCommissionQte : IBOBaremeCommissionQte Interface

 IBOBaremeCommissionQteDisp = dispinterface
   ['{89E28BE1-2A85-460A-97DE-925D385DDB03}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // BaremeCommission : property BaremeCommission 
   property BaremeCommission:IBOBaremeCommission  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
  end;


// IBOBaremeRabaisQte : IBOBaremeRabaisQte Interface

 IBOBaremeRabaisQte = interface(IBIPersistObject)
   ['{C5223E93-5506-413B-8993-6BEAB4551E58}']
   function Get_BaremeRabais : IBOBaremeRabais; safecall;
   function Get_BorneSup : Double; safecall;
   procedure Set_BorneSup(const pVal:Double); safecall;
   function Get_Remise : IRemise2; safecall;
   procedure Set_Remise(const pObject:IRemise2); safecall;
    // BaremeRabais : property BaremeRabais 
   property BaremeRabais:IBOBaremeRabais read Get_BaremeRabais;
    // BorneSup : property BorneSup 
   property BorneSup:Double read Get_BorneSup write Set_BorneSup;
    // Remise : property Remise 
   property Remise:IRemise2 read Get_Remise write Set_Remise;
  end;


// IBOBaremeRabaisQte : IBOBaremeRabaisQte Interface

 IBOBaremeRabaisQteDisp = dispinterface
   ['{C5223E93-5506-413B-8993-6BEAB4551E58}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // BaremeRabais : property BaremeRabais 
   property BaremeRabais:IBOBaremeRabais  readonly dispid 101;
    // BorneSup : property BorneSup 
   property BorneSup:Double dispid 102;
    // Remise : property Remise 
   property Remise:IRemise2 dispid 103;
  end;


// IBOEcritureMedia : IBOEcritureMedia Interface

 IBOEcritureMedia = interface(IBIMedia)
   ['{45D795D8-23CD-4530-BECB-BEB548FD788F}']
   function Get_FactoryEcritureMedia : IBITypeObjectFactory; safecall;
   function Get_Ecriture : IBOEcriture3; safecall;
    // FactoryEcritureMedia : property FactoryEcritureMedia 
   property FactoryEcritureMedia:IBITypeObjectFactory read Get_FactoryEcritureMedia;
    // Ecriture : property Ecriture 
   property Ecriture:IBOEcriture3 read Get_Ecriture;
  end;


// IBOEcritureMedia : IBOEcritureMedia Interface

 IBOEcritureMediaDisp = dispinterface
   ['{45D795D8-23CD-4530-BECB-BEB548FD788F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString dispid 100;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString dispid 101;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString  readonly dispid 102;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString dispid 103;
    // FactoryEcritureMedia : property FactoryEcritureMedia 
   property FactoryEcritureMedia:IBITypeObjectFactory  readonly dispid 200;
    // Ecriture : property Ecriture 
   property Ecriture:IBOEcriture3  readonly dispid 201;
  end;


// IBOBanqueContact : IBOBanqueContact Interface

 IBOBanqueContact = interface(IBIContact2)
   ['{72B11AB9-C89B-4764-8219-5E486D12B678}']
   function Get_FactoryBanqueContact : IBITypeObjectFactory; safecall;
   function Get_Banque : IBOBanque; safecall;
    // FactoryBanqueContact : property FactoryBanqueContact 
   property FactoryBanqueContact:IBITypeObjectFactory read Get_FactoryBanqueContact;
    // Banque : property Banque 
   property Banque:IBOBanque read Get_Banque;
  end;


// IBOBanqueContact : IBOBanqueContact Interface

 IBOBanqueContactDisp = dispinterface
   ['{72B11AB9-C89B-4764-8219-5E486D12B678}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Nom : property Nom 
   property Nom:WideString dispid 100;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 101;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 104;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite dispid 108;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact dispid 109;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 122;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 123;
    // Skype : property Skype 
   property Skype:WideString dispid 124;
    // FactoryBanqueContact : property FactoryBanqueContact 
   property FactoryBanqueContact:IBITypeObjectFactory  readonly dispid 110;
    // Banque : property Banque 
   property Banque:IBOBanque  readonly dispid 111;
  end;


// IBOCompteAContact : IBOCompteAContact Interface

 IBOCompteAContact = interface(IBIContact2)
   ['{29AD8292-C9B8-4FD5-8D7A-83F7D772395D}']
   function Get_FactoryCompteAContact : IBITypeObjectFactory; safecall;
   function Get_CompteA : IBOCompteA3; safecall;
    // FactoryCompteAContact : property FactoryCompteAContact 
   property FactoryCompteAContact:IBITypeObjectFactory read Get_FactoryCompteAContact;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA;
  end;


// IBOCompteAContact : IBOCompteAContact Interface

 IBOCompteAContactDisp = dispinterface
   ['{29AD8292-C9B8-4FD5-8D7A-83F7D772395D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Nom : property Nom 
   property Nom:WideString dispid 100;
    // Prenom : property Prenom 
   property Prenom:WideString dispid 101;
    // ServiceContact : property ServiceContact 
   property ServiceContact:IBPServiceContact dispid 102;
    // Fonction : property Fonction 
   property Fonction:WideString dispid 103;
    // Telecom : property Telecom 
   property Telecom:ITelecom dispid 104;
    // Civilite : property Civilite 
   property Civilite:ContactCivilite dispid 108;
    // TypeContact : property TypeContact 
   property TypeContact:IBPContact dispid 109;
    // Facebook : property Facebook 
   property Facebook:WideString dispid 122;
    // LinkedIn : property LinkedIn 
   property LinkedIn:WideString dispid 123;
    // Skype : property Skype 
   property Skype:WideString dispid 124;
    // FactoryCompteAContact : property FactoryCompteAContact 
   property FactoryCompteAContact:IBITypeObjectFactory  readonly dispid 110;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3  readonly dispid 111;
  end;


// IBOCompteAMedia : IBOCompteAMedia Interface

 IBOCompteAMedia = interface(IBIMedia)
   ['{652D08CE-08D6-4799-B54B-8D65812DD776}']
   function Get_FactoryCompteAMedia : IBITypeObjectFactory; safecall;
   function Get_CompteA : IBOCompteA3; safecall;
    // FactoryCompteAMedia : property FactoryCompteAMedia 
   property FactoryCompteAMedia:IBITypeObjectFactory read Get_FactoryCompteAMedia;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA;
  end;


// IBOCompteAMedia : IBOCompteAMedia Interface

 IBOCompteAMediaDisp = dispinterface
   ['{652D08CE-08D6-4799-B54B-8D65812DD776}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString dispid 100;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString dispid 101;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString  readonly dispid 102;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString dispid 103;
    // FactoryCompteAMedia : property FactoryCompteAMedia 
   property FactoryCompteAMedia:IBITypeObjectFactory  readonly dispid 110;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3  readonly dispid 111;
  end;


// IBOEcritureOD : IBOEcritureOD Interface

 IBOEcritureOD = interface(IBIPersistObject)
   ['{1502538D-5FF2-4771-A5CE-F767C839A0F9}']
   function Get_Journal : IBOJournalA; safecall;
   procedure Set_Journal(const pJournal:IBOJournalA); safecall;
   function Get_Date : TDateTime; safecall;
   procedure Set_Date(const pVal:TDateTime); safecall;
   function Get_ER_Piece : WideString; safecall;
   procedure Set_ER_Piece(const pVal:WideString); safecall;
   function Get_ER_RefPiece : WideString; safecall;
   procedure Set_ER_RefPiece(const pVal:WideString); safecall;
   function Get_CompteG : IBOCompteG3; safecall;
   procedure Set_CompteG(const pCompteG:IBOCompteG3); safecall;
   function Get_ER_Intitule : WideString; safecall;
   procedure Set_ER_Intitule(const pVal:WideString); safecall;
   function Get_ER_Sens : EcritureSensType; safecall;
   procedure Set_ER_Sens(const pVal:EcritureSensType); safecall;
   function Get_ER_Type : EcritureODType; safecall;
   function Get_ER_Norme : EcritureNormeType; safecall;
   procedure Set_ER_Norme(const pVal:EcritureNormeType); safecall;
   function Get_CompteA : IBOCompteA3; safecall;
   procedure Set_CompteA(const pCompteA:IBOCompteA3); safecall;
   function Get_ER_MontantA : Double; safecall;
   procedure Set_ER_MontantA(const pVal:Double); safecall;
   function Get_ER_QuantiteA : Double; safecall;
   procedure Set_ER_QuantiteA(const pVal:Double); safecall;
    // Journal : property Journal 
   property Journal:IBOJournalA read Get_Journal write Set_Journal;
    // Date : property Date 
   property Date:TDateTime read Get_Date write Set_Date;
    // ER_Piece : property ER_Piece 
   property ER_Piece:WideString read Get_ER_Piece write Set_ER_Piece;
    // ER_RefPiece : property ER_RefPiece 
   property ER_RefPiece:WideString read Get_ER_RefPiece write Set_ER_RefPiece;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 read Get_CompteG write Set_CompteG;
    // ER_Intitule : property ER_Intitule 
   property ER_Intitule:WideString read Get_ER_Intitule write Set_ER_Intitule;
    // ER_Sens : property ER_Sens 
   property ER_Sens:EcritureSensType read Get_ER_Sens write Set_ER_Sens;
    // ER_Type : property ER_Type 
   property ER_Type:EcritureODType read Get_ER_Type;
    // ER_Norme : property ER_Norme 
   property ER_Norme:EcritureNormeType read Get_ER_Norme write Set_ER_Norme;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 read Get_CompteA write Set_CompteA;
    // ER_MontantA : property ER_MontantA 
   property ER_MontantA:Double read Get_ER_MontantA write Set_ER_MontantA;
    // ER_QuantiteA : property ER_QuantiteA 
   property ER_QuantiteA:Double read Get_ER_QuantiteA write Set_ER_QuantiteA;
  end;


// IBOEcritureOD : IBOEcritureOD Interface

 IBOEcritureODDisp = dispinterface
   ['{1502538D-5FF2-4771-A5CE-F767C839A0F9}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // Journal : property Journal 
   property Journal:IBOJournalA dispid 101;
    // Date : property Date 
   property Date:TDateTime dispid 102;
    // ER_Piece : property ER_Piece 
   property ER_Piece:WideString dispid 103;
    // ER_RefPiece : property ER_RefPiece 
   property ER_RefPiece:WideString dispid 104;
    // CompteG : property CompteG 
   property CompteG:IBOCompteG3 dispid 105;
    // ER_Intitule : property ER_Intitule 
   property ER_Intitule:WideString dispid 106;
    // ER_Sens : property ER_Sens 
   property ER_Sens:EcritureSensType dispid 107;
    // ER_Type : property ER_Type 
   property ER_Type:EcritureODType  readonly dispid 108;
    // ER_Norme : property ER_Norme 
   property ER_Norme:EcritureNormeType dispid 109;
    // CompteA : property CompteA 
   property CompteA:IBOCompteA3 dispid 110;
    // ER_MontantA : property ER_MontantA 
   property ER_MontantA:Double dispid 111;
    // ER_QuantiteA : property ER_QuantiteA 
   property ER_QuantiteA:Double dispid 112;
  end;


// IBODocumentMedia : IBODocumentMedia3 Interface

 IBODocumentMedia = interface(IBIMedia)
   ['{7176322D-DEE2-4535-BE67-6E60F46C948F}']
   function Get_Document : IBODocument3; safecall;
   function Get_IsATransmettre : WordBool; safecall;
   procedure Set_IsATransmettre(const pVal:WordBool); safecall;
    // Document : property Document 
   property Document:IBODocument3 read Get_Document;
    // IsATransmettre : property IsATransmettre 
   property IsATransmettre:WordBool read Get_IsATransmettre write Set_IsATransmettre;
  end;


// IBODocumentMedia : IBODocumentMedia3 Interface

 IBODocumentMediaDisp = dispinterface
   ['{7176322D-DEE2-4535-BE67-6E60F46C948F}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // ME_Commentaire : property ME_Commentaire 
   property ME_Commentaire:WideString dispid 100;
    // ME_Fichier : property ME_Fichier 
   property ME_Fichier:WideString dispid 101;
    // ME_TypeMIME : property ME_TypeMIME 
   property ME_TypeMIME:WideString  readonly dispid 102;
    // ME_Origine : property ME_Origine 
   property ME_Origine:WideString dispid 103;
    // Document : property Document 
   property Document:IBODocument3  readonly dispid 201;
    // IsATransmettre : property IsATransmettre 
   property IsATransmettre:WordBool dispid 202;
  end;


// IBOAgenda : IBOAgenda Interface

 IBOAgenda = interface(IBIPersistObject)
   ['{C0B75F00-3BAA-4943-9DCC-630A85D6B226}']
   function Get_FactoryAgenda : IBOAgendaFactory; safecall;
   function Get_Agenda : IBPAgenda; safecall;
   procedure Set_Agenda(const pVal:IBPAgenda); safecall;
   function Get_AgendaEnum : WideString; safecall;
   procedure Set_AgendaEnum(const pVal:WideString); safecall;
   function Get_TypeInteresse : AgendaTypeInteresse; safecall;
   procedure Set_TypeInteresse(const pVal:AgendaTypeInteresse); safecall;
   function Get_Depot : IBODepot3; safecall;
   procedure Set_Depot(const pVal:IBODepot3); safecall;
   function Get_Client : IBOClient3; safecall;
   procedure Set_Client(const pVal:IBOClient3); safecall;
   function Get_Fournisseur : IBOFournisseur3; safecall;
   procedure Set_Fournisseur(const pVal:IBOFournisseur3); safecall;
   function Get_Collaborateur : IBOCollaborateur; safecall;
   procedure Set_Collaborateur(const pVal:IBOCollaborateur); safecall;
   function Get_Article : IBOArticle3; safecall;
   procedure Set_Article(const pVal:IBOArticle3); safecall;
   function Get_Ressource : IBIRessource; safecall;
   procedure Set_Ressource(const pVal:IBIRessource); safecall;
   function Get_AG_Period : IDateTimePeriod; safecall;
   procedure Set_AG_Period(const pTimePeriod:IDateTimePeriod); safecall;
   function Get_AG_Veille : WordBool; safecall;
   procedure Set_AG_Veille(const pVal:WordBool); safecall;
   function Get_AG_Comment : WideString; safecall;
   procedure Set_AG_Comment(const pVal:WideString); safecall;
   function Get_AgendaType : AgendaType; safecall;
   function Get_AG_Confirme : WordBool; safecall;
   procedure Set_AG_Confirme(const pVal:WordBool); safecall;
   function Get_AG_Ignorer : WordBool; safecall;
   procedure Set_AG_Ignorer(const pVal:WordBool); safecall;
   function Get_AG_Continue : WordBool; safecall;
   procedure Set_AG_Continue(const pVal:WordBool); safecall;
   function Get_Ligne : IBODocumentPartLigne3; safecall;
    // FactoryAgenda : property FactoryAgenda 
   property FactoryAgenda:IBOAgendaFactory read Get_FactoryAgenda;
    // Agenda : Agenda : n'a de sens que si AgendaType est de type interresse 
   property Agenda:IBPAgenda read Get_Agenda write Set_Agenda;
    // AgendaEnum : AgendaEnum : n'a de sens que si AgendaType est de type interresse 
   property AgendaEnum:WideString read Get_AgendaEnum write Set_AgendaEnum;
    // TypeInteresse : TypeInteresse : si AgendaType est différent de Interressé, TypeInterresse est forcément AgendaTypeInteresseRessource 
   property TypeInteresse:AgendaTypeInteresse read Get_TypeInteresse write Set_TypeInteresse;
    // Depot : property Depot 
   property Depot:IBODepot3 read Get_Depot write Set_Depot;
    // Client : property Client 
   property Client:IBOClient3 read Get_Client write Set_Client;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 read Get_Fournisseur write Set_Fournisseur;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur read Get_Collaborateur write Set_Collaborateur;
    // Article : property Article 
   property Article:IBOArticle3 read Get_Article write Set_Article;
    // Ressource : property Ressource 
   property Ressource:IBIRessource read Get_Ressource write Set_Ressource;
    // AG_Period : property AG_Period 
   property AG_Period:IDateTimePeriod read Get_AG_Period write Set_AG_Period;
    // AG_Veille : property AG_Veille 
   property AG_Veille:WordBool read Get_AG_Veille write Set_AG_Veille;
    // AG_Comment : property AG_Comment 
   property AG_Comment:WideString read Get_AG_Comment write Set_AG_Comment;
    // AgendaType : property AgendaType 
   property AgendaType:AgendaType read Get_AgendaType;
    // AG_Confirme : property AG_Confirme 
   property AG_Confirme:WordBool read Get_AG_Confirme write Set_AG_Confirme;
    // AG_Ignorer : AG_Ignorer : n'a de sens que si AgendaType n'est pas de type interresse 
   property AG_Ignorer:WordBool read Get_AG_Ignorer write Set_AG_Ignorer;
    // AG_Continue : AG_Continue : n'a de sens que si AgendaType n'est pas de type interresse 
   property AG_Continue:WordBool read Get_AG_Continue write Set_AG_Continue;
    // Ligne : Ligne : n'a de sens que si AgendaType est de type Document 
   property Ligne:IBODocumentPartLigne3 read Get_Ligne;
  end;


// IBOAgenda : IBOAgenda Interface

 IBOAgendaDisp = dispinterface
   ['{C0B75F00-3BAA-4943-9DCC-630A85D6B226}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Cmp : methode Cmp 
   function Cmp(pObj:IBIPersistObject):Smallint;dispid 6;
    // Remove : methode Remove 
   procedure Remove;dispid 7;
    // Write_ : methode Write 
   procedure Write_;dispid 8;
    // WriteDefault : methode WriteDefault 
   procedure WriteDefault;dispid 12;
    // Read_ : methode Read 
   procedure Read_;dispid 9;
    // CouldModified : methode CouldModified 
   procedure CouldModified;dispid 10;
    // SetDefault : methode SetDefault 
   procedure SetDefault;dispid 11;
    // Refresh : methode Refresh : Read if dirty 
   procedure Refresh;dispid 13;
    // _SetSynchronized : methode _SetSynchronized 
   procedure _SetSynchronized;dispid 15;
    // WriteTo : methode WriteTo 
   procedure WriteTo(pStream:IStream);dispid 16;
    // Factory : property Factory 
   property Factory:IBITypeObjectFactory  readonly dispid 1;
    // OID : property OID 
   property OID:IBIObjectID  readonly dispid 2;
    // IsModified : property IsModified 
   property IsModified:WordBool  readonly dispid 3;
    // IsPersistant : property IsPersistant 
   property IsPersistant:WordBool  readonly dispid 4;
    // Stream : property Stream 
   property Stream:IBIPersistStream  readonly dispid 5;
    // OIDExternal : property OIDExternal 
   property OIDExternal:IBIObjectIDExternal  readonly dispid 14;
    // FactoryAgenda : property FactoryAgenda 
   property FactoryAgenda:IBOAgendaFactory  readonly dispid 120;
    // Agenda : Agenda : n'a de sens que si AgendaType est de type interresse 
   property Agenda:IBPAgenda dispid 121;
    // AgendaEnum : AgendaEnum : n'a de sens que si AgendaType est de type interresse 
   property AgendaEnum:WideString dispid 122;
    // TypeInteresse : TypeInteresse : si AgendaType est différent de Interressé, TypeInterresse est forcément AgendaTypeInteresseRessource 
   property TypeInteresse:AgendaTypeInteresse dispid 123;
    // Depot : property Depot 
   property Depot:IBODepot3 dispid 124;
    // Client : property Client 
   property Client:IBOClient3 dispid 125;
    // Fournisseur : property Fournisseur 
   property Fournisseur:IBOFournisseur3 dispid 126;
    // Collaborateur : property Collaborateur 
   property Collaborateur:IBOCollaborateur dispid 127;
    // Article : property Article 
   property Article:IBOArticle3 dispid 128;
    // Ressource : property Ressource 
   property Ressource:IBIRessource dispid 129;
    // AG_Period : property AG_Period 
   property AG_Period:IDateTimePeriod dispid 130;
    // AG_Veille : property AG_Veille 
   property AG_Veille:WordBool dispid 132;
    // AG_Comment : property AG_Comment 
   property AG_Comment:WideString dispid 133;
    // AgendaType : property AgendaType 
   property AgendaType:AgendaType  readonly dispid 134;
    // AG_Confirme : property AG_Confirme 
   property AG_Confirme:WordBool dispid 135;
    // AG_Ignorer : AG_Ignorer : n'a de sens que si AgendaType n'est pas de type interresse 
   property AG_Ignorer:WordBool dispid 138;
    // AG_Continue : AG_Continue : n'a de sens que si AgendaType n'est pas de type interresse 
   property AG_Continue:WordBool dispid 139;
    // Ligne : Ligne : n'a de sens que si AgendaType est de type Document 
   property Ligne:IBODocumentPartLigne3  readonly dispid 140;
  end;


// IUserLot : IUserLot Element de paramètrage du processus Transfo

 IUserLot = interface(IDispatch)
   ['{2960B194-C946-4357-800D-9B2D21438256}']
   function Get_Lot : IBOArticleDepotLot; safecall;
   procedure Set_Lot(const pLot:IBOArticleDepotLot); safecall;
   function Get_LS_ComplementOut : WideString; safecall;
   procedure Set_LS_ComplementOut(const pLS_Complement:WideString); safecall;
   function Get_QteToUse : Double; safecall;
   procedure Set_QteToUse(const dQteToUse:Double); safecall;
    // Set_ : Affectation 
   procedure Set_(pLot:IBOArticleDepotLot;dQteToUse:Double;sLS_Complement:WideString);safecall;
    // Lot : Lot 
   property Lot:IBOArticleDepotLot read Get_Lot write Set_Lot;
    // LS_ComplementOut : LS_ComplementOut 
   property LS_ComplementOut:WideString read Get_LS_ComplementOut write Set_LS_ComplementOut;
    // QteToUse : QteToUse 
   property QteToUse:Double read Get_QteToUse write Set_QteToUse;
  end;


// IUserLot : IUserLot Element de paramètrage du processus Transfo

 IUserLotDisp = dispinterface
   ['{2960B194-C946-4357-800D-9B2D21438256}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Set_ : Affectation 
   procedure Set_(pLot:IBOArticleDepotLot;dQteToUse:Double;sLS_Complement:WideString);dispid 103;
    // Lot : Lot 
   property Lot:IBOArticleDepotLot dispid 100;
    // LS_ComplementOut : LS_ComplementOut 
   property LS_ComplementOut:WideString dispid 101;
    // QteToUse : QteToUse 
   property QteToUse:Double dispid 102;
  end;


// IUserEmplacement : IUserEmplacement Element de paramètrage des emplacements utilisés dans les processus

 IUserEmplacement = interface(IDispatch)
   ['{2477FBD0-0291-4223-B866-F4AB8182153D}']
   function Get_Emplacement : IBODepotEmplacement; safecall;
   procedure Set_Emplacement(const pEmpl:IBODepotEmplacement); safecall;
   function Get_QteToUse : Double; safecall;
   procedure Set_QteToUse(const dQteToUse:Double); safecall;
    // Set_ : Affectation 
   procedure Set_(pEmpl:IBODepotEmplacement;dQteToUse:Double);safecall;
    // Emplacement : Emplacement 
   property Emplacement:IBODepotEmplacement read Get_Emplacement write Set_Emplacement;
    // QteToUse : QteToUse 
   property QteToUse:Double read Get_QteToUse write Set_QteToUse;
  end;


// IUserEmplacement : IUserEmplacement Element de paramètrage des emplacements utilisés dans les processus

 IUserEmplacementDisp = dispinterface
   ['{2477FBD0-0291-4223-B866-F4AB8182153D}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Set_ : Affectation 
   procedure Set_(pEmpl:IBODepotEmplacement;dQteToUse:Double);dispid 103;
    // Emplacement : Emplacement 
   property Emplacement:IBODepotEmplacement dispid 100;
    // QteToUse : QteToUse 
   property QteToUse:Double dispid 102;
  end;


// IUserColis : IUserColis Element de paramètrage du processus Coliser

 IUserColis = interface(IDispatch)
   ['{B879AC0E-A9C4-410A-B9F2-B8781FFF523C}']
   function Get_NumColis : WideString; safecall;
   procedure Set_NumColis(const pNumColis:WideString); safecall;
   function Get_Qte : Double; safecall;
   procedure Set_Qte(const dQteColis:Double); safecall;
    // Set_ : Affectation 
   procedure Set_(sNumColis:WideString;dQteColis:Double);safecall;
    // NumColis : N° colis 
   property NumColis:WideString read Get_NumColis write Set_NumColis;
    // Qte : Qté colis 
   property Qte:Double read Get_Qte write Set_Qte;
  end;


// IUserColis : IUserColis Element de paramètrage du processus Coliser

 IUserColisDisp = dispinterface
   ['{B879AC0E-A9C4-410A-B9F2-B8781FFF523C}']
    // QueryInterface :  
   procedure QueryInterface(var riid:{!! GUID !!} OleVariant;out ppvObj:{!! Ppointer !!} OleVariant);dispid 1610612736;
    // AddRef :  
   function AddRef:LongWord;dispid 1610612737;
    // Release :  
   function Release:LongWord;dispid 1610612738;
    // GetTypeInfoCount :  
   procedure GetTypeInfoCount(out pctinfo:UInt);dispid 1610678272;
    // GetTypeInfo :  
   procedure GetTypeInfo(itinfo:UInt;lcid:LongWord;out pptinfo:{!! Ppointer !!} OleVariant);dispid 1610678273;
    // GetIDsOfNames :  
   procedure GetIDsOfNames(var riid:{!! GUID !!} OleVariant;var rgszNames:{!! PShortInt !!} OleVariant;cNames:UInt;lcid:LongWord;out rgdispid:Integer);dispid 1610678274;
    // Invoke :  
   procedure Invoke(dispidMember:Integer;var riid:{!! GUID !!} OleVariant;lcid:LongWord;wFlags:Word;var pdispparams:{!! DISPPARAMS !!} OleVariant;out pvarResult:OleVariant;out pexcepinfo:{!! EXCEPINFO !!} OleVariant;out puArgErr:UInt);dispid 1610678275;
    // Set_ : Affectation 
   procedure Set_(sNumColis:WideString;dQteColis:Double);dispid 102;
    // NumColis : N° colis 
   property NumColis:WideString dispid 100;
    // Qte : Qté colis 
   property Qte:Double dispid 101;
  end;

//CoClasses
  CoBSCPTAApplication100c = Class
  Public
    Class Function Create: IBSCPTAApplication3;
    Class Function CreateRemote(const MachineName: string): IBSCPTAApplication3;
  end;

  TAxcBSCPTAApplication100c = Class(TActiveXContainer)
  Private
    FServer:IBSCPTAApplication3;
  Public
    constructor Create(TheOwner: TComponent); override;
    destructor Destroy; override;
    property OleServer:IBSCPTAApplication3 read FServer;
  Published
    property Align;
    property Anchors;
    property AutoSize;
    property BorderSpacing;
    property ChildSizing;
    property ClientHeight;
    property ClientWidth;
    property Constraints;
    property DockSite;
    property DragCursor;
    property DragKind;
    property DragMode;
    property Enabled;
    property ParentShowHint;
    property PopupMenu;
    property ShowHint;
    property TabOrder;
    property TabStop;
    property UseDockManager default True;
    property Visible;
    property OnContextPopup;
    property OnDockDrop;
    property OnDockOver;
    property OnDragDrop;
    property OnDragOver;
    property OnEndDock;
    property OnEndDrag;
    property OnEnter;
    property OnExit;
    property OnGetSiteInfo;
    property OnGetDockCaption;
    property OnResize;
    property OnStartDock;
    property OnStartDrag;
    property OnStatusText;
    property OnUnDock;
    property Active;
  end;

  CoBSCIALApplication100c = Class
  Public
    Class Function Create: IBSCIALApplication3;
    Class Function CreateRemote(const MachineName: string): IBSCIALApplication3;
  end;

  TAxcBSCIALApplication100c = Class(TActiveXContainer)
  Private
    FServer:IBSCIALApplication3;
  Public
    constructor Create(TheOwner: TComponent); override;
    destructor Destroy; override;
    property OleServer:IBSCIALApplication3 read FServer;
  Published
    property Align;
    property Anchors;
    property AutoSize;
    property BorderSpacing;
    property ChildSizing;
    property ClientHeight;
    property ClientWidth;
    property Constraints;
    property DockSite;
    property DragCursor;
    property DragKind;
    property DragMode;
    property Enabled;
    property ParentShowHint;
    property PopupMenu;
    property ShowHint;
    property TabOrder;
    property TabStop;
    property UseDockManager default True;
    property Visible;
    property OnContextPopup;
    property OnDockDrop;
    property OnDockOver;
    property OnDragDrop;
    property OnDragOver;
    property OnEndDock;
    property OnEndDrag;
    property OnEnter;
    property OnExit;
    property OnGetSiteInfo;
    property OnGetDockCaption;
    property OnResize;
    property OnStartDock;
    property OnStartDrag;
    property OnStatusText;
    property OnUnDock;
    property Active;
  end;

implementation

uses comobj;

Class Function CoBSCPTAApplication100c.Create: IBSCPTAApplication3;
begin
  Result := CreateComObject(CLASS_BSCPTAApplication100c) as IBSCPTAApplication3;
end;

Class Function CoBSCPTAApplication100c.CreateRemote(const MachineName: string): IBSCPTAApplication3;
begin
  Result := CreateRemoteComObject(MachineName,CLASS_BSCPTAApplication100c) as IBSCPTAApplication3;
end;

constructor TAxcBSCPTAApplication100c.Create(TheOwner: TComponent);
begin
  inherited Create(TheOwner);
  FServer:=CoBSCPTAApplication100c.Create;
  ComServer:=FServer;
end;

destructor TAxcBSCPTAApplication100c.Destroy;
begin
  inherited destroy;
end;

Class Function CoBSCIALApplication100c.Create: IBSCIALApplication3;
begin
  Result := CreateComObject(CLASS_BSCIALApplication100c) as IBSCIALApplication3;
end;

Class Function CoBSCIALApplication100c.CreateRemote(const MachineName: string): IBSCIALApplication3;
begin
  Result := CreateRemoteComObject(MachineName,CLASS_BSCIALApplication100c) as IBSCIALApplication3;
end;

constructor TAxcBSCIALApplication100c.Create(TheOwner: TComponent);
begin
  inherited Create(TheOwner);
  FServer:=CoBSCIALApplication100c.Create;
  ComServer:=FServer;
end;

destructor TAxcBSCIALApplication100c.Destroy;
begin
  inherited destroy;
end;

end.
